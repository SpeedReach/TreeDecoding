{"id": "HumanEval/0", "model_memory": 48524.0, "time_taken": 10.989279985427856, "input_kv_memory": 49344.0, "memory_usagetime_metric": [1737132994.1938572, 1737132994.3658826, 1737132994.491011, 1737132994.6241388, 1737132994.7488017, 1737132994.8761876, 1737132995.0014863, 1737132995.1409717, 1737132995.274267, 1737132995.3975902, 1737132995.52937, 1737132995.6799846, 1737132995.809247, 1737132995.939282, 1737132996.069524, 1737132996.1935704, 1737132996.3216586, 1737132996.4513884, 1737132996.5740602, 1737132996.6951237, 1737132996.8289025, 1737132996.9658577, 1737132997.092811, 1737132997.2179291, 1737132997.342481, 1737132997.4760184, 1737132997.6034765, 1737132997.7344942, 1737132997.864205, 1737132997.997629, 1737132998.1257725, 1737132998.2961743, 1737132998.4242263, 1737132998.547976, 1737132998.6721375, 1737132998.8012238, 1737132998.9303575, 1737132999.0613267, 1737132999.1907132, 1737132999.3229563, 1737132999.4477293, 1737132999.5919995, 1737132999.7257648, 1737132999.8581393, 1737132999.9821746, 1737133000.1091754, 1737133000.2442975, 1737133000.3698719, 1737133000.4979289, 1737133000.6240664, 1737133000.762801, 1737133000.898088, 1737133001.0253003, 1737133001.1539636, 1737133001.2911608, 1737133001.4181383, 1737133001.5452201, 1737133001.672428, 1737133001.8011894, 1737133001.9307191, 1737133002.061753, 1737133002.1845248, 1737133002.3124828, 1737133002.44581, 1737133002.57766, 1737133002.7056735, 1737133002.8367307, 1737133002.9677424, 1737133003.1013887, 1737133003.2365627, 1737133003.3632438, 1737133003.491518, 1737133003.626208, 1737133003.7524836, 1737133003.8900263, 1737133004.023805, 1737133004.1600175, 1737133004.2912614, 1737133004.4191456, 1737133004.5480785, 1737133004.6817684, 1737133004.8144033], "score": 0, "output_len": 81, "output": "from typing import List\n\n\ndef has_close_elements(numbers: List[float], threshold: float) -> bool:\n    for i in range(len(numbers)):\n        for j in range(i + 1, len(numbers)):\n            if abs(numbers[i] - numbers[j]) < threshold:\n                return True\n    return False\n", "input_len": 160}
{"id": "HumanEval/1", "model_memory": 48506.0, "time_taken": 26.57509136199951, "input_kv_memory": 49380.0, "memory_usage": [49380.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49720.0, 49800.0, 49820.0, 49820.0, 49820.0, 49820.0, 49820.0, 49820.0, 49820.0, 49820.0, 49820.0, 49820.0, 49820.0, 49820.0, 49820.0, 49820.0, 49820.0, 49820.0, 49820.0, 49820.0, 49820.0, 49820.0, 49820.0, 49820.0, 49820.0, 49820.0, 49820.0, 49820.0, 49860.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49980.0, 50000.0, 50000.0, 50000.0, 50000.0, 50000.0, 50000.0, 50000.0, 50000.0, 50000.0, 50000.0, 50000.0, 50000.0, 50000.0, 50000.0, 50000.0, 50000.0, 50000.0, 50000.0, 50000.0, 50000.0, 50000.0, 50000.0, 50000.0, 50000.0, 50000.0, 50000.0, 50000.0, 50000.0, 50000.0, 50000.0, 50000.0, 50000.0, 50000.0, 50000.0, 50000.0, 50000.0, 50000.0, 50000.0, 50000.0, 50000.0, 50000.0, 50000.0, 50000.0, 50000.0, 50000.0, 50000.0, 50000.0, 50000.0, 50000.0, 50000.0, 50000.0, 50000.0, 50000.0, 50000.0, 50000.0, 50000.0], "time_metric": [1737133005.2960944, 1737133005.4668672, 1737133005.6013482, 1737133005.730937, 1737133005.8575218, 1737133005.985292, 1737133006.1176271, 1737133006.2456353, 1737133006.3755605, 1737133006.5102158, 1737133006.6437337, 1737133006.7664042, 1737133006.8928673, 1737133007.0206044, 1737133007.147303, 1737133007.2795804, 1737133007.412276, 1737133007.5381851, 1737133007.6673295, 1737133007.7989342, 1737133007.9238954, 1737133008.0740447, 1737133008.2126923, 1737133008.3450131, 1737133008.4895468, 1737133008.6184075, 1737133008.7562668, 1737133008.9016204, 1737133009.0415423, 1737133009.1836388, 1737133009.313901, 1737133009.4459903, 1737133009.579585, 1737133009.7159166, 1737133009.8701172, 1737133010.0011487, 1737133010.1414468, 1737133010.2799034, 1737133010.4340336, 1737133010.5629082, 1737133010.7126884, 1737133010.8390775, 1737133010.9924896, 1737133011.1735468, 1737133011.3191133, 1737133011.4486947, 1737133011.5773256, 1737133011.7097747, 1737133011.8762467, 1737133012.0050993, 1737133012.168394, 1737133012.2976696, 1737133012.4360285, 1737133012.5804074, 1737133012.7472816, 1737133012.8724725, 1737133013.0354655, 1737133013.1777513, 1737133013.3066485, 1737133013.445821, 1737133013.6052597, 1737133013.8001006, 1737133014.033643, 1737133014.1655588, 1737133014.2901068, 1737133014.4578288, 1737133014.663098, 1737133014.843813, 1737133014.9804351, 1737133015.105647, 1737133015.2385538, 1737133015.3693433, 1737133015.503603, 1737133015.640895, 1737133015.781905, 1737133015.911212, 1737133016.0423875, 1737133016.1942627, 1737133016.3395038, 1737133016.4699042, 1737133016.602412, 1737133016.7261014, 1737133016.8491745, 1737133016.978314, 1737133017.104848, 1737133017.2316952, 1737133017.3647711, 1737133017.4943442, 1737133017.627618, 1737133017.760942, 1737133017.8911216, 1737133018.0357401, 1737133018.1762683, 1737133018.3099399, 1737133018.435631, 1737133018.5713, 1737133018.7020054, 1737133018.8357937, 1737133018.9702132, 1737133019.101488, 1737133019.2326484, 1737133019.3551164, 1737133019.486878, 1737133019.617589, 1737133019.7480085, 1737133019.8796916, 1737133020.0136018, 1737133020.1462889, 1737133020.2939093, 1737133020.4262092, 1737133020.5616999, 1737133020.69897, 1737133020.8400126, 1737133021.0280616, 1737133021.2102304, 1737133021.346077, 1737133021.4831872, 1737133021.6221144, 1737133021.7581978, 1737133021.8929498, 1737133022.016973, 1737133022.1547546, 1737133022.2888558, 1737133022.4271061, 1737133022.5572784, 1737133022.6797836, 1737133022.8092442, 1737133022.9439301, 1737133023.0823793, 1737133023.2146885, 1737133023.3453457, 1737133023.470426, 1737133023.6063623, 1737133023.7397316, 1737133023.881252, 1737133024.013424, 1737133024.1514149, 1737133024.2909307, 1737133024.425381, 1737133024.564228, 1737133024.728118, 1737133024.8574615, 1737133025.0060043, 1737133025.1420302, 1737133025.2814422, 1737133025.4210482, 1737133025.5560076, 1737133025.6851642, 1737133025.8182695, 1737133025.950446, 1737133026.0781038, 1737133026.2077277, 1737133026.33947, 1737133026.483572, 1737133026.6225271, 1737133026.7592313, 1737133026.8924584, 1737133027.0249367, 1737133027.1635804, 1737133027.301942, 1737133027.4392796, 1737133027.5675461, 1737133027.7024784, 1737133027.8421755, 1737133027.9850345, 1737133028.1274226, 1737133028.2676756, 1737133028.4018226, 1737133028.5368237, 1737133028.6912978, 1737133028.895604, 1737133029.0506914, 1737133029.2014549, 1737133029.3485606, 1737133029.4958003, 1737133029.639387, 1737133029.7904775, 1737133029.940873, 1737133030.106358, 1737133030.2532098, 1737133030.4316206, 1737133030.5901394, 1737133030.7414467, 1737133030.931333, 1737133031.075055, 1737133031.2193491, 1737133031.3751993, 1737133031.5190117], "score": 0, "output_len": 188, "output": "from typing import List\n\n\ndef separate_paren_groups(paren_string: str) -> List[str]:\n    stack = []\n    groups = []\n    current_group = []\n\n    for char in paren_string.replace(\" \", \"\"):\n        if char == \"(\":\n            stack.append(char)\n            current_group.append(char)\n        elif char == \")\" and stack:\n            stack.pop()\n            current_group.append(char)\n            if not stack:\n                groups.append(\"\".join(current_group))\n                current_group = []\n\n    return groups\n\n# Example usage:\nprint(separate_paren_groups('( ) (( )) (( )( ))'))  # Output: ['()', '(())', '(()())']\n", "input_len": 163}
{"id": "HumanEval/2", "model_memory": 48500.0, "time_taken": 8.405665874481201, "input_kv_memory": 49260.0, "memory_usagetime_metric": [1737133031.979899, 1737133032.1139889, 1737133032.244338, 1737133032.3976755, 1737133032.5553272, 1737133032.7086759, 1737133032.8477924, 1737133032.985548, 1737133033.1234207, 1737133033.2705925, 1737133033.409084, 1737133033.5450268, 1737133033.682313, 1737133033.825568, 1737133033.9743557, 1737133034.1176696, 1737133034.2419584, 1737133034.3702736, 1737133034.4998634, 1737133034.6329823, 1737133034.774847, 1737133034.905769, 1737133035.0351784, 1737133035.1596935, 1737133035.297272, 1737133035.4288225, 1737133035.5485096, 1737133035.6745484, 1737133035.80297, 1737133035.9348783, 1737133036.064845, 1737133036.1849873, 1737133036.3164825, 1737133036.442862, 1737133036.5875971, 1737133036.7220583, 1737133036.8501744, 1737133036.97321, 1737133037.0947511, 1737133037.224766, 1737133037.352836, 1737133037.486825, 1737133037.6142533, 1737133037.7384765, 1737133037.8647375, 1737133037.9965515, 1737133038.1210504, 1737133038.255222, 1737133038.3914752, 1737133038.521716, 1737133038.6774626, 1737133038.8186471, 1737133038.959204, 1737133039.1274805, 1737133039.2666764, 1737133039.4016163, 1737133039.5432386, 1737133039.6992636, 1737133039.827442, 1737133039.981632, 1737133040.1189651], "score": 0, "output_len": 60, "output": "def truncate_number(number: float) -> float:\n    integer_part = int(number)\n    return number - integer_part\n\n# Example usage:\nprint(truncate_number(3.5))  # Output: 0.5\n", "input_len": 121}
{"id": "HumanEval/3", "model_memory": 48500.0, "time_taken": 8.190813302993774, "input_kv_memory": 49000.0, "memory_usagetime_metric": [1737133040.5715668, 1737133040.8432062, 1737133040.994153, 1737133041.1357827, 1737133041.2689328, 1737133041.3955348, 1737133041.5252564, 1737133041.6699083, 1737133041.8111696, 1737133041.9706285, 1737133042.1304026, 1737133042.292891, 1737133042.4725528, 1737133042.6577072, 1737133042.824578, 1737133042.9484859, 1737133043.0745873, 1737133043.2069564, 1737133043.344877, 1737133043.474497, 1737133043.6032448, 1737133043.7254632, 1737133043.849874, 1737133043.9728398, 1737133044.0986338, 1737133044.2393348, 1737133044.3746111, 1737133044.5185595, 1737133044.665353, 1737133044.794426, 1737133044.9192102, 1737133045.041134, 1737133045.1734326, 1737133045.2953706, 1737133045.4176931, 1737133045.5463479, 1737133045.6763752, 1737133045.8009257, 1737133045.9299278, 1737133046.0578942, 1737133046.182467, 1737133046.320045, 1737133046.45567, 1737133046.5824986, 1737133046.7133832, 1737133046.8398008, 1737133046.9692512, 1737133047.0988739, 1737133047.229529, 1737133047.3611648, 1737133047.4900103, 1737133047.6262152, 1737133047.7599719, 1737133047.889372, 1737133048.0261707, 1737133048.1761048, 1737133048.320776, 1737133048.460426], "score": 0, "output_len": 58, "output": "from typing import List\n\n\ndef below_zero(operations: List[int]) -> bool:\n    balance = 0\n    for operation in operations:\n        balance += operation\n        if balance < 0:\n            return True\n    return False\n", "input_len": 155}
{"id": "HumanEval/4", "model_memory": 48500.0, "time_taken": 12.646495819091797, "input_kv_memory": 49340.0, "memory_usage": [49340.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0], "time_metric": [1737133048.9413083, 1737133049.0812757, 1737133049.2099216, 1737133049.3490012, 1737133049.5200815, 1737133049.7014759, 1737133049.8792982, 1737133050.0179303, 1737133050.149081, 1737133050.272546, 1737133050.402637, 1737133050.5338023, 1737133050.6699114, 1737133050.7954175, 1737133050.9143562, 1737133051.052736, 1737133051.196211, 1737133051.3401244, 1737133051.4700787, 1737133051.6041665, 1737133051.7429056, 1737133051.8830273, 1737133052.0390592, 1737133052.1831698, 1737133052.3273044, 1737133052.4683754, 1737133052.6086152, 1737133052.7550168, 1737133052.8935082, 1737133053.0336306, 1737133053.1662545, 1737133053.3073497, 1737133053.4467077, 1737133053.591228, 1737133053.727575, 1737133053.8595667, 1737133054.0007558, 1737133054.1416347, 1737133054.287635, 1737133054.426508, 1737133054.575238, 1737133054.7152188, 1737133054.8765254, 1737133055.0209486, 1737133055.159811, 1737133055.3109858, 1737133055.462675, 1737133055.6071048, 1737133055.7595825, 1737133055.8853161, 1737133056.0051386, 1737133056.1352892, 1737133056.2702882, 1737133056.407489, 1737133056.5289664, 1737133056.6534033, 1737133056.7844527, 1737133056.9127853, 1737133057.052006, 1737133057.181981, 1737133057.3070683, 1737133057.4412742, 1737133057.5672956, 1737133057.6962378, 1737133057.8295727, 1737133057.9625952, 1737133058.0919788, 1737133058.226481, 1737133058.353823, 1737133058.5156918, 1737133058.7463539, 1737133058.887172, 1737133059.017945, 1737133059.1445181, 1737133059.2714572, 1737133059.4063358, 1737133059.5386243, 1737133059.6665256, 1737133059.798704, 1737133059.9329784, 1737133060.0624287, 1737133060.2077515, 1737133060.345291, 1737133060.4775934, 1737133060.6045651, 1737133060.7408137, 1737133060.8695598, 1737133060.9938378, 1737133061.1372757, 1737133061.2668848], "score": 0, "output_len": 89, "output": "from typing import List\n\n\ndef mean_absolute_deviation(numbers: List[float]) -> float:\n    if not numbers:\n        return 0.0\n\n    mean = sum(numbers) / len(numbers)\n    absolute_deviations = [abs(x - mean) for x in numbers]\n    return sum(absolute_deviations) / len(numbers)\n", "input_len": 155}
{"id": "HumanEval/5", "model_memory": 48500.0, "time_taken": 21.050157070159912, "input_kv_memory": 49360.0, "memory_usagetime_metric": [1737133061.7888768, 1737133061.9194918, 1737133062.0527852, 1737133062.1810813, 1737133062.3173733, 1737133062.4464152, 1737133062.5791543, 1737133062.703035, 1737133062.8515387, 1737133062.9899108, 1737133063.1269808, 1737133063.2749727, 1737133063.423, 1737133063.551826, 1737133063.6947377, 1737133063.8441973, 1737133063.971154, 1737133064.121151, 1737133064.2804513, 1737133064.4133136, 1737133064.5645604, 1737133064.7036667, 1737133064.846986, 1737133064.9911056, 1737133065.142324, 1737133065.2916365, 1737133065.4647799, 1737133065.6388059, 1737133065.78994, 1737133065.9132843, 1737133066.0341294, 1737133066.1660082, 1737133066.3036194, 1737133066.4372985, 1737133066.5827267, 1737133066.7180595, 1737133066.853688, 1737133066.9819257, 1737133067.1115263, 1737133067.2430978, 1737133067.3868847, 1737133067.5155027, 1737133067.6439836, 1737133067.774389, 1737133067.905916, 1737133068.0393193, 1737133068.16205, 1737133068.2808368, 1737133068.4182148, 1737133068.5541272, 1737133068.682112, 1737133068.8147118, 1737133068.9379783, 1737133069.064099, 1737133069.1941583, 1737133069.3195267, 1737133069.4467525, 1737133069.5743933, 1737133069.7096581, 1737133069.8448765, 1737133069.9827397, 1737133070.1124165, 1737133070.2468786, 1737133070.376002, 1737133070.5052652, 1737133070.6297178, 1737133070.763484, 1737133070.8940127, 1737133071.0264866, 1737133071.1669447, 1737133071.2969234, 1737133071.4270139, 1737133071.5614982, 1737133071.7034173, 1737133071.838259, 1737133071.9619906, 1737133072.0910633, 1737133072.2112756, 1737133072.3455746, 1737133072.4906013, 1737133072.6161678, 1737133072.742469, 1737133072.8714402, 1737133072.9961295, 1737133073.1224618, 1737133073.2639778, 1737133073.3976872, 1737133073.5272763, 1737133073.6611001, 1737133073.7908216, 1737133073.9259465, 1737133074.0520346, 1737133074.2042358, 1737133074.3454878, 1737133074.4726384, 1737133074.6058998, 1737133074.748745, 1737133074.9478233, 1737133075.0806344, 1737133075.2229786, 1737133075.412707, 1737133075.594061, 1737133075.7339053, 1737133075.8743067, 1737133076.012759, 1737133076.1569624, 1737133076.3081887, 1737133076.4370282, 1737133076.5711493, 1737133076.7207706, 1737133076.8566074, 1737133076.9849632, 1737133077.1292877, 1737133077.3266864, 1737133077.4669259, 1737133077.6709552, 1737133077.7987185, 1737133077.9402, 1737133078.0910573, 1737133078.2307909, 1737133078.3674622, 1737133078.5608196, 1737133078.6978729, 1737133078.8409996, 1737133079.0402973, 1737133079.1733654, 1737133079.314334, 1737133079.4738138, 1737133079.6036966, 1737133079.8137007, 1737133079.9540408, 1737133080.08698, 1737133080.2276866, 1737133080.3681147, 1737133080.5678594, 1737133080.7032685, 1737133080.8335042, 1737133080.9823997, 1737133081.2052336, 1737133081.4107196, 1737133081.588769, 1737133081.7776606, 1737133081.916609, 1737133082.058158, 1737133082.1948676, 1737133082.338443, 1737133082.4795742], "score": 0, "output_len": 144, "output": "from typing import List\n\n\ndef intersperse(numbers: List[int], delimeter: int) -> List[int]:\n    result = []\n    for i in range(len(numbers) - 1):\n        result.append(numbers[i])\n        result.append(delimeter)\n    result.append(numbers[-1])\n    return result\n\n# Test cases\nprint(intersperse([], 4))  # Output: []\nprint(intersperse([1, 2, 3], 4))  # Output: [1, 4, 2, 4, 3]\n", "input_len": 132}
{"id": "HumanEval/6", "model_memory": 48500.0, "time_taken": 20.158738613128662, "input_kv_memory": 49600.0, "memory_usagetime_metric": [1737133083.0414796, 1737133083.1694117, 1737133083.2922955, 1737133083.414296, 1737133083.543659, 1737133083.7177825, 1737133083.8774574, 1737133084.0165002, 1737133084.1508799, 1737133084.2877624, 1737133084.414956, 1737133084.54224, 1737133084.67915, 1737133084.819014, 1737133084.9555817, 1737133085.07775, 1737133085.2297938, 1737133085.360712, 1737133085.509341, 1737133085.6462686, 1737133085.7961643, 1737133085.9428213, 1737133086.093847, 1737133086.2377405, 1737133086.3681734, 1737133086.4974248, 1737133086.636611, 1737133086.7863357, 1737133086.9299047, 1737133087.0707984, 1737133087.2317774, 1737133087.363671, 1737133087.506126, 1737133087.645292, 1737133087.7956777, 1737133087.9262075, 1737133088.0698268, 1737133088.2120285, 1737133088.368622, 1737133088.5143855, 1737133088.6434512, 1737133088.7926764, 1737133088.9266803, 1737133089.0592937, 1737133089.1986673, 1737133089.3454463, 1737133089.5016155, 1737133089.630006, 1737133089.7707422, 1737133089.9134796, 1737133090.0553904, 1737133090.2364316, 1737133090.4158747, 1737133090.5468912, 1737133090.6884327, 1737133090.818188, 1737133090.9509227, 1737133091.0834105, 1737133091.2152927, 1737133091.3436964, 1737133091.4880245, 1737133091.6562707, 1737133091.796761, 1737133091.926647, 1737133092.0750446, 1737133092.2419295, 1737133092.3956773, 1737133092.5381143, 1737133092.6661837, 1737133092.8047564, 1737133092.9899673, 1737133093.136078, 1737133093.2689803, 1737133093.4005053, 1737133093.5327153, 1737133093.6603243, 1737133093.7993166, 1737133093.9724476, 1737133094.1338124, 1737133094.2701027, 1737133094.4072602, 1737133094.5480306, 1737133094.7183855, 1737133094.8600688, 1737133094.9908087, 1737133095.133691, 1737133095.3132865, 1737133095.4531512, 1737133095.584312, 1737133095.71582, 1737133095.9046657, 1737133096.0411246, 1737133096.1827948, 1737133096.3152132, 1737133096.4429996, 1737133096.6024783, 1737133096.8110619, 1737133096.9912157, 1737133097.176499, 1737133097.3725157, 1737133097.5106027, 1737133097.6863651, 1737133097.8522775, 1737133098.0214894, 1737133098.1529205, 1737133098.2837808, 1737133098.519679, 1737133098.7735631, 1737133098.9787414, 1737133099.1064873, 1737133099.2415886, 1737133099.3765156, 1737133099.5229688, 1737133099.653785, 1737133099.7807214, 1737133099.9220228, 1737133100.1271832, 1737133100.2658167, 1737133100.473378, 1737133100.6781125, 1737133100.8356082, 1737133101.0042088, 1737133101.140291, 1737133101.2812543, 1737133101.420973, 1737133101.5499775, 1737133101.702463, 1737133101.843226, 1737133101.9791389, 1737133102.1168852, 1737133102.3481853, 1737133102.517668, 1737133102.6586812, 1737133102.7978952], "score": 0, "output_len": 127, "output": "from typing import List\n\ndef parse_nested_parens(paren_string: str) -> List[int]:\n    levels = []\n    current_level = 0\n    for char in paren_string:\n        if char == '(':\n            current_level += 1\n        elif char == ')':\n            current_level = max(current_level - 1, 0)\n        levels.append(current_level)\n    return levels\n\nprint(parse_nested_parens('(()()) ((())) () ((())()())'))\n", "input_len": 154}
{"id": "HumanEval/7", "model_memory": 48500.0, "time_taken": 5.686319828033447, "input_kv_memory": 49376.0, "memory_usage": [49376.0, 49394.0, 49394.0, 49394.0, 49394.0, 49394.0, 49394.0, 49394.0, 49394.0, 49394.0, 49394.0, 49394.0, 49394.0, 49394.0, 49394.0, 49394.0, 49394.0, 49394.0, 49394.0, 49394.0, 49394.0, 49394.0, 49394.0, 49394.0, 49394.0, 49394.0, 49394.0, 49394.0, 49394.0, 49394.0, 49394.0, 49394.0, 49394.0, 49394.0, 49394.0, 49394.0, 49394.0, 49394.0, 49096.0], "time_metric": [1737133103.260364, 1737133103.3888147, 1737133103.516817, 1737133103.638153, 1737133103.8009715, 1737133103.9293952, 1737133104.0544128, 1737133104.1805596, 1737133104.302397, 1737133104.4372687, 1737133104.577811, 1737133104.7382948, 1737133104.894351, 1737133105.0359285, 1737133105.1662757, 1737133105.314384, 1737133105.4590209, 1737133105.594088, 1737133105.725364, 1737133105.8641346, 1737133106.026637, 1737133106.1672404, 1737133106.3682737, 1737133106.50139, 1737133106.6381958, 1737133106.7616086, 1737133106.8926651, 1737133107.0185587, 1737133107.150105, 1737133107.302046, 1737133107.4650114, 1737133107.6101854, 1737133107.767428, 1737133107.9066389, 1737133108.0485542, 1737133108.2154746, 1737133108.3857265, 1737133108.5168762, 1737133108.6503053], "score": 0, "output_len": 38, "output": "def filter_by_substring(strings: List[str], substring: str) -> List[str]:\n    return [s for s in strings if substring in s]\n", "input_len": 131}
{"id": "HumanEval/8", "model_memory": 48798.0, "time_taken": 12.469482183456421, "input_kv_memory": 49240.0, "memory_usage": [49240.0, 49260.0, 49480.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49720.0, 49720.0], "time_metric": [1737133109.1118188, 1737133109.2394466, 1737133109.3823216, 1737133109.510961, 1737133109.6714616, 1737133109.827006, 1737133110.0013814, 1737133110.1732986, 1737133110.3376744, 1737133110.522086, 1737133110.6994147, 1737133110.8222523, 1737133110.94244, 1737133111.0828, 1737133111.2140062, 1737133111.3440304, 1737133111.4732747, 1737133111.605621, 1737133111.7305725, 1737133111.859156, 1737133111.992884, 1737133112.1181896, 1737133112.250173, 1737133112.3703816, 1737133112.4927957, 1737133112.6186142, 1737133112.746871, 1737133112.868823, 1737133113.001032, 1737133113.1250772, 1737133113.2573786, 1737133113.3830516, 1737133113.509152, 1737133113.6358368, 1737133113.7592866, 1737133113.8901649, 1737133114.0204618, 1737133114.1498933, 1737133114.2813323, 1737133114.4055479, 1737133114.5436356, 1737133114.671359, 1737133114.798745, 1737133114.9314332, 1737133115.0580592, 1737133115.1857786, 1737133115.3195076, 1737133115.4608226, 1737133115.597977, 1737133115.7253604, 1737133115.8620455, 1737133115.989251, 1737133116.1208704, 1737133116.2516015, 1737133116.380372, 1737133116.5127153, 1737133116.6437738, 1737133116.7730083, 1737133116.908464, 1737133117.0366454, 1737133117.169734, 1737133117.2914348, 1737133117.4233966, 1737133117.558914, 1737133117.6875556, 1737133117.8216574, 1737133117.951422, 1737133118.0840914, 1737133118.2309103, 1737133118.3627555, 1737133118.497328, 1737133118.6347327, 1737133118.77167, 1737133118.9011598, 1737133119.0288467, 1737133119.1602437, 1737133119.2897654, 1737133119.4205947, 1737133119.5559845, 1737133119.6839828, 1737133119.8202062, 1737133119.9498215, 1737133120.0769274, 1737133120.207149, 1737133120.3391497, 1737133120.4824543, 1737133120.6108224, 1737133120.7388108, 1737133120.8847132, 1737133121.0122015, 1737133121.143633, 1737133121.2744749], "score": 0, "output_len": 91, "output": "from typing import List, Tuple\n\n\ndef sum_product(numbers: List[int]) -> Tuple[int, int]:\n    if not numbers:\n        return (0, 1)\n    total_sum = sum(numbers)\n    total_product = 1\n    for num in numbers:\n        total_product *= num\n    return (total_sum, total_product)\n", "input_len": 153}
{"id": "HumanEval/9", "model_memory": 48920.0, "time_taken": 19.3628249168396, "input_kv_memory": 49100.0, "memory_usage": [49100.0, 49136.0, 49436.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49454.0, 49474.0, 49494.0, 49494.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49554.0, 49594.0, 49634.0, 49714.0, 49714.0, 49754.0, 49754.0, 49754.0, 49754.0, 49754.0, 49754.0, 49754.0, 49754.0, 49754.0, 49754.0, 49754.0, 49754.0, 49754.0, 49754.0, 49754.0, 49754.0, 49754.0, 49754.0, 49754.0, 49754.0, 49754.0, 49754.0, 49754.0, 49754.0, 49754.0, 49754.0, 49754.0, 49754.0, 49754.0, 49754.0, 49774.0, 49794.0, 49794.0, 49814.0, 49814.0, 49814.0, 49814.0, 49814.0, 49814.0, 49814.0, 49814.0, 49814.0, 49814.0, 49814.0, 49814.0, 49814.0, 49814.0, 49814.0, 49814.0, 49814.0, 49814.0, 49814.0, 49814.0, 49814.0, 49814.0, 49814.0], "time_metric": [1737133121.7594633, 1737133121.8818882, 1737133122.0819566, 1737133122.2103934, 1737133122.3437662, 1737133122.4652386, 1737133122.5982757, 1737133122.7376013, 1737133122.8669784, 1737133122.9924798, 1737133123.124169, 1737133123.2538111, 1737133123.388579, 1737133123.516778, 1737133123.6358073, 1737133123.7559426, 1737133123.8776453, 1737133124.0069838, 1737133124.1290479, 1737133124.2597566, 1737133124.3888824, 1737133124.5214937, 1737133124.6514132, 1737133124.7851036, 1737133124.914106, 1737133125.048196, 1737133125.170602, 1737133125.297598, 1737133125.4214773, 1737133125.5499744, 1737133125.681267, 1737133125.8064053, 1737133125.9394245, 1737133126.0638351, 1737133126.184913, 1737133126.3094425, 1737133126.4443936, 1737133126.5966597, 1737133126.7305593, 1737133126.8584573, 1737133126.98501, 1737133127.125018, 1737133127.2571144, 1737133127.3824096, 1737133127.51228, 1737133127.6424093, 1737133127.7767184, 1737133127.90416, 1737133128.0277333, 1737133128.1589444, 1737133128.285035, 1737133128.410356, 1737133128.5426278, 1737133128.6730192, 1737133128.8129668, 1737133128.9441323, 1737133129.0771422, 1737133129.209239, 1737133129.3348877, 1737133129.4727077, 1737133129.6007867, 1737133129.7300668, 1737133129.8585718, 1737133129.9858875, 1737133130.1149998, 1737133130.2433252, 1737133130.3755374, 1737133130.5037363, 1737133130.6344402, 1737133130.7702556, 1737133130.897656, 1737133131.0266795, 1737133131.1643405, 1737133131.2970073, 1737133131.4314268, 1737133131.5641687, 1737133131.695081, 1737133131.8205853, 1737133131.9488733, 1737133132.075038, 1737133132.1998937, 1737133132.3366878, 1737133132.4669461, 1737133132.5985835, 1737133132.736824, 1737133132.862346, 1737133132.9997945, 1737133133.13782, 1737133133.2697785, 1737133133.4039845, 1737133133.5349896, 1737133133.6641676, 1737133133.7989798, 1737133133.935674, 1737133134.07818, 1737133134.2075732, 1737133134.3498065, 1737133134.4848528, 1737133134.6148925, 1737133134.7471478, 1737133134.886365, 1737133135.0227697, 1737133135.1716187, 1737133135.308196, 1737133135.4969199, 1737133135.6854684, 1737133135.8253174, 1737133135.9632347, 1737133136.1871512, 1737133136.3571827, 1737133136.4833455, 1737133136.6232402, 1737133136.7575033, 1737133136.8876624, 1737133137.0221498, 1737133137.1591642, 1737133137.2910736, 1737133137.423684, 1737133137.5656936, 1737133137.7162032, 1737133137.8579073, 1737133137.9987855, 1737133138.148678, 1737133138.300975, 1737133138.4390142, 1737133138.571614, 1737133138.707548, 1737133138.8442755, 1737133138.9900515, 1737133139.1201885, 1737133139.249408, 1737133139.3880239, 1737133139.5180612, 1737133139.6425865, 1737133139.7680476, 1737133139.9052932, 1737133140.032911, 1737133140.15942, 1737133140.286423, 1737133140.411511, 1737133140.5398355, 1737133140.6647148, 1737133140.7890322], "score": 0, "output_len": 143, "output": "from typing import List, Tuple\n\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n    max_values = []\n    current_max = float('-inf')\n    for num in numbers:\n        current_max = max(current_max, num)\n        max_values.append(current_max)\n    return max_values\n\n# Example usage:\nprint(rolling_max([1, 2, 3, 2, 3, 4, 2]))  # Output: [1, 2, 3, 3, 3, 4, 4]\n", "input_len": 134}
{"id": "HumanEval/10", "model_memory": 48938.0, "time_taken": 35.06483864784241, "input_kv_memory": 49458.0, "memory_usage": [49458.0, 49742.0, 50124.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50224.0, 50226.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50228.0, 50268.0, 50268.0, 50308.0, 50348.0, 50348.0, 50348.0, 50348.0, 50348.0, 50348.0, 50348.0, 50348.0, 50348.0, 50348.0, 50348.0, 50348.0, 50348.0, 50348.0, 50348.0, 50348.0, 50348.0, 50348.0, 50348.0, 50348.0, 50348.0, 50348.0, 50348.0, 50348.0, 50348.0, 50348.0, 50348.0, 50348.0, 50348.0, 50348.0, 50348.0, 50348.0, 50348.0, 50348.0, 50348.0, 50348.0, 50348.0, 50348.0, 50348.0, 50348.0, 50348.0, 50348.0], "time_metric": [1737133141.3004391, 1737133141.4399514, 1737133141.5978613, 1737133141.7237346, 1737133141.8477998, 1737133141.9698043, 1737133142.097717, 1737133142.2339916, 1737133142.372325, 1737133142.5054836, 1737133142.6271214, 1737133142.757633, 1737133142.877836, 1737133143.005661, 1737133143.1400063, 1737133143.2697816, 1737133143.4002562, 1737133143.5346756, 1737133143.6600845, 1737133143.7819133, 1737133143.9047182, 1737133144.0332718, 1737133144.172985, 1737133144.2968998, 1737133144.4264283, 1737133144.5549796, 1737133144.6801097, 1737133144.802579, 1737133144.930668, 1737133145.0630229, 1737133145.1908908, 1737133145.3156643, 1737133145.4383202, 1737133145.5574687, 1737133145.685584, 1737133145.8077998, 1737133145.9323664, 1737133146.0590572, 1737133146.1876, 1737133146.3174376, 1737133146.4423645, 1737133146.5727596, 1737133146.7015514, 1737133146.8295515, 1737133146.9555008, 1737133147.086155, 1737133147.2194662, 1737133147.3494194, 1737133147.470505, 1737133147.6023717, 1737133147.7264612, 1737133147.8552954, 1737133147.9840515, 1737133148.1119573, 1737133148.2382748, 1737133148.3679318, 1737133148.498028, 1737133148.6271265, 1737133148.764353, 1737133148.8963745, 1737133149.0263379, 1737133149.1555626, 1737133149.2896929, 1737133149.419112, 1737133149.5760732, 1737133149.7291791, 1737133149.8601837, 1737133149.9896696, 1737133150.1176908, 1737133150.2478526, 1737133150.378892, 1737133150.509555, 1737133150.6454425, 1737133150.782874, 1737133150.9084482, 1737133151.0358627, 1737133151.1661167, 1737133151.2956195, 1737133151.4281166, 1737133151.5655155, 1737133151.6933844, 1737133151.8210125, 1737133151.959568, 1737133152.087699, 1737133152.2344148, 1737133152.3649898, 1737133152.489706, 1737133152.6233096, 1737133152.755289, 1737133152.8868878, 1737133153.0211549, 1737133153.1522152, 1737133153.295718, 1737133153.4235315, 1737133153.5570643, 1737133153.685989, 1737133153.8098893, 1737133153.944269, 1737133154.0784857, 1737133154.2064476, 1737133154.3478937, 1737133154.486748, 1737133154.6152246, 1737133154.7538, 1737133154.8967245, 1737133155.0268605, 1737133155.1669638, 1737133155.3010993, 1737133155.4393914, 1737133155.5825763, 1737133155.7089968, 1737133155.8423734, 1737133155.9763207, 1737133156.1146004, 1737133156.2570848, 1737133156.39886, 1737133156.5515513, 1737133156.6908605, 1737133156.818476, 1737133156.9539402, 1737133157.0810685, 1737133157.2144134, 1737133157.3488245, 1737133157.4781544, 1737133157.6070523, 1737133157.750089, 1737133157.888195, 1737133158.0220342, 1737133158.1601574, 1737133158.290188, 1737133158.4260898, 1737133158.5636415, 1737133158.7069297, 1737133158.8474202, 1737133158.99977, 1737133159.131783, 1737133159.2692363, 1737133159.40593, 1737133159.5502558, 1737133159.691287, 1737133159.8332157, 1737133159.9735382, 1737133160.1132045, 1737133160.2455506, 1737133160.3784158, 1737133160.5132513, 1737133160.649399, 1737133160.7811453, 1737133160.9157624, 1737133161.0580976, 1737133161.195891, 1737133161.340156, 1737133161.4825368, 1737133161.6245832, 1737133161.7603986, 1737133161.900599, 1737133162.0330153, 1737133162.1714168, 1737133162.30771, 1737133162.4451764, 1737133162.5849783, 1737133162.7260284, 1737133162.8698514, 1737133163.0110314, 1737133163.1499746, 1737133163.2818494, 1737133163.4112864, 1737133163.5442002, 1737133163.7077188, 1737133163.8475254, 1737133163.9888246, 1737133164.1262655, 1737133164.2623072, 1737133164.3992555, 1737133164.5324168, 1737133164.6631956, 1737133164.8004634, 1737133164.9307415, 1737133165.0721595, 1737133165.2098134, 1737133165.3464525, 1737133165.4908144, 1737133165.6283092, 1737133165.7696743, 1737133165.9019217, 1737133166.041403, 1737133166.1756375, 1737133166.3074894, 1737133166.4432802, 1737133166.5872245, 1737133166.720476, 1737133166.8576899, 1737133166.9884732, 1737133167.1209087, 1737133167.2617612, 1737133167.40217, 1737133167.5360663, 1737133167.6746347, 1737133167.8158445, 1737133167.9490483, 1737133168.1058958, 1737133168.25139, 1737133168.3850794, 1737133168.6508787, 1737133168.9067228, 1737133169.0449083, 1737133169.1879146, 1737133169.3180153, 1737133169.4542356, 1737133169.59533, 1737133169.7356873, 1737133169.8758483, 1737133170.0122902, 1737133170.1588602, 1737133170.287092, 1737133170.4262414, 1737133170.5619807, 1737133170.6969101, 1737133170.8400476, 1737133170.9723625, 1737133171.1099598, 1737133171.244881, 1737133171.3890202, 1737133171.528448, 1737133171.6754303, 1737133171.8207855, 1737133171.9581516, 1737133172.0928586, 1737133172.2299533, 1737133172.3690045, 1737133172.5138457, 1737133172.6557496, 1737133172.7912552, 1737133172.9277797, 1737133173.0691237, 1737133173.2110395, 1737133173.354225, 1737133173.4937968, 1737133173.633846, 1737133173.76682, 1737133173.909563, 1737133174.0505254, 1737133174.1933556, 1737133174.3298905, 1737133174.4750834, 1737133174.6134694, 1737133174.7584515, 1737133174.8958156, 1737133175.0314898, 1737133175.1783478, 1737133175.314686, 1737133175.4499116, 1737133175.5878518, 1737133175.7273905, 1737133175.8684137, 1737133176.0095327], "score": 0, "output_len": 195, "output": "def make_palindrome(string: str) -> str:\n    \"\"\" Find the shortest palindrome that begins with a supplied string.\n    Algorithm idea is simple:\n    - Find the longest postfix of supplied string that is a palindrome.\n    - Append to the end of the string reverse of a string prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n    'catac'\n    \"\"\"\n    for i in range(len(string)):\n        if string[:len(string)-i] == string[:len(string)-i][::-1]:\n            return string + string[:i][::-1]\n    return string + string[::-1]\n", "input_len": 205}
{"id": "HumanEval/11", "model_memory": 49732.0, "time_taken": 13.137577056884766, "input_kv_memory": 49396.0, "memory_usage": [49396.0, 49076.0, 49192.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49408.0, 49408.0, 49428.0, 49448.0, 49448.0, 49448.0, 49448.0, 49448.0, 49448.0, 49448.0, 49448.0, 49448.0, 49448.0, 49448.0, 49448.0, 49448.0, 49448.0, 49448.0, 49448.0], "time_metric": [1737133176.4587188, 1737133176.6599503, 1737133176.790445, 1737133176.9129179, 1737133177.0412936, 1737133177.1710045, 1737133177.2931793, 1737133177.4155571, 1737133177.5393112, 1737133177.6679971, 1737133177.7968268, 1737133177.9165187, 1737133178.0444438, 1737133178.1765585, 1737133178.2981944, 1737133178.4560976, 1737133178.593859, 1737133178.7216444, 1737133178.865096, 1737133178.9965112, 1737133179.1302507, 1737133179.2569265, 1737133179.3896601, 1737133179.5105696, 1737133179.6429183, 1737133179.7694826, 1737133179.8947327, 1737133180.023037, 1737133180.1449273, 1737133180.2742145, 1737133180.3991287, 1737133180.5280802, 1737133180.651041, 1737133180.7824318, 1737133180.9098358, 1737133181.0479832, 1737133181.1730464, 1737133181.3030016, 1737133181.438316, 1737133181.5729809, 1737133181.7047472, 1737133181.8403423, 1737133181.97539, 1737133182.1016843, 1737133182.2303212, 1737133182.35864, 1737133182.488074, 1737133182.6173499, 1737133182.743468, 1737133182.8761737, 1737133183.0068574, 1737133183.1526203, 1737133183.2794993, 1737133183.413959, 1737133183.548666, 1737133183.6765282, 1737133183.8084536, 1737133183.9347215, 1737133184.0624113, 1737133184.194539, 1737133184.3198187, 1737133184.4514256, 1737133184.5782187, 1737133184.7062726, 1737133184.8364096, 1737133184.9734013, 1737133185.1097553, 1737133185.249416, 1737133185.3816435, 1737133185.5120618, 1737133185.6396556, 1737133185.7764413, 1737133185.9538522, 1737133186.0919192, 1737133186.2253401, 1737133186.3585787, 1737133186.5088131, 1737133186.6522207, 1737133186.7794452, 1737133186.9144297, 1737133187.0480084, 1737133187.1804256, 1737133187.3141382, 1737133187.4452844, 1737133187.5798495, 1737133187.7134411, 1737133187.84222, 1737133187.9753067, 1737133188.1066804, 1737133188.2386076, 1737133188.3741894, 1737133188.5195892, 1737133188.6611702, 1737133188.7899501, 1737133188.9251058, 1737133189.0444756, 1737133189.1811154, 1737133189.315581], "score": 0, "output_len": 98, "output": "from typing import List\n\ndef string_xor(a: str, b: str) -> str:\n    result = ''.join('1' if bit_a != bit_b else '0' for bit_a, bit_b in zip(a, b))\n    return result\n\n# Example usage:\nprint(string_xor('010', '110'))  # Output: '100'\n", "input_len": 117}
{"id": "HumanEval/12", "model_memory": 49132.0, "time_taken": 14.715148687362671, "input_kv_memory": 48860.0, "memory_usage": [48860.0, 49258.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49594.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49714.0, 49754.0, 49754.0, 49754.0, 49754.0, 49754.0], "time_metric": [1737133189.8056612, 1737133189.993495, 1737133190.178462, 1737133190.3353097, 1737133190.4832163, 1737133190.6124024, 1737133190.7354505, 1737133190.8618646, 1737133190.9953692, 1737133191.1279333, 1737133191.2643864, 1737133191.388396, 1737133191.5261228, 1737133191.6524324, 1737133191.7894688, 1737133191.9196706, 1737133192.0499876, 1737133192.1769435, 1737133192.3067658, 1737133192.4301207, 1737133192.5572188, 1737133192.6804104, 1737133192.8108585, 1737133192.9605563, 1737133193.0897388, 1737133193.2171814, 1737133193.3438554, 1737133193.4874837, 1737133193.6469376, 1737133193.849426, 1737133194.0379686, 1737133194.1984293, 1737133194.3516355, 1737133194.4920785, 1737133194.6321485, 1737133194.7707841, 1737133194.9082177, 1737133195.0479565, 1737133195.1888666, 1737133195.3282912, 1737133195.4573715, 1737133195.589251, 1737133195.7240374, 1737133195.844497, 1737133195.9739656, 1737133196.100472, 1737133196.2368875, 1737133196.3664882, 1737133196.4953556, 1737133196.6235497, 1737133196.7485838, 1737133196.877362, 1737133197.0089676, 1737133197.141866, 1737133197.2762296, 1737133197.4093664, 1737133197.536527, 1737133197.6666322, 1737133197.8027546, 1737133197.9383855, 1737133198.087399, 1737133198.228587, 1737133198.3619742, 1737133198.4945326, 1737133198.6249285, 1737133198.7544184, 1737133198.8816998, 1737133199.012123, 1737133199.1374016, 1737133199.269169, 1737133199.3971913, 1737133199.5348346, 1737133199.6606848, 1737133199.7885733, 1737133199.919249, 1737133200.0517173, 1737133200.1748068, 1737133200.308481, 1737133200.4443314, 1737133200.5781476, 1737133200.7291427, 1737133200.8627653, 1737133200.99312, 1737133201.1244757, 1737133201.2532678, 1737133201.3897846, 1737133201.5214744, 1737133201.647109, 1737133201.783445, 1737133201.9183078, 1737133202.0478694, 1737133202.1786933, 1737133202.3048081, 1737133202.4363425, 1737133202.5649116, 1737133202.6972637, 1737133202.8371928, 1737133202.9677355, 1737133203.1026206, 1737133203.2469547, 1737133203.38471, 1737133203.522063, 1737133203.6554222, 1737133203.7908134, 1737133203.924865, 1737133204.067272, 1737133204.200406], "score": 0, "output_len": 105, "output": "from typing import List, Optional\n\n\ndef longest(strings: List[str]) -> Optional[str]:\n    if not strings:\n        return None\n    return max(strings, key=len)\n\n# Test cases\nprint(longest([]))  # Output: None\nprint(longest(['a', 'b', 'c']))  # Output: 'a'\nprint(longest(['a', 'bb', 'ccc']))  # Output: 'ccc'", "input_len": 137}
{"id": "HumanEval/13", "model_memory": 48500.0, "time_taken": 13.30145525932312, "input_kv_memory": 49180.0, "memory_usage": [49180.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49322.0, 49382.0, 49382.0, 49382.0, 49382.0, 49382.0, 49382.0, 49382.0, 49382.0, 49382.0, 49382.0, 49382.0, 49382.0, 49382.0, 49382.0, 49382.0, 49382.0, 49382.0, 49382.0, 49382.0], "time_metric": [1737133204.6745715, 1737133204.8065522, 1737133204.937169, 1737133205.0597746, 1737133205.1801908, 1737133205.3020556, 1737133205.4307587, 1737133205.5644877, 1737133205.6994731, 1737133205.8314662, 1737133205.9559937, 1737133206.0804331, 1737133206.2064326, 1737133206.34549, 1737133206.4711478, 1737133206.6228793, 1737133206.7445834, 1737133206.870726, 1737133206.9988084, 1737133207.1255252, 1737133207.2501767, 1737133207.3776486, 1737133207.5131168, 1737133207.6397433, 1737133207.7711205, 1737133207.894555, 1737133208.0242703, 1737133208.1537318, 1737133208.2831519, 1737133208.4106627, 1737133208.541667, 1737133208.667301, 1737133208.801011, 1737133208.928151, 1737133209.059675, 1737133209.1912434, 1737133209.315055, 1737133209.4383664, 1737133209.5666025, 1737133209.7060032, 1737133209.8370175, 1737133209.9695847, 1737133210.0974455, 1737133210.2315493, 1737133210.360802, 1737133210.4924812, 1737133210.6233947, 1737133210.7525127, 1737133210.8932896, 1737133211.0228052, 1737133211.1548498, 1737133211.2849894, 1737133211.413942, 1737133211.5419474, 1737133211.6671398, 1737133211.792698, 1737133211.9251773, 1737133212.0546935, 1737133212.1870296, 1737133212.318524, 1737133212.4477758, 1737133212.5799775, 1737133212.7078445, 1737133212.840886, 1737133212.9781547, 1737133213.1084578, 1737133213.2509716, 1737133213.385251, 1737133213.5156498, 1737133213.6350906, 1737133213.7661486, 1737133213.9050252, 1737133214.0394998, 1737133214.164605, 1737133214.2981865, 1737133214.4502735, 1737133214.5834093, 1737133214.7121477, 1737133214.8611462, 1737133214.991652, 1737133215.1237116, 1737133215.2555633, 1737133215.3912468, 1737133215.5221868, 1737133215.6543553, 1737133215.7826495, 1737133215.9147983, 1737133216.0420368, 1737133216.1748073, 1737133216.311772, 1737133216.4392467, 1737133216.6033373, 1737133216.7392745, 1737133216.8777974, 1737133217.0043807, 1737133217.1324341, 1737133217.2660384, 1737133217.395134, 1737133217.527374, 1737133217.6645405], "score": 0, "output_len": 100, "output": "def greatest_common_divisor(a: int, b: int) -> int:\n    while b != 0:\n        a, b = b, a % b\n    return a\n\n# Test cases\nprint(greatest_common_divisor(3, 5))  # Output: 1\nprint(greatest_common_divisor(25, 15))  # Output: 5\n", "input_len": 108}
{"id": "HumanEval/14", "model_memory": 48500.0, "time_taken": 12.072528839111328, "input_kv_memory": 48920.0, "memory_usage": [48920.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49176.0, 49196.0, 49196.0, 49196.0, 49276.0, 49316.0, 49316.0, 49316.0, 49316.0, 49316.0, 49316.0, 49316.0, 49316.0, 49316.0, 49356.0, 49376.0, 49376.0, 49376.0, 49376.0, 49376.0, 49396.0, 49436.0, 49436.0, 49436.0, 49436.0, 49436.0, 49436.0, 49436.0, 49436.0, 49436.0, 49436.0, 49436.0, 49436.0, 49436.0, 49436.0, 49436.0, 49436.0], "time_metric": [1737133218.094094, 1737133218.2226217, 1737133218.3599982, 1737133218.4897866, 1737133218.612217, 1737133218.7413113, 1737133218.8681507, 1737133219.0042837, 1737133219.1278374, 1737133219.2592375, 1737133219.3805609, 1737133219.5139413, 1737133219.6502123, 1737133219.7756126, 1737133219.9021027, 1737133220.0292158, 1737133220.1569228, 1737133220.284178, 1737133220.4086096, 1737133220.537954, 1737133220.6650624, 1737133220.7953587, 1737133220.918395, 1737133221.0614057, 1737133221.1945057, 1737133221.3254135, 1737133221.4548967, 1737133221.5866606, 1737133221.7114806, 1737133221.8431053, 1737133221.9764063, 1737133222.106426, 1737133222.2354412, 1737133222.362714, 1737133222.4903862, 1737133222.615479, 1737133222.7436032, 1737133222.8724966, 1737133223.0084007, 1737133223.133512, 1737133223.2574918, 1737133223.3959858, 1737133223.5216334, 1737133223.652355, 1737133223.7810094, 1737133223.9126806, 1737133224.044428, 1737133224.175136, 1737133224.3160946, 1737133224.443104, 1737133224.5766058, 1737133224.7071245, 1737133224.8310742, 1737133224.9806898, 1737133225.1183772, 1737133225.2445138, 1737133225.367491, 1737133225.492316, 1737133225.6383364, 1737133225.7758641, 1737133225.9075544, 1737133226.046217, 1737133226.1837864, 1737133226.3184025, 1737133226.4511032, 1737133226.5819564, 1737133226.71669, 1737133226.846326, 1737133226.9806325, 1737133227.1087298, 1737133227.241525, 1737133227.36454, 1737133227.4910629, 1737133227.6205857, 1737133227.7548614, 1737133227.8815553, 1737133228.021085, 1737133228.1677046, 1737133228.2965603, 1737133228.4401963, 1737133228.5784793, 1737133228.71086, 1737133228.838337, 1737133228.971488, 1737133229.1044471, 1737133229.2350945, 1737133229.3680625, 1737133229.4955494, 1737133229.6196358, 1737133229.754397, 1737133229.8882127], "score": 0, "output_len": 78, "output": "def all_prefixes(string: str) -> List[str]:\n    prefixes = []\n    for i in range(len(string)):\n        prefixes.append(string[:i+1])\n    return prefixes\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()", "input_len": 92}
{"id": "HumanEval/15", "model_memory": 48500.0, "time_taken": 4.795127630233765, "input_kv_memory": 49020.0, "memory_usage": [49020.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0], "time_metric": [1737133230.3218446, 1737133230.4505017, 1737133230.5778053, 1737133230.7050283, 1737133230.825953, 1737133230.950462, 1737133231.083752, 1737133231.2265701, 1737133231.3496988, 1737133231.4773488, 1737133231.6118112, 1737133231.7332177, 1737133231.8578105, 1737133231.9816751, 1737133232.1093752, 1737133232.2407296, 1737133232.3674216, 1737133232.490179, 1737133232.619691, 1737133232.7500057, 1737133232.8846757, 1737133233.0115087, 1737133233.1390114, 1737133233.285402, 1737133233.414251, 1737133233.5373569, 1737133233.6848223, 1737133233.8200588, 1737133233.9493484, 1737133234.0811088, 1737133234.2172112, 1737133234.345575, 1737133234.4718843, 1737133234.5947847, 1737133234.726867, 1737133234.855036], "score": 0, "output_len": 35, "output": "def string_sequence(n: int) -> str:\n    return ' '.join(str(i) for i in range(n + 1))\n", "input_len": 106}
{"id": "HumanEval/16", "model_memory": 48500.0, "time_taken": 10.769095420837402, "input_kv_memory": 49100.0, "memory_usagetime_metric": [1737133235.27037, 1737133235.3975081, 1737133235.5230854, 1737133235.6445956, 1737133235.7647562, 1737133235.883978, 1737133236.005047, 1737133236.1361182, 1737133236.2680688, 1737133236.3939102, 1737133236.5228717, 1737133236.6503577, 1737133236.7820065, 1737133236.9063842, 1737133237.0431197, 1737133237.165854, 1737133237.3042967, 1737133237.4366968, 1737133237.57484, 1737133237.7010353, 1737133237.8294039, 1737133237.9725947, 1737133238.105419, 1737133238.2338653, 1737133238.3577328, 1737133238.4862757, 1737133238.6265686, 1737133238.7582054, 1737133238.8965328, 1737133239.037624, 1737133239.1806629, 1737133239.3268232, 1737133239.4711864, 1737133239.6114914, 1737133239.7537484, 1737133239.8949988, 1737133240.0726163, 1737133240.2261417, 1737133240.3564715, 1737133240.5059633, 1737133240.6379998, 1737133240.7618444, 1737133240.891187, 1737133241.0285654, 1737133241.1558743, 1737133241.3337142, 1737133241.4823253, 1737133241.6196952, 1737133241.7748506, 1737133241.9134076, 1737133242.0613198, 1737133242.1980555, 1737133242.334337, 1737133242.4759648, 1737133242.6783795, 1737133242.89046, 1737133243.0801246, 1737133243.247132, 1737133243.3777993, 1737133243.505665, 1737133243.639582, 1737133243.7665966, 1737133243.8923566, 1737133244.0271516, 1737133244.1737785, 1737133244.3100896, 1737133244.4496322, 1737133244.58462, 1737133244.714046, 1737133244.850192, 1737133244.9817407, 1737133245.114987, 1737133245.252841, 1737133245.377998, 1737133245.508589, 1737133245.6382065, 1737133245.7713914], "score": 0, "output_len": 77, "output": "def count_distinct_characters(string: str) -> int:\n    return len(set(string.lower()))\n\n# Example usage:\nprint(count_distinct_characters('xyzXYZ'))  # Output: 3\nprint(count_distinct_characters('Jerry'))   # Output: 4\n", "input_len": 109}
{"id": "HumanEval/17", "model_memory": 48500.0, "time_taken": 21.428032159805298, "input_kv_memory": 49754.0, "memory_usagetime_metric": [1737133246.2951152, 1737133246.4877026, 1737133246.6374063, 1737133246.78671, 1737133246.9211142, 1737133247.0577292, 1737133247.1814647, 1737133247.3002841, 1737133247.4244459, 1737133247.5523725, 1737133247.6749747, 1737133247.8008819, 1737133247.9293406, 1737133248.0528865, 1737133248.1850536, 1737133248.332083, 1737133248.4475603, 1737133248.5883539, 1737133248.7286468, 1737133248.8736107, 1737133249.01056, 1737133249.1441514, 1737133249.2779438, 1737133249.405748, 1737133249.55119, 1737133249.6873634, 1737133249.8193424, 1737133249.9511302, 1737133250.078764, 1737133250.2002146, 1737133250.3244138, 1737133250.4497483, 1737133250.5855243, 1737133250.7183769, 1737133250.8486745, 1737133250.9736543, 1737133251.105558, 1737133251.2388403, 1737133251.3678157, 1737133251.4925416, 1737133251.6190994, 1737133251.7416916, 1737133251.873759, 1737133252.0022664, 1737133252.1311135, 1737133252.2702022, 1737133252.39643, 1737133252.5395548, 1737133252.6693077, 1737133252.795565, 1737133252.922345, 1737133253.060872, 1737133253.1948934, 1737133253.3255398, 1737133253.4551983, 1737133253.5922904, 1737133253.7365634, 1737133253.865574, 1737133253.9998555, 1737133254.129025, 1737133254.2604067, 1737133254.3927288, 1737133254.5244813, 1737133254.6459012, 1737133254.767928, 1737133254.904646, 1737133255.0335453, 1737133255.1595907, 1737133255.293259, 1737133255.4184344, 1737133255.550916, 1737133255.695341, 1737133255.8268387, 1737133255.9557934, 1737133256.0813286, 1737133256.21244, 1737133256.349091, 1737133256.4816606, 1737133256.613335, 1737133256.7442276, 1737133256.876326, 1737133257.0123944, 1737133257.1402736, 1737133257.2732677, 1737133257.4210312, 1737133257.5536153, 1737133257.6832688, 1737133257.8326895, 1737133257.9631782, 1737133258.1125522, 1737133258.2442741, 1737133258.3834324, 1737133258.5144057, 1737133258.6490393, 1737133258.7793126, 1737133258.910485, 1737133259.0347295, 1737133259.1671195, 1737133259.2950742, 1737133259.4325368, 1737133259.5664496, 1737133259.703862, 1737133259.8487713, 1737133259.9843254, 1737133260.12443, 1737133260.2617536, 1737133260.3913245, 1737133260.523798, 1737133260.660792, 1737133260.7974966, 1737133260.934492, 1737133261.0682797, 1737133261.2062976, 1737133261.3369327, 1737133261.4712331, 1737133261.6026556, 1737133261.7366953, 1737133261.8744452, 1737133262.0750499, 1737133262.2154105, 1737133262.3496542, 1737133262.4884894, 1737133262.6310613, 1737133262.7594337, 1737133262.9015596, 1737133263.0353305, 1737133263.1780272, 1737133263.3133178, 1737133263.5086915, 1737133263.641456, 1737133263.7718763, 1737133263.90707, 1737133264.0403943, 1737133264.1702242, 1737133264.300393, 1737133264.431906, 1737133264.5660086, 1737133264.705662, 1737133264.8351743, 1737133264.967874, 1737133265.1035311, 1737133265.316243, 1737133265.495922, 1737133265.6609964, 1737133265.7938576, 1737133265.9340456, 1737133266.0653627, 1737133266.205592, 1737133266.3356962, 1737133266.469002, 1737133266.603371, 1737133266.7409127, 1737133266.8840013, 1737133267.0216792, 1737133267.1895523, 1737133267.347682], "score": 0, "output_len": 155, "output": "from typing import List\n\ndef parse_music(music_string: str) -> List[int]:\n    beats = {'o': 4, 'o|': 2, '.|': 1}\n    parsed_beats = []\n    for note in music_string.split():\n        parsed_beats.append(beats[note])\n    return parsed_beats\n\n# Example usage:\nprint(parse_music('o o| .| o| o| .| .| .| o o'))  # Output: [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]", "input_len": 214}
{"id": "HumanEval/18", "model_memory": 48500.0, "time_taken": 18.93171191215515, "input_kv_memory": 49240.0, "memory_usagetime_metric": [1737133267.8271654, 1737133267.9777765, 1737133268.1034007, 1737133268.226018, 1737133268.3533115, 1737133268.475685, 1737133268.6057246, 1737133268.729697, 1737133268.852775, 1737133268.9784832, 1737133269.1090534, 1737133269.2319655, 1737133269.3531191, 1737133269.4754875, 1737133269.6027386, 1737133269.72701, 1737133269.8558445, 1737133269.9820147, 1737133270.1268716, 1737133270.2558563, 1737133270.381234, 1737133270.5120082, 1737133270.6422353, 1737133270.767086, 1737133270.8836396, 1737133271.0159442, 1737133271.1455748, 1737133271.2696073, 1737133271.3871546, 1737133271.5132654, 1737133271.6404443, 1737133271.7799082, 1737133271.9017556, 1737133272.0327797, 1737133272.1619103, 1737133272.2850974, 1737133272.415186, 1737133272.5414467, 1737133272.6679676, 1737133272.7920809, 1737133272.9197686, 1737133273.0515137, 1737133273.1763048, 1737133273.3106427, 1737133273.434715, 1737133273.5555952, 1737133273.68423, 1737133273.8158865, 1737133273.9470973, 1737133274.0692759, 1737133274.2220614, 1737133274.353041, 1737133274.4814246, 1737133274.6104546, 1737133274.7339902, 1737133274.8632429, 1737133274.9928014, 1737133275.1187415, 1737133275.2467468, 1737133275.3791978, 1737133275.5086198, 1737133275.6386466, 1737133275.761134, 1737133275.8983119, 1737133276.0269296, 1737133276.161467, 1737133276.3031864, 1737133276.4342906, 1737133276.5883677, 1737133276.72114, 1737133276.850378, 1737133276.9872851, 1737133277.1174586, 1737133277.2539613, 1737133277.3834584, 1737133277.513734, 1737133277.643464, 1737133277.7729611, 1737133277.911929, 1737133278.0484264, 1737133278.1857164, 1737133278.3385105, 1737133278.47034, 1737133278.601853, 1737133278.7445226, 1737133278.8746982, 1737133279.0103662, 1737133279.140428, 1737133279.2662172, 1737133279.39699, 1737133279.533165, 1737133279.6796987, 1737133279.8060436, 1737133279.933329, 1737133280.0514243, 1737133280.190312, 1737133280.3262274, 1737133280.4547722, 1737133280.5856154, 1737133280.7074437, 1737133280.8464375, 1737133280.9844532, 1737133281.1127865, 1737133281.2462459, 1737133281.3781161, 1737133281.51509, 1737133281.6520786, 1737133281.7829108, 1737133281.913414, 1737133282.0457911, 1737133282.180247, 1737133282.3164582, 1737133282.4592936, 1737133282.5993984, 1737133282.7304673, 1737133282.8615339, 1737133282.9907804, 1737133283.1223805, 1737133283.2561815, 1737133283.3869195, 1737133283.5297744, 1737133283.672312, 1737133283.7976532, 1737133283.931865, 1737133284.0639977, 1737133284.201217, 1737133284.3369496, 1737133284.530711, 1737133284.670762, 1737133284.8043854, 1737133284.9368405, 1737133285.0766926, 1737133285.2165782, 1737133285.3517854, 1737133285.4805121, 1737133285.6227825, 1737133285.761709, 1737133285.901907, 1737133286.0337117, 1737133286.1652408, 1737133286.3056238, 1737133286.446394], "score": 0, "output_len": 138, "output": "def how_many_times(string: str, substring: str) -> int:\n    count = start = 0\n    while True:\n        start = string.find(substring, start) + 1\n        if start > 0:\n            count += 1\n        else:\n            break\n    return count\n\n# Test cases\nprint(how_many_times('', 'a'))  # Output: 0\nprint(how_many_times('aaa', 'a'))  # Output: 3\nprint(how_many_times('aaaa', 'aa'))  # Output: 3\n", "input_len": 125}
{"id": "HumanEval/19", "model_memory": 48500.0, "time_taken": 23.254791975021362, "input_kv_memory": 49340.0, "memory_usagetime_metric": [1737133286.9600844, 1737133287.0935426, 1737133287.2151806, 1737133287.3341234, 1737133287.4706423, 1737133287.5968091, 1737133287.7255318, 1737133287.856008, 1737133287.9845562, 1737133288.1226807, 1737133288.2534275, 1737133288.3969707, 1737133288.5245783, 1737133288.655013, 1737133288.7865496, 1737133288.9070833, 1737133289.0419676, 1737133289.1697528, 1737133289.3069017, 1737133289.4331868, 1737133289.5552382, 1737133289.6849904, 1737133289.8140974, 1737133289.9433002, 1737133290.0632164, 1737133290.1949172, 1737133290.325455, 1737133290.4531872, 1737133290.5986207, 1737133290.7416525, 1737133290.8700416, 1737133290.9987445, 1737133291.1306043, 1737133291.2705767, 1737133291.3992858, 1737133291.5228043, 1737133291.651573, 1737133291.775677, 1737133291.9037626, 1737133292.037981, 1737133292.1681323, 1737133292.2938743, 1737133292.4246962, 1737133292.5579658, 1737133292.6843817, 1737133292.8070056, 1737133292.9376984, 1737133293.0650423, 1737133293.195602, 1737133293.3293426, 1737133293.4533212, 1737133293.5807765, 1737133293.7109466, 1737133293.8427448, 1737133293.9646986, 1737133294.093683, 1737133294.2204795, 1737133294.3632581, 1737133294.4963405, 1737133294.6232932, 1737133294.7534149, 1737133294.8809156, 1737133295.014764, 1737133295.1456025, 1737133295.273391, 1737133295.4006915, 1737133295.536012, 1737133295.664632, 1737133295.8008983, 1737133295.9287658, 1737133296.0577316, 1737133296.1874504, 1737133296.3218591, 1737133296.4546063, 1737133296.5802288, 1737133296.7062545, 1737133296.834272, 1737133296.9640844, 1737133297.1018841, 1737133297.2364914, 1737133297.3681662, 1737133297.4996293, 1737133297.6294239, 1737133297.7542925, 1737133297.8923461, 1737133298.0260103, 1737133298.1580732, 1737133298.289227, 1737133298.469654, 1737133298.6574817, 1737133298.7893178, 1737133298.9236336, 1737133299.0529375, 1737133299.186006, 1737133299.3300712, 1737133299.4619803, 1737133299.600017, 1737133299.7326448, 1737133299.874628, 1737133300.0279934, 1737133300.1621668, 1737133300.297205, 1737133300.4278026, 1737133300.5689008, 1737133300.7459493, 1737133300.8715804, 1737133301.0031705, 1737133301.1458585, 1737133301.2817814, 1737133301.415545, 1737133301.5486186, 1737133301.69395, 1737133301.8297608, 1737133301.9693878, 1737133302.0971355, 1737133302.2306674, 1737133302.3646235, 1737133302.4942083, 1737133302.6329863, 1737133302.76051, 1737133302.918495, 1737133303.0598218, 1737133303.1964033, 1737133303.3339307, 1737133303.4775083, 1737133303.6168451, 1737133303.7590005, 1737133303.8946803, 1737133304.0424094, 1737133304.1764119, 1737133304.3254716, 1737133304.466004, 1737133304.6005993, 1737133304.7303424, 1737133304.8624845, 1737133304.9946108, 1737133305.1229656, 1737133305.269711, 1737133305.4155493, 1737133305.547031, 1737133305.6782637, 1737133305.8079033, 1737133305.9392164, 1737133306.0800605, 1737133306.2125258, 1737133306.3422863, 1737133306.483721, 1737133306.636481, 1737133306.777923, 1737133306.9116247, 1737133307.0490234, 1737133307.1958523, 1737133307.3267064, 1737133307.4617887, 1737133307.5955076, 1737133307.7240367, 1737133307.8555017, 1737133307.9964583, 1737133308.13842, 1737133308.2695265, 1737133308.491369, 1737133308.6247067, 1737133308.7615342, 1737133308.89873, 1737133309.0352654, 1737133309.1816351, 1737133309.418017, 1737133309.6611254, 1737133309.866191], "score": 0, "output_len": 125, "output": "def sort_numbers(numbers: str) -> str:\n    valid_numbers = ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']\n    numbers_list = numbers.split()\n    sorted_numbers = sorted(numbers_list, key=lambda x: valid_numbers.index(x))\n    return ' '.join(sorted_numbers)\n\n# Example usage:\nprint(sort_numbers('three one five'))  # Output: 'one three five'\n", "input_len": 143}
{"id": "HumanEval/20", "model_memory": 48500.0, "time_taken": 33.07715678215027, "input_kv_memory": 50118.0, "memory_usagetime_metric": [1737133310.5440724, 1737133310.7320123, 1737133310.9084613, 1737133311.040575, 1737133311.1764758, 1737133311.301519, 1737133311.4365754, 1737133311.5970924, 1737133311.7633963, 1737133311.9114773, 1737133312.0379775, 1737133312.161233, 1737133312.2975767, 1737133312.4229116, 1737133312.554516, 1737133312.6803422, 1737133312.8048096, 1737133312.9264004, 1737133313.0585663, 1737133313.1951673, 1737133313.3287263, 1737133313.454949, 1737133313.595216, 1737133313.7258446, 1737133313.8568914, 1737133313.9845073, 1737133314.1176167, 1737133314.2458136, 1737133314.3773227, 1737133314.5042064, 1737133314.6264076, 1737133314.7481778, 1737133314.8782928, 1737133315.0096054, 1737133315.1326656, 1737133315.2543387, 1737133315.3845468, 1737133315.5139349, 1737133315.6467323, 1737133315.7786674, 1737133315.8995392, 1737133316.0290496, 1737133316.1597764, 1737133316.2932234, 1737133316.422392, 1737133316.5531864, 1737133316.6811, 1737133316.8138802, 1737133316.9461677, 1737133317.07961, 1737133317.2074754, 1737133317.3351076, 1737133317.474206, 1737133317.6047165, 1737133317.7334437, 1737133317.879626, 1737133318.0289576, 1737133318.1691592, 1737133318.2980826, 1737133318.4250925, 1737133318.5511239, 1737133318.6785417, 1737133318.8086178, 1737133318.9427726, 1737133319.0685813, 1737133319.2016613, 1737133319.3338964, 1737133319.4658175, 1737133319.59766, 1737133319.7413166, 1737133319.8971279, 1737133320.0276709, 1737133320.1623123, 1737133320.2957795, 1737133320.4332292, 1737133320.5610452, 1737133320.6874347, 1737133320.8172321, 1737133320.9449513, 1737133321.076042, 1737133321.2079048, 1737133321.357607, 1737133321.4982836, 1737133321.6310093, 1737133321.7620277, 1737133321.8963792, 1737133322.0302336, 1737133322.1629624, 1737133322.295544, 1737133322.4277346, 1737133322.5603683, 1737133322.6903963, 1737133322.8201182, 1737133322.9498775, 1737133323.0815723, 1737133323.2094905, 1737133323.340849, 1737133323.4734871, 1737133323.6001518, 1737133323.7334862, 1737133323.864919, 1737133324.0045137, 1737133324.1473708, 1737133324.2866776, 1737133324.4288967, 1737133324.559903, 1737133324.6921403, 1737133324.8229597, 1737133324.9646235, 1737133325.1037872, 1737133325.246918, 1737133325.376249, 1737133325.5162272, 1737133325.6508267, 1737133325.7843847, 1737133325.9144793, 1737133326.0428424, 1737133326.181328, 1737133326.3133235, 1737133326.4509952, 1737133326.5967803, 1737133326.7359562, 1737133326.8808877, 1737133327.0518196, 1737133327.1916194, 1737133327.3217733, 1737133327.4713082, 1737133327.6030827, 1737133327.7438965, 1737133327.8847165, 1737133328.0181668, 1737133328.1509678, 1737133328.2848554, 1737133328.4302473, 1737133328.5599632, 1737133328.6906886, 1737133328.8225317, 1737133328.9603453, 1737133329.0960763, 1737133329.2390478, 1737133329.376743, 1737133329.5213287, 1737133329.6598942, 1737133329.805149, 1737133329.9511037, 1737133330.083233, 1737133330.2240698, 1737133330.358648, 1737133330.4932747, 1737133330.6379535, 1737133330.781524, 1737133330.9192336, 1737133331.055081, 1737133331.1921077, 1737133331.3312247, 1737133331.5242352, 1737133331.6680737, 1737133331.8040597, 1737133331.9377227, 1737133332.0879514, 1737133332.2331223, 1737133332.371024, 1737133332.5038667, 1737133332.6406794, 1737133332.7854326, 1737133332.9260795, 1737133333.066223, 1737133333.1983216, 1737133333.3424127, 1737133333.4858854, 1737133333.6328242, 1737133333.7698846, 1737133333.9220605, 1737133334.0634995, 1737133334.204752, 1737133334.3482242, 1737133334.4816217, 1737133334.6203191, 1737133334.810859, 1737133334.9495451, 1737133335.0900097, 1737133335.224651, 1737133335.3717844, 1737133335.5132015, 1737133335.6573749, 1737133335.7963526, 1737133335.940326, 1737133336.0767255, 1737133336.2117386, 1737133336.3552878, 1737133336.507485, 1737133336.663864, 1737133336.79477, 1737133336.9256063, 1737133337.070182, 1737133337.2075887, 1737133337.3476584, 1737133337.4797528, 1737133337.6282735, 1737133337.7649484, 1737133337.9549208, 1737133338.1887853, 1737133338.3761413, 1737133338.5121553, 1737133338.6511161, 1737133338.7909236, 1737133338.9211142, 1737133339.0539503, 1737133339.187672, 1737133339.333707, 1737133339.4687295, 1737133339.6071455, 1737133339.7417607, 1737133339.8784997, 1737133340.0269423, 1737133340.1634233, 1737133340.299812, 1737133340.4371734, 1737133340.5762928, 1737133340.714595, 1737133340.8663366, 1737133341.0079043, 1737133341.1422071, 1737133341.2842202, 1737133341.4329422, 1737133341.5755355, 1737133341.713629, 1737133341.8473537, 1737133341.9822679, 1737133342.1285079, 1737133342.263956, 1737133342.4043767, 1737133342.5429344, 1737133342.6814392, 1737133342.8250475, 1737133342.9546003, 1737133343.1010897], "score": 0, "output_len": 236, "output": "from typing import List, Tuple\n\ndef find_closest_elements(numbers: List[float]) -> Tuple[float, float]:\n    numbers.sort()\n    min_diff = float('inf')\n    closest_pair = ()\n    for i in range(len(numbers) - 1):\n        diff = numbers[i+1] - numbers[i]\n        if diff < min_diff:\n            min_diff = diff\n            closest_pair = (numbers[i], numbers[i+1])\n    return closest_pair\n\n# Test cases\nprint(find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]))  # Output: (2.0, 2.2)\nprint(find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]))  # Output: (2.0, 2.0)\n", "input_len": 207}
{"id": "HumanEval/21", "model_memory": 48500.0, "time_taken": 15.827024459838867, "input_kv_memory": 49640.0, "memory_usage": [49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49740.0, 49760.0, 49760.0, 49760.0, 49760.0, 49760.0, 49760.0, 49760.0, 49760.0, 49760.0, 49760.0, 49760.0, 49760.0, 49760.0, 49760.0, 49760.0, 49760.0, 49760.0, 49760.0, 49760.0, 49760.0, 49760.0, 49760.0, 49760.0, 49760.0, 49760.0, 49760.0, 49800.0, 49820.0, 49820.0, 49820.0, 49820.0, 49820.0, 49820.0, 49820.0, 49820.0, 49820.0, 49820.0, 49820.0, 49820.0, 49820.0, 49820.0, 49380.0], "time_metric": [1737133343.6616788, 1737133343.7968512, 1737133343.9224234, 1737133344.0449867, 1737133344.174873, 1737133344.300573, 1737133344.4284468, 1737133344.5751045, 1737133344.7182844, 1737133344.8465655, 1737133344.9776318, 1737133345.1063342, 1737133345.2324483, 1737133345.3617942, 1737133345.493933, 1737133345.632604, 1737133345.766004, 1737133345.8965044, 1737133346.0257843, 1737133346.1590395, 1737133346.2872705, 1737133346.4192383, 1737133346.5413818, 1737133346.6711836, 1737133346.7994368, 1737133346.9277434, 1737133347.0667303, 1737133347.2449796, 1737133347.3884542, 1737133347.5231726, 1737133347.653458, 1737133347.7844481, 1737133347.9120157, 1737133348.0657465, 1737133348.206225, 1737133348.3372185, 1737133348.4595542, 1737133348.5859463, 1737133348.715086, 1737133348.8400674, 1737133348.9639175, 1737133349.0967047, 1737133349.2230902, 1737133349.3535972, 1737133349.4802144, 1737133349.611979, 1737133349.7432816, 1737133349.872603, 1737133349.998544, 1737133350.1286802, 1737133350.264856, 1737133350.3982751, 1737133350.5263383, 1737133350.6527953, 1737133350.7825987, 1737133350.9214704, 1737133351.055527, 1737133351.1836596, 1737133351.316622, 1737133351.448658, 1737133351.5756564, 1737133351.707149, 1737133351.8427162, 1737133351.9707913, 1737133352.1053941, 1737133352.2331862, 1737133352.3635976, 1737133352.498896, 1737133352.623053, 1737133352.7481456, 1737133352.8766713, 1737133353.0066257, 1737133353.1426506, 1737133353.2723374, 1737133353.4153175, 1737133353.5434291, 1737133353.6792088, 1737133353.8035276, 1737133353.9385679, 1737133354.0702093, 1737133354.205312, 1737133354.3328745, 1737133354.4625828, 1737133354.5889034, 1737133354.722597, 1737133354.8555477, 1737133354.9813545, 1737133355.1152265, 1737133355.2474954, 1737133355.3759322, 1737133355.510057, 1737133355.6380236, 1737133355.7692184, 1737133355.9016206, 1737133356.0689256, 1737133356.2045274, 1737133356.3404887, 1737133356.4731622, 1737133356.606531, 1737133356.7379508, 1737133356.8667135, 1737133357.013404, 1737133357.1529582, 1737133357.2908819, 1737133357.4284708, 1737133357.5619354, 1737133357.7029982, 1737133357.8309805, 1737133357.9608817, 1737133358.1074576, 1737133358.2391706, 1737133358.3770332, 1737133358.5400038, 1737133358.6732097, 1737133358.8311074, 1737133358.9645045, 1737133359.1050012], "score": 0, "output_len": 74, "output": "from typing import List\n\n\ndef rescale_to_unit(numbers: List[float]) -> List[float]:\n    min_val = min(numbers)\n    max_val = max(numbers)\n    return [(num - min_val) / (max_val - min_val) for num in numbers]\n", "input_len": 162}
{"id": "HumanEval/22", "model_memory": 48500.0, "time_taken": 11.605857610702515, "input_kv_memory": 49296.0, "memory_usagetime_metric": [1737133359.5291185, 1737133359.6504195, 1737133359.7799048, 1737133359.9047673, 1737133360.0342999, 1737133360.165876, 1737133360.3111038, 1737133360.435816, 1737133360.5734956, 1737133360.697236, 1737133360.835331, 1737133360.958767, 1737133361.087556, 1737133361.213943, 1737133361.3436127, 1737133361.4740822, 1737133361.6027477, 1737133361.7285428, 1737133361.8544981, 1737133361.9790552, 1737133362.1082647, 1737133362.2454028, 1737133362.3690836, 1737133362.4988663, 1737133362.629468, 1737133362.7527328, 1737133362.8754086, 1737133363.004543, 1737133363.136643, 1737133363.2657883, 1737133363.388531, 1737133363.5106106, 1737133363.6383417, 1737133363.7727218, 1737133363.9014292, 1737133364.0309143, 1737133364.1556091, 1737133364.2840445, 1737133364.4220479, 1737133364.5528743, 1737133364.6814456, 1737133364.8010354, 1737133364.9332778, 1737133365.0676708, 1737133365.2034173, 1737133365.3308022, 1737133365.45994, 1737133365.5922716, 1737133365.7267087, 1737133365.8612607, 1737133365.9858174, 1737133366.111584, 1737133366.2447512, 1737133366.3872252, 1737133366.5238569, 1737133366.6630595, 1737133366.7929308, 1737133366.9221144, 1737133367.0512187, 1737133367.193218, 1737133367.3259387, 1737133367.454987, 1737133367.5888386, 1737133367.720231, 1737133367.8631449, 1737133367.9942722, 1737133368.1214676, 1737133368.2536705, 1737133368.4589548, 1737133368.6704369, 1737133368.8469415, 1737133368.9756236, 1737133369.1068447, 1737133369.2388053, 1737133369.3731463, 1737133369.5001383, 1737133369.6348817, 1737133369.7787993, 1737133369.9310086, 1737133370.076199, 1737133370.2086341, 1737133370.3400018, 1737133370.477672, 1737133370.6119313, 1737133370.7418745, 1737133370.871319], "score": 0, "output_len": 36, "output": "def filter_integers(values: List[Any]) -> List[int]:\n    return [value for value in values if isinstance(value, int)]\n", "input_len": 127}
{"id": "HumanEval/23", "model_memory": 48500.0, "time_taken": 2.6765544414520264, "input_kv_memory": 49066.0, "memory_usage": [49066.0, 49126.0, 49142.0, 49144.0, 49148.0, 49148.0, 49148.0, 49148.0, 49148.0, 49148.0, 49148.0, 49148.0, 49148.0, 49148.0, 49148.0, 49148.0, 49148.0, 49148.0, 49148.0, 48724.0], "time_metric": [1737133371.2925541, 1737133371.424125, 1737133371.5526369, 1737133371.6737702, 1737133371.7970831, 1737133371.9339623, 1737133372.0613875, 1737133372.1893823, 1737133372.3155413, 1737133372.4502275, 1737133372.5765283, 1737133372.7070062, 1737133372.8359058, 1737133372.9590802, 1737133373.0801666, 1737133373.2086651, 1737133373.3292966, 1737133373.453917, 1737133373.5804212, 1737133373.7133224], "score": 0, "output_len": 20, "output": "def strlen(string: str) -> int:\n    return len(string)\n", "input_len": 73}
{"id": "HumanEval/24", "model_memory": 48508.0, "time_taken": 11.057740211486816, "input_kv_memory": 49124.0, "memory_usage": [49124.0, 49160.0, 49160.0, 49160.0, 49160.0, 49160.0, 49160.0, 49160.0, 49160.0, 49160.0, 49160.0, 49160.0, 49160.0, 49160.0, 49160.0, 49160.0, 49160.0, 49160.0, 49160.0, 49160.0, 49160.0, 49160.0, 49160.0, 49160.0, 49160.0, 49160.0, 49160.0, 49160.0, 49160.0, 49160.0, 49160.0, 49160.0, 49160.0, 49160.0, 49160.0, 49160.0, 49160.0, 49160.0, 49160.0, 49160.0, 49160.0, 49160.0, 49160.0, 49160.0, 49160.0, 49160.0, 49160.0, 49160.0, 49160.0, 49160.0, 49240.0, 49240.0, 49280.0, 49280.0, 49280.0, 49280.0, 49280.0, 49280.0, 49280.0, 49280.0, 49280.0, 49280.0, 49280.0, 49280.0, 49280.0, 49280.0, 49280.0, 49280.0, 49280.0, 49280.0, 49280.0, 49280.0, 49280.0, 49280.0, 49280.0, 49280.0, 49280.0], "time_metric": [1737133374.1574006, 1737133374.2944367, 1737133374.4323115, 1737133374.5605915, 1737133374.68009, 1737133374.8024526, 1737133374.9291508, 1737133375.0545802, 1737133375.1803155, 1737133375.3057487, 1737133375.456464, 1737133375.6218674, 1737133375.7829456, 1737133375.9309785, 1737133376.0590456, 1737133376.1862326, 1737133376.3129802, 1737133376.4418015, 1737133376.6035283, 1737133376.7684596, 1737133376.8975668, 1737133377.02611, 1737133377.1554806, 1737133377.2806637, 1737133377.411789, 1737133377.5885766, 1737133377.76889, 1737133377.907626, 1737133378.0494018, 1737133378.212968, 1737133378.3560603, 1737133378.517459, 1737133378.6536796, 1737133378.7870169, 1737133378.924678, 1737133379.0625448, 1737133379.2019184, 1737133379.3559902, 1737133379.499335, 1737133379.630069, 1737133379.7632377, 1737133379.933312, 1737133380.1148193, 1737133380.308352, 1737133380.461527, 1737133380.5877843, 1737133380.7167304, 1737133380.843769, 1737133380.9801195, 1737133381.1097362, 1737133381.2426248, 1737133381.3766062, 1737133381.5092578, 1737133381.6472912, 1737133381.8162603, 1737133381.9474704, 1737133382.0791929, 1737133382.2108974, 1737133382.3464928, 1737133382.522113, 1737133382.7120097, 1737133382.8508258, 1737133382.9803011, 1737133383.1114564, 1737133383.246467, 1737133383.3792393, 1737133383.5136154, 1737133383.6416814, 1737133383.769695, 1737133383.9084718, 1737133384.0584958, 1737133384.2028375, 1737133384.3450253, 1737133384.5168052, 1737133384.651436, 1737133384.7865772, 1737133384.926603], "score": 0, "output_len": 77, "output": "def largest_divisor(n: int) -> int:\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n            return i\n    return 1\n\n# Example usage:\nprint(largest_divisor(15))  # Output: 5\n", "input_len": 85}
{"id": "HumanEval/25", "model_memory": 48768.0, "time_taken": 24.046724796295166, "input_kv_memory": 49260.0, "memory_usagetime_metric": [1737133385.5036368, 1737133385.633988, 1737133385.7647638, 1737133385.9002943, 1737133386.0447361, 1737133386.2079444, 1737133386.3702333, 1737133386.5137777, 1737133386.6748142, 1737133386.8203318, 1737133386.9830484, 1737133387.1464097, 1737133387.2753694, 1737133387.425423, 1737133387.568529, 1737133387.6962273, 1737133387.8253913, 1737133387.9508965, 1737133388.0773404, 1737133388.2072828, 1737133388.3392446, 1737133388.4653876, 1737133388.5860388, 1737133388.7168605, 1737133388.845631, 1737133388.9754374, 1737133389.1081629, 1737133389.2488096, 1737133389.3770905, 1737133389.5019581, 1737133389.6336331, 1737133389.7695684, 1737133389.897886, 1737133390.024553, 1737133390.1628642, 1737133390.2910662, 1737133390.41976, 1737133390.5538652, 1737133390.6945612, 1737133390.8225064, 1737133390.9549024, 1737133391.0752285, 1737133391.2076905, 1737133391.3370101, 1737133391.4650018, 1737133391.5932202, 1737133391.71616, 1737133391.849494, 1737133391.980513, 1737133392.107659, 1737133392.2320595, 1737133392.3545651, 1737133392.483631, 1737133392.6131353, 1737133392.7358096, 1737133392.8682225, 1737133392.9971766, 1737133393.1288893, 1737133393.2581468, 1737133393.388184, 1737133393.5161676, 1737133393.6441405, 1737133393.7753694, 1737133393.9045117, 1737133394.0340657, 1737133394.1647587, 1737133394.2987952, 1737133394.446258, 1737133394.5853035, 1737133394.709471, 1737133394.8365545, 1737133394.9775126, 1737133395.108913, 1737133395.2337806, 1737133395.363177, 1737133395.4963403, 1737133395.6256018, 1737133395.76512, 1737133395.913908, 1737133396.0491948, 1737133396.1769242, 1737133396.3119235, 1737133396.4617758, 1737133396.6044908, 1737133396.7445295, 1737133396.8702857, 1737133397.0122504, 1737133397.1464581, 1737133397.279262, 1737133397.4118636, 1737133397.542667, 1737133397.6784248, 1737133397.816112, 1737133397.9547698, 1737133398.08402, 1737133398.215303, 1737133398.350212, 1737133398.480463, 1737133398.6179392, 1737133398.7514603, 1737133398.8811686, 1737133399.0141494, 1737133399.145584, 1737133399.2809067, 1737133399.4156241, 1737133399.5485265, 1737133399.6765974, 1737133399.805971, 1737133399.935576, 1737133400.069362, 1737133400.2108798, 1737133400.3449707, 1737133400.4737961, 1737133400.6173482, 1737133400.7488644, 1737133400.8848827, 1737133401.015772, 1737133401.1475823, 1737133401.2879834, 1737133401.4237804, 1737133401.55723, 1737133401.6907063, 1737133401.8196108, 1737133401.9587927, 1737133402.08562, 1737133402.227047, 1737133402.3670082, 1737133402.5033648, 1737133402.6396515, 1737133402.7694936, 1737133402.8999374, 1737133403.0414329, 1737133403.172956, 1737133403.310975, 1737133403.444586, 1737133403.5902283, 1737133403.717948, 1737133403.8564415, 1737133403.9883878, 1737133404.1269124, 1737133404.2591388, 1737133404.3925903, 1737133404.537204, 1737133404.674313, 1737133404.8067894, 1737133404.9453926, 1737133405.0904984, 1737133405.2372901, 1737133405.3737242, 1737133405.5136938, 1737133405.6987162, 1737133405.836761, 1737133405.9755852, 1737133406.1111968, 1737133406.2372193, 1737133406.3643265, 1737133406.4961429, 1737133406.640082, 1737133406.7803335, 1737133406.919783, 1737133407.0510018, 1737133407.186684, 1737133407.327933, 1737133407.4678788, 1737133407.6074324, 1737133407.7392108, 1737133407.8671277, 1737133408.0149202, 1737133408.1733353, 1737133408.30849, 1737133408.4468467, 1737133408.5803595, 1737133408.7115376, 1737133408.8478782, 1737133408.991443, 1737133409.1238215], "score": 0, "output_len": 176, "output": "from typing import List\n\ndef factorize(n: int) -> List[int]:\n    factors = []\n    divisor = 2\n    while n > 1:\n        while n % divisor == 0:\n            factors.append(divisor)\n            n //= divisor\n        divisor += 1\n        if divisor * divisor > n:\n            if n > 1:\n                factors.append(n)\n            break\n    return factors\n\n# Test cases\nprint(factorize(8))  # Output: [2, 2, 2]\nprint(factorize(25))  # Output: [5, 5]\nprint(factorize(70))  # Output: [2, 5, 7]", "input_len": 163}
{"id": "HumanEval/26", "model_memory": 49020.0, "time_taken": 9.723315238952637, "input_kv_memory": 49040.0, "memory_usage": [49040.0, 49152.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49092.0], "time_metric": [1737133409.56095, 1737133409.687267, 1737133409.8152103, 1737133409.939945, 1737133410.063729, 1737133410.2015586, 1737133410.3359883, 1737133410.4662127, 1737133410.594802, 1737133410.7175431, 1737133410.84577, 1737133410.9705744, 1737133411.0916176, 1737133411.2238643, 1737133411.3581562, 1737133411.4841447, 1737133411.618814, 1737133411.7459438, 1737133411.874429, 1737133412.0065546, 1737133412.1374907, 1737133412.2817607, 1737133412.4092157, 1737133412.5387459, 1737133412.6640882, 1737133412.7876627, 1737133412.9162862, 1737133413.0527184, 1737133413.1862452, 1737133413.3276093, 1737133413.4558926, 1737133413.5993009, 1737133413.7394161, 1737133413.883953, 1737133414.0216455, 1737133414.1525135, 1737133414.2797964, 1737133414.407109, 1737133414.5365732, 1737133414.6710143, 1737133414.8010888, 1737133414.9321392, 1737133415.0590951, 1737133415.18915, 1737133415.3273647, 1737133415.4553313, 1737133415.594722, 1737133415.7285862, 1737133415.8536465, 1737133415.9898794, 1737133416.1183314, 1737133416.2494924, 1737133416.3814237, 1737133416.5093071, 1737133416.643198, 1737133416.780082, 1737133416.9100525, 1737133417.0375617, 1737133417.1641839, 1737133417.2987893, 1737133417.4250536, 1737133417.5577042, 1737133417.6918423, 1737133417.821265, 1737133417.9467075, 1737133418.0736449, 1737133418.212564, 1737133418.3509762, 1737133418.4837987, 1737133418.6203165, 1737133418.7555995, 1737133418.8847635, 1737133419.0217445], "score": 0, "output_len": 65, "output": "def remove_duplicates(numbers: List[int]) -> List[int]:\n    seen = set()\n    result = []\n    for num in numbers:\n        if num not in seen:\n            seen.add(num)\n            result.append(num)\n    return result\n", "input_len": 120}
{"id": "HumanEval/27", "model_memory": 48796.0, "time_taken": 3.3054287433624268, "input_kv_memory": 48912.0, "memory_usage": [48912.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 48924.0], "time_metric": [1737133419.441167, 1737133419.6170847, 1737133419.7482135, 1737133419.8778775, 1737133420.0070436, 1737133420.1305974, 1737133420.2617784, 1737133420.3939435, 1737133420.5221055, 1737133420.6510558, 1737133420.7831817, 1737133420.9163105, 1737133421.0497603, 1737133421.1777008, 1737133421.3110194, 1737133421.446812, 1737133421.581645, 1737133421.7093692, 1737133421.8404841, 1737133421.9671967, 1737133422.0928545, 1737133422.223915, 1737133422.354461, 1737133422.4843743], "score": 0, "output_len": 23, "output": "def flip_case(string: str) -> str:\n    return string.swapcase()\n", "input_len": 87}
{"id": "HumanEval/28", "model_memory": 48500.0, "time_taken": 3.259634494781494, "input_kv_memory": 49072.0, "memory_usage": [49072.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 49136.0, 48924.0], "time_metric": [1737133422.8995821, 1737133423.032988, 1737133423.153136, 1737133423.2742512, 1737133423.403004, 1737133423.5344548, 1737133423.6564188, 1737133423.7845197, 1737133423.9083993, 1737133424.055711, 1737133424.181828, 1737133424.3121467, 1737133424.4428716, 1737133424.578432, 1737133424.709254, 1737133424.841222, 1737133424.972216, 1737133425.109237, 1737133425.236527, 1737133425.3642027, 1737133425.4897447, 1737133425.6219604, 1737133425.7761185, 1737133425.900003], "score": 0, "output_len": 24, "output": "def concatenate(strings: List[str]) -> str:\n    return ''.join(strings)\n", "input_len": 93}
{"id": "HumanEval/29", "model_memory": 48500.0, "time_taken": 5.550782203674316, "input_kv_memory": 49356.0, "memory_usage": [49356.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49092.0], "time_metric": [1737133426.325286, 1737133426.457647, 1737133426.609783, 1737133426.7363272, 1737133426.8673308, 1737133426.9898448, 1737133427.110453, 1737133427.232085, 1737133427.360996, 1737133427.4910388, 1737133427.6170712, 1737133427.7428749, 1737133427.8707051, 1737133427.9962237, 1737133428.1227143, 1737133428.247424, 1737133428.3881586, 1737133428.5108116, 1737133428.639495, 1737133428.765713, 1737133428.887826, 1737133429.012602, 1737133429.136926, 1737133429.2648754, 1737133429.3902113, 1737133429.519243, 1737133429.6527715, 1737133429.7705836, 1737133429.9140139, 1737133430.0436604, 1737133430.1721961, 1737133430.316055, 1737133430.441241, 1737133430.5693295, 1737133430.698874, 1737133430.8277931, 1737133430.951184, 1737133431.0856473, 1737133431.2128243, 1737133431.3452454, 1737133431.4733772, 1737133431.605599], "score": 0, "output_len": 41, "output": "def filter_by_prefix(strings: List[str], prefix: str) -> List[str]:\n    return [s for s in strings if s.startswith(prefix)]\n", "input_len": 128}
{"id": "HumanEval/30", "model_memory": 48500.0, "time_taken": 13.583059549331665, "input_kv_memory": 49560.0, "memory_usagetime_metric": [1737133432.0808654, 1737133432.2112193, 1737133432.336511, 1737133432.4731667, 1737133432.5981731, 1737133432.7440295, 1737133432.8730147, 1737133433.0056944, 1737133433.124312, 1737133433.244506, 1737133433.3749452, 1737133433.5056016, 1737133433.6376936, 1737133433.773084, 1737133433.9017892, 1737133434.0325208, 1737133434.1657836, 1737133434.2954564, 1737133434.4289274, 1737133434.555569, 1737133434.6960654, 1737133434.8699787, 1737133435.050592, 1737133435.1722345, 1737133435.2999485, 1737133435.4309647, 1737133435.5553055, 1737133435.6875856, 1737133435.819768, 1737133435.954548, 1737133436.0792987, 1737133436.2087393, 1737133436.3389888, 1737133436.473251, 1737133436.6037002, 1737133436.734941, 1737133436.8640513, 1737133436.9934583, 1737133437.1310775, 1737133437.2639341, 1737133437.4038403, 1737133437.5283108, 1737133437.6566625, 1737133437.7836885, 1737133437.9109545, 1737133438.0810325, 1737133438.2203255, 1737133438.3485858, 1737133438.4731627, 1737133438.6147244, 1737133438.7512074, 1737133438.881789, 1737133439.009977, 1737133439.141787, 1737133439.284088, 1737133439.4194193, 1737133439.5453813, 1737133439.6794937, 1737133439.8136852, 1737133439.9450073, 1737133440.0701253, 1737133440.200932, 1737133440.3366163, 1737133440.4631448, 1737133440.5942292, 1737133440.722712, 1737133440.8548527, 1737133440.98735, 1737133441.1166828, 1737133441.2467148, 1737133441.3851893, 1737133441.5203567, 1737133441.6504807, 1737133441.7791078, 1737133441.9096, 1737133442.0368884, 1737133442.1707213, 1737133442.305874, 1737133442.4386995, 1737133442.5766447, 1737133442.7183397, 1737133442.8452363, 1737133442.9764104, 1737133443.1089435, 1737133443.2506533, 1737133443.3845108, 1737133443.5226185, 1737133443.6575127, 1737133443.7959716, 1737133443.9316905, 1737133444.0659535, 1737133444.2119002, 1737133444.3487499, 1737133444.5214756, 1737133444.6656485, 1737133444.8012397, 1737133444.9305687, 1737133445.0656767, 1737133445.2065182, 1737133445.3451152], "score": 0, "output_len": 99, "output": "def get_positive(l: list):\n    return [num for num in l if num > 0]\n\n# Example usage:\nprint(get_positive([-1, 2, -4, 5, 6]))\nprint(get_positive([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]))\n", "input_len": 156}
{"id": "HumanEval/31", "model_memory": 48500.0, "time_taken": 11.734222412109375, "input_kv_memory": 49600.0, "memory_usagetime_metric": [1737133445.8108032, 1737133445.9513159, 1737133446.0756106, 1737133446.20355, 1737133446.3276792, 1737133446.4500859, 1737133446.5776649, 1737133446.7063148, 1737133446.8419182, 1737133446.964127, 1737133447.0876696, 1737133447.2128177, 1737133447.3404589, 1737133447.4730558, 1737133447.5968394, 1737133447.7316554, 1737133447.8589582, 1737133447.9899797, 1737133448.1205127, 1737133448.2554111, 1737133448.3927147, 1737133448.52292, 1737133448.6557362, 1737133448.7811675, 1737133448.9112604, 1737133449.0432937, 1737133449.1703172, 1737133449.3104725, 1737133449.4488058, 1737133449.581568, 1737133449.7204795, 1737133449.8477714, 1737133449.985731, 1737133450.1191475, 1737133450.2469578, 1737133450.3754656, 1737133450.5047047, 1737133450.6366577, 1737133450.7759585, 1737133450.9153342, 1737133451.039984, 1737133451.1775217, 1737133451.3040264, 1737133451.4270525, 1737133451.549217, 1737133451.6932518, 1737133451.821251, 1737133451.9463804, 1737133452.0844452, 1737133452.2153027, 1737133452.3455176, 1737133452.4741335, 1737133452.6058424, 1737133452.746474, 1737133452.875386, 1737133453.012799, 1737133453.1407442, 1737133453.2792954, 1737133453.413312, 1737133453.5332088, 1737133453.6636493, 1737133453.795567, 1737133453.9233508, 1737133454.0581148, 1737133454.1861942, 1737133454.3170059, 1737133454.4506185, 1737133454.5813756, 1737133454.7114084, 1737133454.840996, 1737133454.971762, 1737133455.0974512, 1737133455.2253897, 1737133455.363006, 1737133455.4947202, 1737133455.6251369, 1737133455.756091, 1737133455.8812075, 1737133456.0108137, 1737133456.1424596, 1737133456.2716575, 1737133456.404384, 1737133456.548397, 1737133456.7021966, 1737133456.8321853, 1737133456.9713984, 1737133457.1078389, 1737133457.2372842], "score": 0, "output_len": 87, "output": "def is_prime(n):\n    if n <= 1:\n        return False\n    for i in range(2, int(n**0.5) + 1):\n        if n % i == 0:\n            return False\n    return True\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()\n", "input_len": 148}
{"id": "HumanEval/32", "model_memory": 48500.0, "time_taken": 36.15016317367554, "input_kv_memory": 50924.0, "memory_usagetime_metric": [1737133457.886401, 1737133458.0154994, 1737133458.1346037, 1737133458.261159, 1737133458.396922, 1737133458.538409, 1737133458.6593592, 1737133458.785133, 1737133458.911401, 1737133459.0434582, 1737133459.163263, 1737133459.2844718, 1737133459.4131463, 1737133459.5411258, 1737133459.6679983, 1737133459.7897162, 1737133459.9364522, 1737133460.0869365, 1737133460.232142, 1737133460.3803706, 1737133460.5208917, 1737133460.6553361, 1737133460.8035293, 1737133460.9411995, 1737133461.0893502, 1737133461.2286239, 1737133461.380845, 1737133461.5230181, 1737133461.6626816, 1737133461.832385, 1737133461.9687037, 1737133462.097086, 1737133462.2253125, 1737133462.368666, 1737133462.5173442, 1737133462.6524746, 1737133462.8110535, 1737133462.9543009, 1737133463.1164286, 1737133463.2570298, 1737133463.3833308, 1737133463.5200162, 1737133463.6526248, 1737133463.7983656, 1737133463.9424963, 1737133464.0871236, 1737133464.230486, 1737133464.379286, 1737133464.5588708, 1737133464.6945915, 1737133464.8318536, 1737133464.9644792, 1737133465.108258, 1737133465.25958, 1737133465.4055812, 1737133465.561051, 1737133465.695122, 1737133465.8370204, 1737133466.0058765, 1737133466.1339324, 1737133466.264541, 1737133466.4051292, 1737133466.5693736, 1737133466.7124074, 1737133466.8835325, 1737133467.0451212, 1737133467.1758254, 1737133467.304811, 1737133467.4663348, 1737133467.60921, 1737133467.7781076, 1737133467.9123402, 1737133468.0673335, 1737133468.2505631, 1737133468.4159074, 1737133468.5557156, 1737133468.6980698, 1737133468.828546, 1737133468.9774382, 1737133469.1161115, 1737133469.289954, 1737133469.4212549, 1737133469.553801, 1737133469.7052298, 1737133469.8924649, 1737133470.0425925, 1737133470.1885433, 1737133470.34069, 1737133470.4768748, 1737133470.610411, 1737133470.7938173, 1737133470.931373, 1737133471.0609295, 1737133471.19792, 1737133471.3358948, 1737133471.530167, 1737133471.6721194, 1737133471.817611, 1737133471.9542315, 1737133472.0886352, 1737133472.222765, 1737133472.4219198, 1737133472.554505, 1737133472.6936333, 1737133472.8262212, 1737133472.965113, 1737133473.109361, 1737133473.3108861, 1737133473.4482222, 1737133473.5952737, 1737133473.7252207, 1737133473.8813183, 1737133474.014855, 1737133474.1466963, 1737133474.2825344, 1737133474.4165778, 1737133474.5487895, 1737133474.6883965, 1737133474.8251834, 1737133474.9635766, 1737133475.094771, 1737133475.223907, 1737133475.3652675, 1737133475.5150478, 1737133475.6442184, 1737133475.7804687, 1737133475.9176102, 1737133476.0520017, 1737133476.18946, 1737133476.3247645, 1737133476.458193, 1737133476.5994246, 1737133476.7367241, 1737133476.8741448, 1737133477.0072556, 1737133477.146459, 1737133477.277793, 1737133477.420289, 1737133477.5513666, 1737133477.6907568, 1737133477.8233392, 1737133477.9523923, 1737133478.0956724, 1737133478.238094, 1737133478.370954, 1737133478.4990559, 1737133478.6389008, 1737133478.7782443, 1737133478.9176047, 1737133479.0499046, 1737133479.1831002, 1737133479.322495, 1737133479.4546924, 1737133479.6046333, 1737133479.7462351, 1737133479.8805366, 1737133480.0135007, 1737133480.141061, 1737133480.2799466, 1737133480.4192991, 1737133480.5590951, 1737133480.7021263, 1737133480.8349535, 1737133480.9733033, 1737133481.1125548, 1737133481.2466223, 1737133481.3846712, 1737133481.5207055, 1737133481.6530352, 1737133481.783488, 1737133481.9134793, 1737133482.0519128, 1737133482.1873398, 1737133482.3327222, 1737133482.4733522, 1737133482.6159475, 1737133482.76127, 1737133482.898383, 1737133483.039579, 1737133483.1819322, 1737133483.3258083, 1737133483.4640992, 1737133483.60329, 1737133483.7373195, 1737133483.8676088, 1737133484.0053532, 1737133484.1487944, 1737133484.2825544, 1737133484.4257946, 1737133484.5663693, 1737133484.7062044, 1737133484.847083, 1737133484.985686, 1737133485.1264951, 1737133485.2759469, 1737133485.4198864, 1737133485.5574656, 1737133485.6967893, 1737133485.8410778, 1737133485.9755914, 1737133486.1112833, 1737133486.244574, 1737133486.377977, 1737133486.5507193, 1737133486.70187, 1737133486.8419785, 1737133486.9820116, 1737133487.1285388, 1737133487.2740638, 1737133487.4149334, 1737133487.5551584, 1737133487.6920717, 1737133487.8353622, 1737133487.9735467, 1737133488.1093004, 1737133488.248471, 1737133488.3967829, 1737133488.5322824, 1737133488.6741548, 1737133488.8127773, 1737133488.9611394, 1737133489.108703, 1737133489.2467365, 1737133489.3881896, 1737133489.5278707, 1737133489.6703858, 1737133489.808338, 1737133489.9495478, 1737133490.090531, 1737133490.2293816, 1737133490.371737, 1737133490.5114982, 1737133490.6505346, 1737133490.7898922, 1737133490.9285016, 1737133491.0684795, 1737133491.208277, 1737133491.3502226, 1737133491.494085, 1737133491.6355138, 1737133491.7774587, 1737133491.9192014, 1737133492.064855, 1737133492.2138119, 1737133492.3543162, 1737133492.4963508, 1737133492.6382964, 1737133492.7824013, 1737133492.9277778, 1737133493.0715268, 1737133493.2318416, 1737133493.3804495, 1737133493.526429], "score": 0, "output_len": 252, "output": "import math\n\n\ndef find_zero(xs: list):\n    if len(xs) % 2 != 0 or xs[-1] == 0:\n        raise ValueError(\"List must have an even number of coefficients and the last coefficient must be non-zero.\")\n    \n    n = len(xs) // 2\n    a = xs[0]\n    b = xs[1]\n    c = xs[2]\n    \n    delta = b**2 - 4*a*c\n    if delta < 0:\n        return None\n    elif delta == 0:\n        return -b / (2*a)\n    else:\n        x1 = (-b + math.sqrt(delta)) / (2*a)\n        x2 = (-b - math.sqrt(delta)) / (2*a)\n        return max(x1, x2)\n\n\n# Example usage:\n# print(round(find_zero([1, 2]), 2))\n# print(round(find_zero([-6, 11, -6, 1]), 2))\n", "input_len": 318}
{"id": "HumanEval/33", "model_memory": 48500.0, "time_taken": 17.313847541809082, "input_kv_memory": 49844.0, "memory_usagetime_metric": [1737133494.148205, 1737133494.2925146, 1737133494.4196823, 1737133494.540482, 1737133494.6707873, 1737133494.7917275, 1737133494.919287, 1737133495.0450132, 1737133495.1652498, 1737133495.2891498, 1737133495.4287853, 1737133495.5615618, 1737133495.6864374, 1737133495.8207743, 1737133495.9519565, 1737133496.0804021, 1737133496.2104099, 1737133496.3329964, 1737133496.4625108, 1737133496.580228, 1737133496.7066553, 1737133496.835335, 1737133496.9588492, 1737133497.0915504, 1737133497.226888, 1737133497.358803, 1737133497.4837902, 1737133497.6115928, 1737133497.751356, 1737133497.8935847, 1737133498.0442598, 1737133498.187132, 1737133498.3158934, 1737133498.439931, 1737133498.5733511, 1737133498.7037883, 1737133498.8317425, 1737133498.9615703, 1737133499.0839782, 1737133499.2222133, 1737133499.3635082, 1737133499.497347, 1737133499.6269066, 1737133499.7490127, 1737133499.8820038, 1737133500.0112834, 1737133500.1422257, 1737133500.263672, 1737133500.3964891, 1737133500.5234156, 1737133500.652592, 1737133500.7798743, 1737133500.9136229, 1737133501.0402353, 1737133501.1682682, 1737133501.2967808, 1737133501.4287703, 1737133501.5646973, 1737133501.6946867, 1737133501.8265777, 1737133501.963716, 1737133502.0916364, 1737133502.2192032, 1737133502.347148, 1737133502.476172, 1737133502.6103406, 1737133502.7399623, 1737133502.8699508, 1737133503.0009725, 1737133503.133799, 1737133503.2687829, 1737133503.3989866, 1737133503.5274768, 1737133503.6606343, 1737133503.7951355, 1737133503.927718, 1737133504.0659957, 1737133504.202122, 1737133504.3442307, 1737133504.4822512, 1737133504.6242502, 1737133504.7613668, 1737133504.8900032, 1737133505.0203483, 1737133505.165413, 1737133505.3065019, 1737133505.441244, 1737133505.6032724, 1737133505.7433088, 1737133505.8864968, 1737133506.0187104, 1737133506.1471846, 1737133506.2823145, 1737133506.4175682, 1737133506.550085, 1737133506.6812134, 1737133506.8181682, 1737133506.9474645, 1737133507.0866632, 1737133507.224414, 1737133507.359423, 1737133507.4931722, 1737133507.6266215, 1737133507.7606897, 1737133507.8975127, 1737133508.0382562, 1737133508.1743777, 1737133508.3110342, 1737133508.4435072, 1737133508.5723715, 1737133508.7179594, 1737133508.8540003, 1737133508.9856281, 1737133509.12609, 1737133509.2675471, 1737133509.4061606, 1737133509.53846, 1737133509.6761842, 1737133509.8093834, 1737133509.942805, 1737133510.0764346, 1737133510.2145238, 1737133510.3502297, 1737133510.4779825, 1737133510.6101174, 1737133510.7487879, 1737133510.879387, 1737133511.0147252], "score": 0, "output_len": 127, "output": "def sort_third(l: list):\n    return [x if i % 3 != 0 else sorted(l[i])[0] for i, x in enumerate(l)]\n\n# Test cases\nprint(sort_third([1, 2, 3]))  # Output: [1, 2, 3]\nprint(sort_third([5, 6, 3, 4, 8, 9, 2]))  # Output: [2, 6, 3, 4, 8, 9, 5]", "input_len": 186}
{"id": "HumanEval/34", "model_memory": 48500.0, "time_taken": 7.664299488067627, "input_kv_memory": 49194.0, "memory_usagetime_metric": [1737133511.4440165, 1737133511.566669, 1737133511.7029166, 1737133511.8319662, 1737133511.9596221, 1737133512.0906358, 1737133512.2117267, 1737133512.3340201, 1737133512.4629307, 1737133512.586552, 1737133512.7151167, 1737133512.8520596, 1737133512.9809284, 1737133513.1136463, 1737133513.2392051, 1737133513.374183, 1737133513.5056007, 1737133513.6307325, 1737133513.761478, 1737133513.88709, 1737133514.0152638, 1737133514.1493537, 1737133514.2754676, 1737133514.3997371, 1737133514.5311275, 1737133514.659987, 1737133514.7899542, 1737133514.910861, 1737133515.0443995, 1737133515.180089, 1737133515.3040984, 1737133515.427206, 1737133515.562525, 1737133515.6862326, 1737133515.8096776, 1737133515.9371846, 1737133516.0715952, 1737133516.2016473, 1737133516.3284605, 1737133516.4532976, 1737133516.5967307, 1737133516.738797, 1737133516.8701763, 1737133516.996673, 1737133517.1322775, 1737133517.2568166, 1737133517.3909442, 1737133517.5217977, 1737133517.6508079, 1737133517.783357, 1737133517.9253025, 1737133518.0569267, 1737133518.1864493, 1737133518.3121696, 1737133518.4369805, 1737133518.567757, 1737133518.7000587, 1737133518.8394043], "score": 0, "output_len": 45, "output": "def unique(l: list):\n    return sorted(set(l))\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()\n", "input_len": 105}
{"id": "HumanEval/35", "model_memory": 48500.0, "time_taken": 8.498497009277344, "input_kv_memory": 49356.0, "memory_usagetime_metric": [1737133519.295529, 1737133519.4227293, 1737133519.5518472, 1737133519.6762817, 1737133519.8087683, 1737133519.9355662, 1737133520.0595007, 1737133520.1793835, 1737133520.3094184, 1737133520.4316072, 1737133520.5609343, 1737133520.6841774, 1737133520.8020532, 1737133520.9324286, 1737133521.0626893, 1737133521.1921148, 1737133521.318531, 1737133521.4409552, 1737133521.565449, 1737133521.6901171, 1737133521.8232076, 1737133521.960189, 1737133522.0878887, 1737133522.2299395, 1737133522.363542, 1737133522.5018837, 1737133522.6476762, 1737133522.7878065, 1737133522.9362302, 1737133523.0852377, 1737133523.2215695, 1737133523.3631544, 1737133523.5044837, 1737133523.6444635, 1737133523.785144, 1737133523.9277146, 1737133524.0612338, 1737133524.2076, 1737133524.3493338, 1737133524.4873939, 1737133524.6364398, 1737133524.77802, 1737133524.9135969, 1737133525.047262, 1737133525.1962924, 1737133525.3524778, 1737133525.49187, 1737133525.623934, 1737133525.7608168, 1737133525.9118996, 1737133526.0535383, 1737133526.2032835, 1737133526.349937, 1737133526.4969673, 1737133526.6373258, 1737133526.7769833, 1737133526.918862, 1737133527.061397, 1737133527.200396, 1737133527.344273, 1737133527.4981408], "score": 0, "output_len": 44, "output": "def max_element(l: list):\n    return max(l)\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()", "input_len": 117}
{"id": "HumanEval/36", "model_memory": 48500.0, "time_taken": 18.534111976623535, "input_kv_memory": 49356.0, "memory_usagetime_metric": [1737133528.0887134, 1737133528.2711685, 1737133528.4043887, 1737133528.5454113, 1737133528.6859188, 1737133528.824489, 1737133528.9579656, 1737133529.090108, 1737133529.2270412, 1737133529.3690658, 1737133529.5033808, 1737133529.639696, 1737133529.7797008, 1737133529.916094, 1737133530.0647213, 1737133530.280323, 1737133530.4392211, 1737133530.5747454, 1737133530.710345, 1737133530.8521948, 1737133530.9945662, 1737133531.1342928, 1737133531.2763538, 1737133531.4154093, 1737133531.5531561, 1737133531.6870954, 1737133531.8183618, 1737133531.9552157, 1737133532.10092, 1737133532.2431862, 1737133532.3851974, 1737133532.5313456, 1737133532.6767654, 1737133532.8156168, 1737133532.9501603, 1737133533.0995362, 1737133533.269609, 1737133533.449436, 1737133533.598093, 1737133533.7319632, 1737133533.8663328, 1737133534.0031557, 1737133534.1528049, 1737133534.287404, 1737133534.428691, 1737133534.571404, 1737133534.7186956, 1737133534.859465, 1737133535.002235, 1737133535.1438549, 1737133535.2809043, 1737133535.4305568, 1737133535.5693674, 1737133535.7173917, 1737133535.8916519, 1737133536.037827, 1737133536.1914709, 1737133536.3344018, 1737133536.4904573, 1737133536.632997, 1737133536.7725265, 1737133536.9236681, 1737133537.0783439, 1737133537.226622, 1737133537.38353, 1737133537.5555568, 1737133537.6925154, 1737133537.8393958, 1737133537.9822292, 1737133538.1238995, 1737133538.2760851, 1737133538.417504, 1737133538.5641956, 1737133538.7029963, 1737133538.8472884, 1737133538.988367, 1737133539.1449668, 1737133539.2908833, 1737133539.4396384, 1737133539.5797045, 1737133539.722641, 1737133539.8662755, 1737133540.0074785, 1737133540.1578705, 1737133540.3100445, 1737133540.4495714, 1737133540.6114216, 1737133540.7540815, 1737133540.892649, 1737133541.034155, 1737133541.1785557, 1737133541.326671, 1737133541.4685802, 1737133541.6118512, 1737133541.763877, 1737133541.9310422, 1737133542.0821671, 1737133542.2765338, 1737133542.4254382, 1737133542.5711095, 1737133542.7092135, 1737133542.8575137, 1737133543.0000033, 1737133543.1442256, 1737133543.2834432, 1737133543.4231145, 1737133543.5664215, 1737133543.7173417, 1737133543.8661563, 1737133544.0180626, 1737133544.2157857, 1737133544.406476, 1737133544.5542161, 1737133544.7047672, 1737133544.8544188, 1737133544.997664, 1737133545.187514, 1737133545.3375146, 1737133545.4807508, 1737133545.6715446, 1737133545.8193922, 1737133545.973214, 1737133546.1933017], "score": 0, "output_len": 69, "output": "```python\ndef fizz_buzz(n: int):\n    count = 0\n    for i in range(n):\n        if i % 11 == 0 or i % 13 == 0:\n            count += str(i).count('7')\n    return count\n```", "input_len": 120}
{"id": "HumanEval/37", "model_memory": 49260.0, "time_taken": 25.93132185935974, "input_kv_memory": 49620.0, "memory_usagetime_metric": [1737133546.713634, 1737133546.8527906, 1737133546.988139, 1737133547.1263278, 1737133547.263934, 1737133547.3977325, 1737133547.5419483, 1737133547.6821532, 1737133547.8273518, 1737133547.972606, 1737133548.1196938, 1737133548.256185, 1737133548.3980393, 1737133548.554078, 1737133548.7036402, 1737133548.8461368, 1737133548.987165, 1737133549.1220803, 1737133549.2489483, 1737133549.4013457, 1737133549.5969548, 1737133549.7874992, 1737133549.9530513, 1737133550.1309168, 1737133550.3228488, 1737133550.4694498, 1737133550.6222084, 1737133550.7627845, 1737133550.8972657, 1737133551.0267303, 1737133551.165047, 1737133551.3204405, 1737133551.45905, 1737133551.5918076, 1737133551.7295556, 1737133551.8628736, 1737133551.9992676, 1737133552.1459384, 1737133552.2872872, 1737133552.4489362, 1737133552.5870404, 1737133552.7325737, 1737133552.864977, 1737133553.002374, 1737133553.1408446, 1737133553.2778556, 1737133553.4143112, 1737133553.5559733, 1737133553.7090788, 1737133553.8541012, 1737133553.998053, 1737133554.1371791, 1737133554.2913668, 1737133554.433327, 1737133554.572698, 1737133554.715341, 1737133554.8532891, 1737133554.9944224, 1737133555.1437676, 1737133555.2874317, 1737133555.4283032, 1737133555.5704262, 1737133555.7122133, 1737133555.8600342, 1737133556.0042076, 1737133556.1441374, 1737133556.3013952, 1737133556.444196, 1737133556.587904, 1737133556.746604, 1737133556.8902907, 1737133557.031956, 1737133557.172809, 1737133557.3128643, 1737133557.4542203, 1737133557.5955133, 1737133557.7472563, 1737133557.8887243, 1737133558.040182, 1737133558.1975918, 1737133558.349823, 1737133558.4843497, 1737133558.61536, 1737133558.7555766, 1737133558.887048, 1737133559.0153706, 1737133559.1455965, 1737133559.276551, 1737133559.4022465, 1737133559.5294106, 1737133559.6653626, 1737133559.7986462, 1737133559.9330173, 1737133560.0630796, 1737133560.1941118, 1737133560.325949, 1737133560.4541678, 1737133560.5924938, 1737133560.726315, 1737133560.868359, 1737133561.0070684, 1737133561.1428874, 1737133561.2843006, 1737133561.4143105, 1737133561.5476434, 1737133561.6833673, 1737133561.8242047, 1737133561.9596252, 1737133562.0981252, 1737133562.231447, 1737133562.362096, 1737133562.4884825, 1737133562.6202, 1737133562.7598555, 1737133562.895402, 1737133563.038749, 1737133563.1732454, 1737133563.3067317, 1737133563.4447293, 1737133563.5820606, 1737133563.7144868, 1737133563.8468893, 1737133563.9766586, 1737133564.1105494, 1737133564.2437634, 1737133564.3693328, 1737133564.5062923, 1737133564.6388824, 1737133564.7723536, 1737133564.9097645, 1737133565.0462182, 1737133565.1868503, 1737133565.326305, 1737133565.4721782, 1737133565.6098785, 1737133565.7508652, 1737133565.8861554, 1737133566.0227685, 1737133566.1569214, 1737133566.2947414, 1737133566.4246917, 1737133566.6371312, 1737133566.8817444, 1737133567.0178611, 1737133567.1523745, 1737133567.2976263, 1737133567.4292157, 1737133567.563183, 1737133567.7025218, 1737133567.8432024, 1737133567.9853218, 1737133568.1199734, 1737133568.2571635, 1737133568.4094594, 1737133568.6209974, 1737133568.8736012, 1737133569.0135427, 1737133569.1695774, 1737133569.3094354, 1737133569.4469411, 1737133569.589574, 1737133569.7300205, 1737133569.8678038, 1737133570.0026128, 1737133570.1416392, 1737133570.2751718, 1737133570.4047415, 1737133570.5440373, 1737133570.6784437, 1737133570.8092613, 1737133570.953182, 1737133571.1039438, 1737133571.2438896, 1737133571.3865108, 1737133571.5250473, 1737133571.6629267, 1737133571.7981687, 1737133571.9353464, 1737133572.280656], "score": 0, "output_len": 179, "output": "def sort_even(l: list):\n    even_indices = [i for i in range(len(l)) if i % 2 == 0]\n    even_values = [l[i] for i in even_indices]\n    even_values.sort()\n    \n    l_sorted = l[:]\n    for i, val in zip(even_indices, even_values):\n        l_sorted[i] = val\n    \n    return l_sorted\n\n# Test cases\nprint(sort_even([1, 2, 3]))  # Output: [1, 2, 3]\nprint(sort_even([5, 6, 3, 4]))  # Output: [3, 6, 5, 4]\n", "input_len": 157}
{"id": "HumanEval/38", "model_memory": 49648.0, "time_taken": 18.469239711761475, "input_kv_memory": 50170.0, "memory_usagetime_metric": [1737133572.8356717, 1737133572.9676495, 1737133573.1083796, 1737133573.2476828, 1737133573.376672, 1737133573.5095809, 1737133573.6419144, 1737133573.7640376, 1737133573.8959048, 1737133574.0340447, 1737133574.1724205, 1737133574.3007274, 1737133574.4362636, 1737133574.569442, 1737133574.702138, 1737133574.8322835, 1737133574.9632218, 1737133575.1005347, 1737133575.2419972, 1737133575.3724647, 1737133575.511722, 1737133575.6358643, 1737133575.7591047, 1737133575.889509, 1737133576.0221248, 1737133576.1479552, 1737133576.2724442, 1737133576.3949804, 1737133576.538742, 1737133576.6871767, 1737133576.8254392, 1737133576.9657938, 1737133577.1048198, 1737133577.2491906, 1737133577.3796587, 1737133577.5207534, 1737133577.6458812, 1737133577.7744348, 1737133577.9040692, 1737133578.0284028, 1737133578.155304, 1737133578.2804847, 1737133578.4064004, 1737133578.5634973, 1737133578.7125669, 1737133578.8739052, 1737133579.0106027, 1737133579.1561275, 1737133579.3011696, 1737133579.4297705, 1737133579.5530071, 1737133579.69315, 1737133579.8712003, 1737133580.005564, 1737133580.1396654, 1737133580.3054998, 1737133580.451135, 1737133580.5832577, 1737133580.7706025, 1737133580.9062176, 1737133581.048185, 1737133581.177402, 1737133581.3239107, 1737133581.4652119, 1737133581.60516, 1737133581.7782984, 1737133581.9072204, 1737133582.0440717, 1737133582.1932163, 1737133582.3598156, 1737133582.4920855, 1737133582.636084, 1737133582.7737606, 1737133582.9459012, 1737133583.0817704, 1737133583.217203, 1737133583.3565488, 1737133583.5572336, 1737133583.6902819, 1737133583.8623593, 1737133584.001619, 1737133584.1344712, 1737133584.2719862, 1737133584.427576, 1737133584.564571, 1737133584.7060342, 1737133584.8865385, 1737133585.0272095, 1737133585.1646135, 1737133585.3282206, 1737133585.4717052, 1737133585.6035597, 1737133585.765367, 1737133585.8930533, 1737133586.0347917, 1737133586.2212644, 1737133586.3489, 1737133586.4973154, 1737133586.7026634, 1737133586.8907933, 1737133587.035823, 1737133587.1650655, 1737133587.2968612, 1737133587.4301646, 1737133587.5688646, 1737133587.6959586, 1737133587.8284607, 1737133588.0178754, 1737133588.2219117, 1737133588.3533802, 1737133588.485475, 1737133588.622495, 1737133588.8276587, 1737133589.02681, 1737133589.1597831, 1737133589.2980218, 1737133589.4407268, 1737133589.5996099, 1737133589.7366176, 1737133589.9077747, 1737133590.0446746, 1737133590.1784227, 1737133590.320182, 1737133590.4663665, 1737133590.5984886, 1737133590.9137647], "score": 0, "output_len": 125, "output": "def decode_cyclic(s: str):\n    # split string to groups. Each of length 3.\n    groups = [s[(3 * i):min((3 * i + 3), len(s))] for i in range((len(s) + 2) // 3)]\n    # cycle elements back in each group. Unless group has fewer elements than 3.\n    groups = [(group[-1] + group[:-1]) if len(group) == 3 else group for group in groups]\n    return \"\".join(groups)\n", "input_len": 208}
{"id": "HumanEval/39", "model_memory": 49176.0, "time_taken": 42.64745116233826, "input_kv_memory": 49496.0, "memory_usagetime_metric": [1737133591.3941753, 1737133591.5211284, 1737133591.6469493, 1737133591.7838447, 1737133591.9277334, 1737133592.0530124, 1737133592.2054524, 1737133592.368917, 1737133592.5388527, 1737133592.6639512, 1737133592.7881155, 1737133592.910945, 1737133593.0404465, 1737133593.1608853, 1737133593.296826, 1737133593.438703, 1737133593.6113734, 1737133593.7714589, 1737133593.906426, 1737133594.0430064, 1737133594.1764827, 1737133594.298613, 1737133594.4306219, 1737133594.5614836, 1737133594.7109442, 1737133594.851786, 1737133594.9813926, 1737133595.1057816, 1737133595.2346013, 1737133595.3584855, 1737133595.4859374, 1737133595.6284401, 1737133595.7596807, 1737133595.8893664, 1737133596.0323982, 1737133596.1609561, 1737133596.2912102, 1737133596.4249623, 1737133596.5562296, 1737133596.6839924, 1737133596.814652, 1737133596.9468224, 1737133597.0847585, 1737133597.2088213, 1737133597.3373978, 1737133597.4731674, 1737133597.6067677, 1737133597.7468646, 1737133597.8743496, 1737133598.010313, 1737133598.135574, 1737133598.2673461, 1737133598.3989182, 1737133598.5289176, 1737133598.6612113, 1737133598.792673, 1737133598.9336839, 1737133599.066165, 1737133599.1970901, 1737133599.3272834, 1737133599.4570644, 1737133599.5803804, 1737133599.7190146, 1737133599.8541858, 1737133599.982999, 1737133600.1137476, 1737133600.2431753, 1737133600.375308, 1737133600.506346, 1737133600.6374743, 1737133600.7653568, 1737133600.8998604, 1737133601.0307071, 1737133601.165343, 1737133601.2955904, 1737133601.4316027, 1737133601.6079495, 1737133601.759931, 1737133601.8925753, 1737133602.03585, 1737133602.168083, 1737133602.2995934, 1737133602.4294634, 1737133602.5602133, 1737133602.690645, 1737133602.8180814, 1737133602.9492893, 1737133603.0809584, 1737133603.2121189, 1737133603.3360882, 1737133603.4816802, 1737133603.6093469, 1737133603.749571, 1737133603.882001, 1737133604.0071301, 1737133604.1373262, 1737133604.2811513, 1737133604.4203858, 1737133604.552059, 1737133604.6834009, 1737133604.8170516, 1737133604.9485767, 1737133605.0890975, 1737133605.223891, 1737133605.357027, 1737133605.4958766, 1737133605.6365416, 1737133605.773913, 1737133605.919462, 1737133606.051747, 1737133606.1828074, 1737133606.3193645, 1737133606.4535072, 1737133606.6136668, 1737133606.7456524, 1737133606.8871243, 1737133607.0217898, 1737133607.16635, 1737133607.3004532, 1737133607.4324048, 1737133607.5634582, 1737133607.6937456, 1737133607.8386009, 1737133607.978023, 1737133608.1170506, 1737133608.2592335, 1737133608.387173, 1737133608.5275767, 1737133608.6703212, 1737133608.804964, 1737133608.9422886, 1737133609.074247, 1737133609.209745, 1737133609.350481, 1737133609.484959, 1737133609.6195714, 1737133609.7512536, 1737133609.8891506, 1737133610.03725, 1737133610.168628, 1737133610.3249466, 1737133610.4663246, 1737133610.616058, 1737133610.7569406, 1737133610.9029648, 1737133611.03878, 1737133611.1679823, 1737133611.3003492, 1737133611.4465413, 1737133611.5829763, 1737133611.724433, 1737133611.8575957, 1737133611.9947412, 1737133612.1417162, 1737133612.2798011, 1737133612.4193177, 1737133612.5592935, 1737133612.7039578, 1737133612.8474033, 1737133612.9826667, 1737133613.1238818, 1737133613.267391, 1737133613.4065263, 1737133613.5495927, 1737133613.6916378, 1737133613.828618, 1737133613.969499, 1737133614.1052413, 1737133614.2413788, 1737133614.3726606, 1737133614.5128758, 1737133614.6537147, 1737133614.796041, 1737133614.9264145, 1737133615.0593436, 1737133615.2008572, 1737133615.3305478, 1737133615.48596, 1737133615.6750927, 1737133615.9020884, 1737133616.0447235, 1737133616.1905062, 1737133616.335308, 1737133616.4675558, 1737133616.6700752, 1737133616.8205278, 1737133616.9699578, 1737133617.104148, 1737133617.2344859, 1737133617.3743434, 1737133617.6015823, 1737133617.744173, 1737133617.8844585, 1737133618.1225271, 1737133618.3132813, 1737133618.442814, 1737133618.5817738, 1737133618.716394, 1737133618.9367955, 1737133619.1873293, 1737133619.3323367, 1737133619.4751027, 1737133619.6208143, 1737133619.7539098, 1737133619.8983173, 1737133620.0352607, 1737133620.2564063, 1737133620.4014897, 1737133620.5379567, 1737133620.6919749, 1737133620.839154, 1737133620.9770489, 1737133621.1240516, 1737133621.3561354, 1737133621.49833, 1737133621.6373785, 1737133621.8821278, 1737133622.0315716, 1737133622.1740592, 1737133622.3157194, 1737133622.565009, 1737133622.7053638, 1737133622.8465428, 1737133623.1127155, 1737133623.3509738, 1737133623.6139822, 1737133623.7540083, 1737133623.8947113, 1737133624.036011, 1737133624.1661665, 1737133624.2991743, 1737133624.5479279, 1737133624.6972601, 1737133624.8383808, 1737133624.9755912, 1737133625.1213381, 1737133625.365389, 1737133625.5509086, 1737133625.6983669, 1737133625.839218, 1737133625.9791842, 1737133626.1231153, 1737133626.2677295, 1737133626.5156927, 1737133626.782576, 1737133626.9250607, 1737133627.0684376, 1737133627.2164364, 1737133627.35962, 1737133627.501749, 1737133627.740955, 1737133627.8942363, 1737133628.0359027, 1737133628.1792119, 1737133628.4269612, 1737133628.6995804, 1737133628.8324625, 1737133628.977401, 1737133629.194113, 1737133629.342913, 1737133629.4842854, 1737133629.7606964, 1737133630.0335577, 1737133630.1782029, 1737133630.318242, 1737133630.4763017, 1737133630.6203628, 1737133630.8461988, 1737133630.9857628, 1737133631.2240214, 1737133631.3630352, 1737133631.5111465, 1737133631.6553438, 1737133631.794787, 1737133631.9335723, 1737133632.078504, 1737133632.2144887, 1737133632.3547518, 1737133632.496591, 1737133632.6662073, 1737133632.8161032, 1737133632.9563882, 1737133633.1037445, 1737133633.25228, 1737133633.3940532, 1737133633.558635, 1737133633.7188494], "score": 0, "output_len": 286, "output": "```python\ndef is_prime(num):\n    if num <= 1:\n        return False\n    for i in range(2, int(num**0.5) + 1):\n        if num % i == 0:\n            return False\n    return True\n\ndef fib(n):\n    a, b = 0, 1\n    for _ in range(n):\n        a, b = b, a + b\n    return a\n\ndef prime_fib(n: int):\n    count = 0\n    num = 0\n    while True:\n        fib_num = fib(count)\n        if is_prime(fib_num):\n            num = fib_num\n            count += 1\n        if count == n:\n            break\n    return num\n```\n\nThis code defines three functions: `is_prime`, `fib`, and `prime_fib`. The `is_prime` function checks if a number is prime. The `fib` function generates the n-th Fibonacci number. The `prime_fib` function finds the n-th Fibonacci number that is also prime by iterating through Fibonacci numbers and checking if they are prime until it finds the n-th such number.", "input_len": 139}
{"id": "HumanEval/40", "model_memory": 49656.0, "time_taken": 18.307144165039062, "input_kv_memory": 50424.0, "memory_usagetime_metric": [1737133634.2936924, 1737133634.457435, 1737133634.6227746, 1737133634.8015385, 1737133634.9558084, 1737133635.1084669, 1737133635.2400942, 1737133635.3592281, 1737133635.4859881, 1737133635.622135, 1737133635.7589905, 1737133635.8847537, 1737133636.020882, 1737133636.1464343, 1737133636.298692, 1737133636.428798, 1737133636.577684, 1737133636.7203321, 1737133636.8494284, 1737133636.980187, 1737133637.115983, 1737133637.2484007, 1737133637.376909, 1737133637.5020072, 1737133637.6275425, 1737133637.7578745, 1737133637.889994, 1737133638.024141, 1737133638.1495633, 1737133638.2745452, 1737133638.3998737, 1737133638.5264077, 1737133638.6570861, 1737133638.7907157, 1737133638.9259725, 1737133639.0685565, 1737133639.2062008, 1737133639.3374405, 1737133639.468943, 1737133639.6114054, 1737133639.743167, 1737133639.8745065, 1737133640.0058935, 1737133640.136658, 1737133640.268956, 1737133640.3997164, 1737133640.519961, 1737133640.6526625, 1737133640.8032553, 1737133640.9368489, 1737133641.0637617, 1737133641.1914005, 1737133641.3214107, 1737133641.4577627, 1737133641.5909507, 1737133641.7214952, 1737133641.8545434, 1737133641.9824886, 1737133642.1222167, 1737133642.2547598, 1737133642.3838575, 1737133642.5120142, 1737133642.6796227, 1737133642.8454664, 1737133642.981813, 1737133643.1179056, 1737133643.2948682, 1737133643.4379525, 1737133643.5752459, 1737133643.7207155, 1737133643.8511038, 1737133643.9759643, 1737133644.1045465, 1737133644.2349024, 1737133644.365271, 1737133644.4984887, 1737133644.6712308, 1737133644.8024669, 1737133644.9331408, 1737133645.0695083, 1737133645.2056699, 1737133645.3571665, 1737133645.4939697, 1737133645.6259837, 1737133645.7564423, 1737133645.8980412, 1737133646.0277374, 1737133646.1554775, 1737133646.284845, 1737133646.4179137, 1737133646.5480967, 1737133646.6844049, 1737133646.8256078, 1737133646.9562998, 1737133647.0914893, 1737133647.2312636, 1737133647.3688498, 1737133647.5103147, 1737133647.6425557, 1737133647.7743022, 1737133647.9146957, 1737133648.0751843, 1737133648.215862, 1737133648.3455517, 1737133648.476887, 1737133648.6094954, 1737133648.7416935, 1737133648.876801, 1737133649.0134847, 1737133649.1451364, 1737133649.274037, 1737133649.4199936, 1737133649.5526288, 1737133649.68353, 1737133649.8160608, 1737133649.9475133, 1737133650.0770342, 1737133650.2116659, 1737133650.3510897, 1737133650.4917965, 1737133650.6327693, 1737133650.7639046, 1737133650.905361, 1737133651.0445302, 1737133651.1788785, 1737133651.3070953, 1737133651.4413614, 1737133651.5765212, 1737133651.7099938, 1737133651.8461578, 1737133651.9820719, 1737133652.2037115], "score": 0, "output_len": 130, "output": "```python\ndef triples_sum_to_zero(l: list):\n    l.sort()\n    for i in range(len(l) - 2):\n        left, right = i + 1, len(l) - 1\n        while left < right:\n            current_sum = l[i] + l[left] + l[right]\n            if current_sum == 0:\n                return True\n            elif current_sum < 0:\n                left += 1\n            else:\n                right -= 1\n    return False\n```", "input_len": 222}
{"id": "HumanEval/41", "model_memory": 49516.0, "time_taken": 5.96466064453125, "input_kv_memory": 49976.0, "memory_usage": [49976.0, 50024.0, 50024.0, 50024.0, 50024.0, 50024.0, 50024.0, 50024.0, 50024.0, 50024.0, 50024.0, 50024.0, 50024.0, 50024.0, 50024.0, 50024.0, 50024.0, 50024.0, 50024.0, 50024.0, 50024.0, 50024.0, 50024.0, 50024.0, 50024.0, 50024.0, 50024.0, 50024.0, 50024.0, 50024.0, 50024.0, 50024.0, 50024.0, 50024.0, 50024.0, 50024.0, 50024.0, 50024.0, 50024.0, 50024.0, 49516.0, 49008.0, 49148.0, 49588.0], "time_metric": [1737133652.7611508, 1737133652.8896554, 1737133653.0260203, 1737133653.1543105, 1737133653.2915664, 1737133653.4279432, 1737133653.5536873, 1737133653.68872, 1737133653.8190062, 1737133653.9501793, 1737133654.0815232, 1737133654.201071, 1737133654.3300443, 1737133654.4529676, 1737133654.573848, 1737133654.714206, 1737133654.8459206, 1737133654.975162, 1737133655.098811, 1737133655.2353714, 1737133655.3613942, 1737133655.4854808, 1737133655.6113214, 1737133655.740633, 1737133655.877297, 1737133656.0020692, 1737133656.1331887, 1737133656.2573743, 1737133656.3779283, 1737133656.507692, 1737133656.6320825, 1737133656.7646434, 1737133656.9013424, 1737133657.0327582, 1737133657.1605115, 1737133657.2950635, 1737133657.4268537, 1737133657.5466924, 1737133657.6728768, 1737133657.7968874, 1737133657.9279997, 1737133658.067502, 1737133658.1935532, 1737133658.3433352], "score": 0, "output_len": 25, "output": "def car_race_collision(n: int):\n    return n * (n - 1)\n", "input_len": 196}
{"id": "HumanEval/42", "model_memory": 49260.0, "time_taken": 11.401880025863647, "input_kv_memory": 49620.0, "memory_usagetime_metric": [1737133658.8392184, 1737133658.9909708, 1737133659.1258907, 1737133659.2485268, 1737133659.3773644, 1737133659.507035, 1737133659.6332722, 1737133659.7574596, 1737133659.8928027, 1737133660.0248675, 1737133660.160189, 1737133660.291695, 1737133660.4171731, 1737133660.546983, 1737133660.6742127, 1737133660.8051136, 1737133660.9360528, 1737133661.0659063, 1737133661.218224, 1737133661.352047, 1737133661.4873636, 1737133661.6079142, 1737133661.7401342, 1737133661.8700213, 1737133661.9936006, 1737133662.1198688, 1737133662.2424638, 1737133662.373105, 1737133662.5029922, 1737133662.6257782, 1737133662.755095, 1737133662.8794284, 1737133663.009649, 1737133663.138893, 1737133663.2670379, 1737133663.4079049, 1737133663.5412257, 1737133663.6805818, 1737133663.81668, 1737133663.9457495, 1737133664.0763848, 1737133664.203445, 1737133664.3279135, 1737133664.4540234, 1737133664.59298, 1737133664.728219, 1737133664.8527348, 1737133664.9749374, 1737133665.109303, 1737133665.241341, 1737133665.3701212, 1737133665.5037522, 1737133665.638659, 1737133665.7696617, 1737133665.897512, 1737133666.0279348, 1737133666.16224, 1737133666.2917128, 1737133666.4147162, 1737133666.556592, 1737133666.6970139, 1737133666.825893, 1737133666.9631674, 1737133667.0905554, 1737133667.2194018, 1737133667.3531601, 1737133667.4818375, 1737133667.615337, 1737133667.7485747, 1737133667.8808022, 1737133668.0196536, 1737133668.1482458, 1737133668.2952106, 1737133668.4253566, 1737133668.5578446, 1737133668.6911457, 1737133668.8252003, 1737133668.9560096, 1737133669.0829222, 1737133669.212729, 1737133669.3433988, 1737133669.4851444, 1737133669.6224988, 1737133669.8995004], "score": 0, "output_len": 83, "output": "def incr_list(l: list):\n    return [x + 1 for x in l]\n\n# Example usage:\nprint(incr_list([1, 2, 3]))\nprint(incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123]))\n", "input_len": 151}
{"id": "HumanEval/43", "model_memory": 49648.0, "time_taken": 7.025203466415405, "input_kv_memory": 50170.0, "memory_usage": [50170.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 49648.0, 49074.0, 49234.0, 49612.0, 49750.0], "time_metric": [1737133670.4398015, 1737133670.594535, 1737133670.7386615, 1737133670.8935864, 1737133671.054121, 1737133671.1781795, 1737133671.3111842, 1737133671.4539843, 1737133671.580228, 1737133671.7115614, 1737133671.8437252, 1737133671.9636116, 1737133672.0888014, 1737133672.2184598, 1737133672.3372362, 1737133672.4694421, 1737133672.5981874, 1737133672.7253473, 1737133672.8488941, 1737133672.9809709, 1737133673.1042788, 1737133673.2338634, 1737133673.3685613, 1737133673.5028505, 1737133673.6342027, 1737133673.760614, 1737133673.8859994, 1737133674.0092008, 1737133674.1310596, 1737133674.2615337, 1737133674.3937314, 1737133674.522584, 1737133674.6539648, 1737133674.776583, 1737133674.9055903, 1737133675.0295174, 1737133675.1495767, 1737133675.2773135, 1737133675.4009068, 1737133675.553601, 1737133675.6901693, 1737133675.834435, 1737133675.972893, 1737133676.1132874, 1737133676.2636895, 1737133676.4090626, 1737133676.5480337, 1737133676.679938, 1737133676.8047886, 1737133676.9432645, 1737133677.0800085], "score": 0, "output_len": 50, "output": "def pairs_sum_to_zero(l):\n    seen = set()\n    for num in l:\n        if -num in seen:\n            return True\n        seen.add(num)\n    return False\n", "input_len": 212}
{"id": "HumanEval/44", "model_memory": 49176.0, "time_taken": 21.02892756462097, "input_kv_memory": 49496.0, "memory_usagetime_metric": [1737133677.5437536, 1737133677.696866, 1737133677.829089, 1737133677.960134, 1737133678.1119764, 1737133678.2350225, 1737133678.3603764, 1737133678.4808345, 1737133678.604445, 1737133678.7354925, 1737133678.8609893, 1737133678.9862769, 1737133679.1138923, 1737133679.2397885, 1737133679.3694243, 1737133679.4935052, 1737133679.6326647, 1737133679.755913, 1737133679.8865488, 1737133680.0079536, 1737133680.14142, 1737133680.2690477, 1737133680.3927722, 1737133680.5129805, 1737133680.6399772, 1737133680.765894, 1737133680.8949323, 1737133681.0234883, 1737133681.1575036, 1737133681.2899156, 1737133681.4212, 1737133681.5488665, 1737133681.673686, 1737133681.807641, 1737133681.9339364, 1737133682.0562522, 1737133682.182427, 1737133682.314295, 1737133682.4502428, 1737133682.5822375, 1737133682.7117705, 1737133682.8345926, 1737133682.9666235, 1737133683.0949197, 1737133683.2263594, 1737133683.3574378, 1737133683.4870808, 1737133683.6307166, 1737133683.7593298, 1737133683.8932848, 1737133684.0299253, 1737133684.1608624, 1737133684.2918692, 1737133684.4271197, 1737133684.5622704, 1737133684.6882446, 1737133684.8176374, 1737133684.9477944, 1737133685.0897825, 1737133685.2216403, 1737133685.3506887, 1737133685.4770827, 1737133685.6071467, 1737133685.7442532, 1737133685.8895783, 1737133686.0313683, 1737133686.1632917, 1737133686.289949, 1737133686.4229188, 1737133686.5575924, 1737133686.6934774, 1737133686.8236313, 1737133686.959393, 1737133687.0924592, 1737133687.2162814, 1737133687.359151, 1737133687.491396, 1737133687.6239946, 1737133687.7572548, 1737133687.8899372, 1737133688.0281496, 1737133688.1580806, 1737133688.3062856, 1737133688.435335, 1737133688.5618706, 1737133688.6898677, 1737133688.8232296, 1737133688.9516733, 1737133689.0846272, 1737133689.2147067, 1737133689.354223, 1737133689.491438, 1737133689.6211672, 1737133689.7452638, 1737133689.8850696, 1737133690.008334, 1737133690.1362085, 1737133690.2654274, 1737133690.3874872, 1737133690.514162, 1737133690.646147, 1737133690.8110323, 1737133691.0123, 1737133691.1413841, 1737133691.2682447, 1737133691.3960726, 1737133691.5335603, 1737133691.6657548, 1737133691.7898278, 1737133691.927298, 1737133692.0646698, 1737133692.195575, 1737133692.3184505, 1737133692.462979, 1737133692.5855947, 1737133692.720117, 1737133692.9030058, 1737133693.033148, 1737133693.1583376, 1737133693.2962391, 1737133693.4239602, 1737133693.549867, 1737133693.6793454, 1737133693.8065143, 1737133693.9464533, 1737133694.0807805, 1737133694.2068353, 1737133694.3368554, 1737133694.4638891, 1737133694.6021228, 1737133694.744459, 1737133694.876008, 1737133695.0131762, 1737133695.1469476, 1737133695.2702613, 1737133695.4038742, 1737133695.5491917, 1737133695.6755528, 1737133695.8002634, 1737133695.9246454, 1737133696.058688, 1737133696.1929257, 1737133696.3382633, 1737133696.4751832, 1737133696.619472, 1737133696.7600067, 1737133696.896531, 1737133697.0382805, 1737133697.166539, 1737133697.3054168, 1737133697.4402552, 1737133697.5697105, 1737133697.6936696, 1737133697.8548594, 1737133697.9944344, 1737133698.1266575, 1737133698.2558818], "score": 0, "output_len": 155, "output": "def change_base(x: int, base: int):\n    if base < 2 or base > 10:\n        raise ValueError(\"Base must be between 2 and 10\")\n    result = ''\n    while x > 0:\n        result = str(x % base) + result\n        x //= base\n    return result if result else '0'\n\n# Test cases\nprint(change_base(8, 3))  # Output: '22'\nprint(change_base(8, 2))  # Output: '1000'\nprint(change_base(7, 2))  # Output: '111'\n", "input_len": 136}
{"id": "HumanEval/45", "model_memory": 48928.0, "time_taken": 6.420338153839111, "input_kv_memory": 49098.0, "memory_usage": [49098.0, 49136.0, 49140.0, 49142.0, 49142.0, 49142.0, 49142.0, 49142.0, 49142.0, 49142.0, 49142.0, 49142.0, 49142.0, 49142.0, 49142.0, 49142.0, 49142.0, 49142.0, 49142.0, 49142.0, 49142.0, 49142.0, 49142.0, 49142.0, 49142.0, 49142.0, 49142.0, 49142.0, 49142.0, 49142.0, 49142.0, 49142.0, 49142.0, 49142.0, 49142.0, 49142.0, 49182.0, 49182.0, 49182.0, 49182.0, 49202.0, 49202.0, 49202.0, 49202.0, 48972.0, 48740.0, 48738.0, 49620.0, 49884.0], "time_metric": [1737133698.6858273, 1737133698.8088021, 1737133698.9282968, 1737133699.0602136, 1737133699.1861641, 1737133699.3061864, 1737133699.441179, 1737133699.5773423, 1737133699.704913, 1737133699.8290899, 1737133699.95595, 1737133700.081765, 1737133700.2046583, 1737133700.3378716, 1737133700.4560957, 1737133700.5770564, 1737133700.6943252, 1737133700.8145142, 1737133700.934488, 1737133701.0532358, 1737133701.1985173, 1737133701.3264866, 1737133701.4503539, 1737133701.588191, 1737133701.7105951, 1737133701.8369138, 1737133701.9620266, 1737133702.0817344, 1737133702.2011154, 1737133702.334288, 1737133702.4549012, 1737133702.5795088, 1737133702.7118108, 1737133702.8309553, 1737133702.9675658, 1737133703.0921674, 1737133703.2104802, 1737133703.341774, 1737133703.4605343, 1737133703.58271, 1737133703.7027535, 1737133703.8309028, 1737133703.9510064, 1737133704.079474, 1737133704.1959956, 1737133704.3172276, 1737133704.4341025, 1737133704.684845, 1737133704.845835], "score": 0, "output_len": 49, "output": "def triangle_area(a, h):\n    return 0.5 * a * h\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()\n", "input_len": 76}
{"id": "HumanEval/46", "model_memory": 49654.0, "time_taken": 26.859358072280884, "input_kv_memory": 50174.0, "memory_usagetime_metric": [1737133705.4057488, 1737133705.5595489, 1737133705.6891046, 1737133705.8195827, 1737133705.9444873, 1737133706.0638037, 1737133706.2001457, 1737133706.331378, 1737133706.465988, 1737133706.5831907, 1737133706.7106473, 1737133706.8433383, 1737133706.95974, 1737133707.0763025, 1737133707.2046676, 1737133707.3365488, 1737133707.45939, 1737133707.580719, 1737133707.7080688, 1737133707.8269038, 1737133707.9474742, 1737133708.0819848, 1737133708.2137642, 1737133708.3479445, 1737133708.4759035, 1737133708.6005588, 1737133708.7249076, 1737133708.8494582, 1737133708.9776912, 1737133709.1298969, 1737133709.2677221, 1737133709.3924723, 1737133709.5260153, 1737133709.6528358, 1737133709.7710395, 1737133709.8931012, 1737133710.0126362, 1737133710.1320624, 1737133710.249768, 1737133710.370348, 1737133710.4919877, 1737133710.631774, 1737133710.763844, 1737133710.8904164, 1737133711.0104697, 1737133711.1304822, 1737133711.2543468, 1737133711.3834376, 1737133711.5280468, 1737133711.6514053, 1737133711.7764218, 1737133711.9195776, 1737133712.0862284, 1737133712.213344, 1737133712.3341868, 1737133712.4571824, 1737133712.5785398, 1737133712.7185445, 1737133712.8426812, 1737133712.9622347, 1737133713.0924597, 1737133713.2151058, 1737133713.3337965, 1737133713.4536924, 1737133713.60121, 1737133713.7346678, 1737133713.8566053, 1737133713.9786522, 1737133714.10055, 1737133714.2249732, 1737133714.354754, 1737133714.4757838, 1737133714.5971487, 1737133714.7659752, 1737133714.954024, 1737133715.0780597, 1737133715.2076735, 1737133715.338887, 1737133715.462326, 1737133715.5865252, 1737133715.7173688, 1737133715.845454, 1737133715.9696105, 1737133716.0897183, 1737133716.21366, 1737133716.338956, 1737133716.4726136, 1737133716.602572, 1737133716.7290804, 1737133716.8664799, 1737133716.993112, 1737133717.128202, 1737133717.2559602, 1737133717.3794553, 1737133717.514693, 1737133717.662868, 1737133717.7950532, 1737133717.923462, 1737133718.0473177, 1737133718.1706326, 1737133718.3002036, 1737133718.4246361, 1737133718.5466077, 1737133718.67961, 1737133718.8158073, 1737133718.9409153, 1737133719.0783424, 1737133719.2125263, 1737133719.3448992, 1737133719.4696956, 1737133719.6008234, 1737133719.7308207, 1737133719.8570073, 1737133719.9786375, 1737133720.1203206, 1737133720.2607079, 1737133720.4071403, 1737133720.5317812, 1737133720.653142, 1737133720.778526, 1737133720.9031286, 1737133721.029216, 1737133721.1578774, 1737133721.2895856, 1737133721.4153008, 1737133721.5401206, 1737133721.6776743, 1737133721.8134003, 1737133721.9460177, 1737133722.0738416, 1737133722.1977808, 1737133722.3320746, 1737133722.4568706, 1737133722.582699, 1737133722.7252207, 1737133722.857288, 1737133722.9894772, 1737133723.1272442, 1737133723.2738836, 1737133723.4194596, 1737133723.5964394, 1737133723.738699, 1737133723.8967762, 1737133724.0760858, 1737133724.2707858, 1737133724.4179285, 1737133724.5748131, 1737133724.7255032, 1737133724.8767033, 1737133725.031819, 1737133725.2147467, 1737133725.371002, 1737133725.520891, 1737133725.7229984, 1737133725.8717933, 1737133726.0289369, 1737133726.1853218, 1737133726.3902597, 1737133726.5558274, 1737133726.716966, 1737133726.8639956, 1737133727.0143433, 1737133727.172959, 1737133727.3387942, 1737133727.5547912, 1737133727.725809, 1737133727.970113, 1737133728.1323514, 1737133728.2815888, 1737133728.4412143, 1737133728.592093, 1737133728.7479153, 1737133728.914854, 1737133729.0651143, 1737133729.2212884, 1737133729.373276, 1737133729.5492759, 1737133729.6951733, 1737133729.8445468, 1737133730.0761838, 1737133730.230752, 1737133730.3850083, 1737133730.5300002, 1737133730.6827545, 1737133730.8328786, 1737133730.9805984, 1737133731.1647925, 1737133731.3139586, 1737133731.5204906, 1737133731.688679, 1737133731.8521652], "score": 0, "output_len": 189, "output": "def fib4(n: int) -> int:\n    if n == 0 or n == 1:\n        return 0\n    elif n == 2:\n        return 2\n    elif n == 3:\n        return 0\n    \n    fib_values = [0, 0, 2, 0]\n    for i in range(4, n + 1):\n        fib_values.append(fib_values[-1] + fib_values[-2] + fib_values[-3] + fib_values[-4])\n    \n    return fib_values[-1]\n\n# Test cases\nprint(fib4(5))  # Output: 4\nprint(fib4(6))  # Output: 8\nprint(fib4(7))  # Output: 14\n", "input_len": 210}
{"id": "HumanEval/47", "model_memory": 49008.0, "time_taken": 21.632047176361084, "input_kv_memory": 49248.0, "memory_usagetime_metric": [1737133732.3361917, 1737133732.5042799, 1737133732.668653, 1737133732.8377538, 1737133733.0223107, 1737133733.1613848, 1737133733.302361, 1737133733.4420233, 1737133733.5719097, 1737133733.697691, 1737133733.822828, 1737133733.9452455, 1737133734.0804963, 1737133734.210586, 1737133734.3397398, 1737133734.4629066, 1737133734.5910425, 1737133734.721167, 1737133734.8458097, 1737133734.9674976, 1737133735.0956101, 1737133735.2239134, 1737133735.3594558, 1737133735.4883945, 1737133735.6163287, 1737133735.7502716, 1737133735.8735137, 1737133736.0216649, 1737133736.151778, 1737133736.2892785, 1737133736.4129872, 1737133736.5476825, 1737133736.6679096, 1737133736.7919583, 1737133736.9188008, 1737133737.0455322, 1737133737.1736643, 1737133737.306139, 1737133737.4331965, 1737133737.5584626, 1737133737.6952136, 1737133737.8243165, 1737133737.9603052, 1737133738.104631, 1737133738.2302463, 1737133738.359977, 1737133738.4975698, 1737133738.6419055, 1737133738.7795963, 1737133738.9104564, 1737133739.0412083, 1737133739.1717105, 1737133739.3038716, 1737133739.431573, 1737133739.5573826, 1737133739.6866992, 1737133739.816361, 1737133739.9475977, 1737133740.0773377, 1737133740.208062, 1737133740.3452482, 1737133740.4746494, 1737133740.605944, 1737133740.732281, 1737133740.8646011, 1737133740.9991663, 1737133741.1298723, 1737133741.2654548, 1737133741.3905013, 1737133741.5245636, 1737133741.650119, 1737133741.7804472, 1737133741.9183662, 1737133742.045175, 1737133742.1729546, 1737133742.3043783, 1737133742.4353669, 1737133742.568175, 1737133742.6969385, 1737133742.8336039, 1737133742.9708557, 1737133743.1134634, 1737133743.2493622, 1737133743.381395, 1737133743.5134456, 1737133743.6441371, 1737133743.791403, 1737133743.9276412, 1737133744.058082, 1737133744.2002208, 1737133744.3317924, 1737133744.4602325, 1737133744.5975778, 1737133744.7286344, 1737133744.8537238, 1737133744.9848466, 1737133745.1186674, 1737133745.2588701, 1737133745.3956423, 1737133745.52995, 1737133745.6595473, 1737133745.8038027, 1737133745.9409204, 1737133746.0718195, 1737133746.207733, 1737133746.344047, 1737133746.4772751, 1737133746.6214988, 1737133746.7591941, 1737133746.920031, 1737133747.052032, 1737133747.2072217, 1737133747.345152, 1737133747.4729674, 1737133747.6125925, 1737133747.7506235, 1737133747.8891628, 1737133748.0228605, 1737133748.1584153, 1737133748.3023896, 1737133748.4305618, 1737133748.5647566, 1737133748.7048173, 1737133748.8458738, 1737133748.9841824, 1737133749.1259615, 1737133749.2654288, 1737133749.3975604, 1737133749.5463908, 1737133749.6780696, 1737133749.82091, 1737133749.9617987, 1737133750.0962665, 1737133750.226879, 1737133750.3639019, 1737133750.507191, 1737133750.683566, 1737133750.821436, 1737133750.9590774, 1737133751.0964403, 1737133751.2335596, 1737133751.3860934, 1737133751.523755, 1737133751.6712036, 1737133751.812853, 1737133751.9509869, 1737133752.09242, 1737133752.233024, 1737133752.3751724, 1737133752.5118194, 1737133752.6507566, 1737133752.7933125, 1737133752.9304888, 1737133753.0671928, 1737133753.2500756, 1737133753.3893983, 1737133753.5273573, 1737133753.6611633], "score": 0, "output_len": 155, "output": "def median(l: list):\n    sorted_list = sorted(l)\n    n = len(sorted_list)\n    if n % 2 == 0:\n        return (sorted_list[n//2 - 1] + sorted_list[n//2]) / 2.0\n    else:\n        return sorted_list[n//2]\n\n# Example usage:\nprint(median([3, 1, 2, 4, 5]))  # Output: 3\nprint(median([-10, 4, 6, 1000, 10, 20]))  # Output: 15.0\n", "input_len": 109}
{"id": "HumanEval/48", "model_memory": 49092.0, "time_taken": 8.30435848236084, "input_kv_memory": 49372.0, "memory_usage": [49372.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 48796.0, 48796.0, 49496.0, 49552.0, 49552.0, 49552.0, 49552.0], "time_metric": [1737133754.0930545, 1737133754.213113, 1737133754.3379812, 1737133754.465679, 1737133754.5903754, 1737133754.71418, 1737133754.8365538, 1737133754.965377, 1737133755.0912817, 1737133755.226255, 1737133755.3553312, 1737133755.474668, 1737133755.6034794, 1737133755.742179, 1737133755.8819523, 1737133756.004615, 1737133756.1304595, 1737133756.2558248, 1737133756.3787463, 1737133756.521578, 1737133756.661443, 1737133756.7924418, 1737133756.918668, 1737133757.0464413, 1737133757.175347, 1737133757.2985826, 1737133757.426245, 1737133757.5577216, 1737133757.686677, 1737133757.8135836, 1737133757.9405172, 1737133758.0759406, 1737133758.2038496, 1737133758.321801, 1737133758.4501066, 1737133758.5777678, 1737133758.7062042, 1737133758.8359463, 1737133758.968852, 1737133759.0987742, 1737133759.2306647, 1737133759.3613353, 1737133759.4813511, 1737133759.6135252, 1737133759.7462666, 1737133759.8763142, 1737133759.9970253, 1737133760.1256173, 1737133760.2637274, 1737133760.4044163, 1737133760.5392692, 1737133760.6692214, 1737133760.7983236, 1737133760.9292386, 1737133761.0558693, 1737133761.2011304, 1737133761.3291845, 1737133761.567329, 1737133761.732248, 1737133761.8761373, 1737133762.0012174, 1737133762.1316464], "score": 0, "output_len": 58, "output": "def is_palindrome(text: str):\n    text = text.lower()\n    return text == text[::-1]\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()", "input_len": 117}
{"id": "HumanEval/49", "model_memory": 49256.0, "time_taken": 16.006558656692505, "input_kv_memory": 49616.0, "memory_usage": [49616.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49654.0, 49714.0, 49714.0, 49714.0, 49714.0, 49714.0, 49714.0, 49754.0, 49754.0, 49754.0, 49754.0, 49754.0, 49754.0, 49754.0, 49794.0, 49874.0, 49874.0, 49874.0, 49874.0, 49874.0, 49894.0, 49934.0, 48978.0, 48978.0, 49178.0, 49636.0, 49654.0, 49654.0, 49654.0], "time_metric": [1737133762.6386085, 1737133762.809624, 1737133762.963308, 1737133763.098942, 1737133763.2277465, 1737133763.3490553, 1737133763.4713585, 1737133763.607917, 1737133763.728153, 1737133763.852369, 1737133763.9778152, 1737133764.10797, 1737133764.2315955, 1737133764.3504968, 1737133764.4848642, 1737133764.610928, 1737133764.7455926, 1737133764.885625, 1737133765.0153224, 1737133765.1463256, 1737133765.280623, 1737133765.4078186, 1737133765.540171, 1737133765.6702611, 1737133765.799172, 1737133765.9251993, 1737133766.052019, 1737133766.1826417, 1737133766.3155339, 1737133766.441251, 1737133766.5745423, 1737133766.70722, 1737133766.8424332, 1737133766.970675, 1737133767.101838, 1737133767.2289, 1737133767.3571641, 1737133767.4903157, 1737133767.6103232, 1737133767.7372792, 1737133767.8659835, 1737133768.010887, 1737133768.1572175, 1737133768.28437, 1737133768.41719, 1737133768.5627575, 1737133768.6936684, 1737133768.8349962, 1737133768.9604356, 1737133769.094842, 1737133769.2279036, 1737133769.3558536, 1737133769.4846334, 1737133769.6190667, 1737133769.760824, 1737133769.8898826, 1737133770.063825, 1737133770.2238057, 1737133770.351259, 1737133770.4738598, 1737133770.6065311, 1737133770.7328908, 1737133770.8610942, 1737133770.9847434, 1737133771.115592, 1737133771.2419715, 1737133771.37284, 1737133771.492759, 1737133771.6156406, 1737133771.7427683, 1737133771.87385, 1737133772.0068393, 1737133772.14127, 1737133772.2733417, 1737133772.40219, 1737133772.5325763, 1737133772.6635246, 1737133772.8165035, 1737133772.9467497, 1737133773.0766273, 1737133773.2094493, 1737133773.3502498, 1737133773.4817953, 1737133773.6125844, 1737133773.74194, 1737133773.8990335, 1737133774.0453663, 1737133774.1765864, 1737133774.322128, 1737133774.44975, 1737133774.5807438, 1737133774.7189128, 1737133774.8563056, 1737133774.9874244, 1737133775.1198442, 1737133775.2545526, 1737133775.394491, 1737133775.519871, 1737133775.655975, 1737133775.7865741, 1737133775.9179158, 1737133776.0551999, 1737133776.189383, 1737133776.3189023, 1737133776.4501855, 1737133776.5817094, 1737133776.7234867, 1737133776.8580108, 1737133776.9887857, 1737133777.130221, 1737133777.2623208, 1737133777.393463, 1737133777.525232, 1737133777.6750722, 1737133777.8690405, 1737133778.0099742, 1737133778.143514, 1737133778.2951906], "score": 0, "output_len": 107, "output": "def modp(n: int, p: int):\n    return pow(2, n, p)\n\n# Test cases\nassert modp(3, 5) == 3\nassert modp(1101, 101) == 2\nassert modp(0, 101) == 1\nassert modp(3, 11) == 8\nassert modp(100, 101) == 1\n", "input_len": 145}
{"id": "HumanEval/50", "model_memory": 49176.0, "time_taken": 10.463414192199707, "input_kv_memory": 49496.0, "memory_usagetime_metric": [1737133778.7859836, 1737133778.9106617, 1737133779.0365095, 1737133779.1689682, 1737133779.2902877, 1737133779.4186592, 1737133779.5479195, 1737133779.6716492, 1737133779.7947402, 1737133779.928492, 1737133780.0636528, 1737133780.1918883, 1737133780.3176236, 1737133780.4413743, 1737133780.57412, 1737133780.709906, 1737133780.8324842, 1737133780.961402, 1737133781.0876145, 1737133781.2126431, 1737133781.3454, 1737133781.4768784, 1737133781.6063328, 1737133781.7354329, 1737133781.8616133, 1737133781.983812, 1737133782.1215193, 1737133782.2491608, 1737133782.375144, 1737133782.5059795, 1737133782.6321099, 1737133782.7638845, 1737133782.8999655, 1737133783.0420516, 1737133783.1687634, 1737133783.2928815, 1737133783.4207509, 1737133783.5480628, 1737133783.6801295, 1737133783.8035228, 1737133783.9328682, 1737133784.0710914, 1737133784.2049317, 1737133784.3364215, 1737133784.4597752, 1737133784.5925546, 1737133784.721184, 1737133784.849429, 1737133784.9742026, 1737133785.1063426, 1737133785.2359743, 1737133785.3685477, 1737133785.4957187, 1737133785.6225214, 1737133785.7638414, 1737133785.8947928, 1737133786.0227797, 1737133786.1540904, 1737133786.2905958, 1737133786.4220572, 1737133786.5787172, 1737133786.7695549, 1737133786.8992465, 1737133787.0309308, 1737133787.2146378, 1737133787.4063692, 1737133787.5711007, 1737133787.705614, 1737133787.8334548, 1737133788.1414804, 1737133788.629436, 1737133788.7733924, 1737133788.9140596], "score": 0, "output_len": 48, "output": "def decode_shift(s: str):\n    return \"\".join([chr(((ord(ch) - 5 - ord(\"a\")) % 26) + ord(\"a\")) for ch in s])\n", "input_len": 135}
{"id": "HumanEval/51", "model_memory": 49524.0, "time_taken": 6.761067628860474, "input_kv_memory": 49988.0, "memory_usage": [49988.0, 50036.0, 50036.0, 50036.0, 50036.0, 50036.0, 50036.0, 50036.0, 50036.0, 50036.0, 50036.0, 50036.0, 50036.0, 50036.0, 50036.0, 50036.0, 50036.0, 50036.0, 50036.0, 50036.0, 50036.0, 50036.0, 50036.0, 50036.0, 50036.0, 50036.0, 50036.0, 50036.0, 50036.0, 50036.0, 50036.0, 50036.0, 50036.0, 50036.0, 50036.0, 50036.0, 50036.0, 50036.0, 50036.0, 50036.0, 50036.0, 50036.0, 49524.0, 49012.0, 49012.0, 49588.0, 49604.0, 49604.0, 49604.0, 49604.0], "time_metric": [1737133789.4101226, 1737133789.5647967, 1737133789.6902337, 1737133789.8291755, 1737133789.9506857, 1737133790.0905356, 1737133790.224605, 1737133790.3537345, 1737133790.4910045, 1737133790.6228812, 1737133790.749487, 1737133790.8819907, 1737133791.0109646, 1737133791.130493, 1737133791.2610283, 1737133791.392223, 1737133791.5256684, 1737133791.6560512, 1737133791.7820568, 1737133791.9145477, 1737133792.0356433, 1737133792.166943, 1737133792.2953346, 1737133792.4234426, 1737133792.5497315, 1737133792.6828678, 1737133792.8164117, 1737133792.950968, 1737133793.0825613, 1737133793.2129889, 1737133793.344904, 1737133793.4776435, 1737133793.603987, 1737133793.7369254, 1737133793.8652081, 1737133793.9946954, 1737133794.1207926, 1737133794.248717, 1737133794.37554, 1737133794.5066462, 1737133794.6295235, 1737133794.7556121, 1737133794.8892643, 1737133795.0185962, 1737133795.1472545, 1737133795.3086607, 1737133795.4458733, 1737133795.578981, 1737133795.7095191, 1737133795.839148], "score": 0, "output_len": 45, "output": "def remove_vowels(text):\n    vowels = 'aeiouAEIOU'\n    return ''.join([char for char in text if char not in vowels])\n", "input_len": 180}
{"id": "HumanEval/52", "model_memory": 49092.0, "time_taken": 12.250037908554077, "input_kv_memory": 49372.0, "memory_usagetime_metric": [1737133796.3041854, 1737133796.4662902, 1737133796.620815, 1737133796.7473483, 1737133796.873592, 1737133796.9975808, 1737133797.128114, 1737133797.253565, 1737133797.377148, 1737133797.4959943, 1737133797.6246407, 1737133797.7581136, 1737133797.8767047, 1737133798.0144694, 1737133798.163837, 1737133798.3092372, 1737133798.4340081, 1737133798.5653727, 1737133798.6898763, 1737133798.8161144, 1737133798.9480565, 1737133799.0756595, 1737133799.2054539, 1737133799.3363993, 1737133799.4611278, 1737133799.5795527, 1737133799.7092824, 1737133799.8422556, 1737133799.9736755, 1737133800.104708, 1737133800.2390935, 1737133800.37072, 1737133800.5040512, 1737133800.6405933, 1737133800.7616212, 1737133800.888589, 1737133801.0223641, 1737133801.1504219, 1737133801.2885125, 1737133801.414423, 1737133801.5436616, 1737133801.6747081, 1737133801.813885, 1737133801.9498706, 1737133802.079746, 1737133802.2092254, 1737133802.343266, 1737133802.4811695, 1737133802.61252, 1737133802.74042, 1737133802.8647983, 1737133802.9971678, 1737133803.1232991, 1737133803.252034, 1737133803.3884466, 1737133803.518031, 1737133803.6443994, 1737133803.7761486, 1737133803.904199, 1737133804.0331426, 1737133804.1689622, 1737133804.2972126, 1737133804.4286451, 1737133804.556704, 1737133804.6917472, 1737133804.8386586, 1737133804.9760725, 1737133805.1084914, 1737133805.241627, 1737133805.376508, 1737133805.5063646, 1737133805.674227, 1737133805.8067431, 1737133805.941314, 1737133806.0710626, 1737133806.2014318, 1737133806.3384047, 1737133806.4827683, 1737133806.6300914, 1737133806.8108833, 1737133806.939561, 1737133807.063674, 1737133807.2064047, 1737133807.3371487, 1737133807.565188, 1737133807.6985257, 1737133807.834924, 1737133807.9742465, 1737133808.1277652, 1737133808.2644196], "score": 0, "output_len": 89, "output": "def below_threshold(l: list, t: int):\n    return all(x < t for x in l)\n\n# Test cases\nprint(below_threshold([1, 2, 4, 10], 100))  # True\nprint(below_threshold([1, 20, 4, 10], 5))  # False\n", "input_len": 119}
{"id": "HumanEval/53", "model_memory": 48928.0, "time_taken": 6.194669485092163, "input_kv_memory": 49100.0, "memory_usage": [49100.0, 49142.0, 49142.0, 49142.0, 49142.0, 49142.0, 49142.0, 49142.0, 49142.0, 49142.0, 49142.0, 49142.0, 49142.0, 49142.0, 49142.0, 49142.0, 49142.0, 49142.0, 49142.0, 49142.0, 49142.0, 49142.0, 49142.0, 49142.0, 49182.0, 49182.0, 49182.0, 49182.0, 49182.0, 49182.0, 49182.0, 49182.0, 49202.0, 49202.0, 49202.0, 49202.0, 49202.0, 48968.0, 48736.0, 48788.0, 49804.0, 49882.0, 49882.0, 49882.0, 49882.0, 49882.0], "time_metric": [1737133808.7073033, 1737133808.8444114, 1737133808.9762762, 1737133809.1022654, 1737133809.2321603, 1737133809.351264, 1737133809.474099, 1737133809.5921485, 1737133809.7298565, 1737133809.860583, 1737133809.9870124, 1737133810.117344, 1737133810.247781, 1737133810.368482, 1737133810.490016, 1737133810.6154451, 1737133810.7469246, 1737133810.8737652, 1737133810.9958024, 1737133811.1244526, 1737133811.2509208, 1737133811.3780098, 1737133811.5039613, 1737133811.6212075, 1737133811.74559, 1737133811.8732238, 1737133812.0056508, 1737133812.1294718, 1737133812.2596006, 1737133812.3907502, 1737133812.5195444, 1737133812.6556776, 1737133812.7807689, 1737133812.920373, 1737133813.052647, 1737133813.1831894, 1737133813.3181622, 1737133813.443971, 1737133813.5853908, 1737133813.715762, 1737133813.9698288, 1737133814.1025677, 1737133814.226858, 1737133814.3526053, 1737133814.4854345, 1737133814.6154504], "score": 0, "output_len": 45, "output": "def add(x: int, y: int):\n    return x + y\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()", "input_len": 80}
{"id": "HumanEval/54", "model_memory": 49648.0, "time_taken": 24.16812777519226, "input_kv_memory": 50170.0, "memory_usagetime_metric": [1737133815.1775157, 1737133815.3031147, 1737133815.429763, 1737133815.5614767, 1737133815.6831105, 1737133815.8127823, 1737133815.9432285, 1737133816.0675473, 1737133816.185729, 1737133816.317235, 1737133816.4487007, 1737133816.6065154, 1737133816.728446, 1737133816.8694024, 1737133817.008065, 1737133817.1340055, 1737133817.2822113, 1737133817.410059, 1737133817.5351114, 1737133817.656933, 1737133817.7768805, 1737133817.9002724, 1737133818.040171, 1737133818.1614814, 1737133818.3052537, 1737133818.429785, 1737133818.5527556, 1737133818.6860878, 1737133818.8169198, 1737133818.9413037, 1737133819.0654259, 1737133819.1886232, 1737133819.3183076, 1737133819.4463356, 1737133819.5705779, 1737133819.7052486, 1737133819.8306808, 1737133819.9559739, 1737133820.0873833, 1737133820.216427, 1737133820.344445, 1737133820.467121, 1737133820.5933135, 1737133820.7163398, 1737133820.8395965, 1737133820.963643, 1737133821.0920389, 1737133821.2147717, 1737133821.342537, 1737133821.4711769, 1737133821.5981524, 1737133821.7289855, 1737133821.8559427, 1737133821.9893553, 1737133822.1198547, 1737133822.2579837, 1737133822.3851545, 1737133822.5195816, 1737133822.6495125, 1737133822.7754633, 1737133822.9035773, 1737133823.0329144, 1737133823.16599, 1737133823.2922359, 1737133823.424092, 1737133823.5547404, 1737133823.694554, 1737133823.8278716, 1737133823.9541585, 1737133824.0897462, 1737133824.2153656, 1737133824.3435824, 1737133824.4760149, 1737133824.6076348, 1737133824.7347698, 1737133824.8726945, 1737133825.0009077, 1737133825.1503193, 1737133825.2892935, 1737133825.4125447, 1737133825.545896, 1737133825.6716635, 1737133825.7982926, 1737133825.9324944, 1737133826.059125, 1737133826.1829734, 1737133826.3117392, 1737133826.441713, 1737133826.5725696, 1737133826.7093651, 1737133826.8352845, 1737133826.9650462, 1737133827.1074336, 1737133827.2405858, 1737133827.3709831, 1737133827.5084605, 1737133827.6402822, 1737133827.7726715, 1737133827.9045165, 1737133828.0575836, 1737133828.2035515, 1737133828.3373666, 1737133828.465578, 1737133828.5929615, 1737133828.7255337, 1737133828.8607635, 1737133828.9917912, 1737133829.1315417, 1737133829.2628217, 1737133829.4062662, 1737133829.5499759, 1737133829.6882381, 1737133829.8193235, 1737133829.950559, 1737133830.0796885, 1737133830.2133057, 1737133830.3494565, 1737133830.4872987, 1737133830.612647, 1737133830.7451196, 1737133830.8806765, 1737133831.0189593, 1737133831.1618416, 1737133831.3026645, 1737133831.4315379, 1737133831.6403863, 1737133831.7779212, 1737133831.9136844, 1737133832.0437315, 1737133832.175737, 1737133832.3069, 1737133832.43991, 1737133832.580301, 1737133832.7183926, 1737133832.8540661, 1737133832.9866548, 1737133833.114533, 1737133833.2555742, 1737133833.3946557, 1737133833.535835, 1737133833.677328, 1737133833.810151, 1737133833.9486177, 1737133834.0802834, 1737133834.21108, 1737133834.3495483, 1737133834.4810076, 1737133834.6256585, 1737133834.7759626, 1737133834.9083667, 1737133835.0459352, 1737133835.1767716, 1737133835.3127604, 1737133835.450935, 1737133835.5933352, 1737133835.735675, 1737133835.8690226, 1737133836.0139859, 1737133836.1520786, 1737133836.293621, 1737133836.4269948, 1737133836.5581548, 1737133836.6978514, 1737133836.8306081, 1737133836.9753366, 1737133837.1107512, 1737133837.2525833, 1737133837.3926377, 1737133837.538545, 1737133837.6815176, 1737133837.8178947, 1737133837.9507868, 1737133838.0954323, 1737133838.2469885, 1737133838.38424, 1737133838.5212517, 1737133838.6529918, 1737133838.7942803, 1737133838.9280314], "score": 0, "output_len": 178, "output": "def same_chars(s0: str, s1: str):\n    return set(s0) == set(s1)\n\n# Test cases\nprint(same_chars('eabcdzzzz', 'dddzzzzzzzddeddabc'))  # True\nprint(same_chars('abcd', 'dddddddabc'))              # True\nprint(same_chars('dddddddabc', 'abcd'))              # True\nprint(same_chars('eabcd', 'dddddddabc'))              # False\nprint(same_chars('abcd', 'dddddddabce'))              # False\nprint(same_chars('eabcdzzzz', 'dddzzzzzzzddddabc'))   # False\n", "input_len": 204}
{"id": "HumanEval/55", "model_memory": 48924.0, "time_taken": 12.512393474578857, "input_kv_memory": 49124.0, "memory_usagetime_metric": [1737133839.3795161, 1737133839.5078514, 1737133839.6320643, 1737133839.772243, 1737133839.9012268, 1737133840.025887, 1737133840.145241, 1737133840.2763183, 1737133840.3979933, 1737133840.5194254, 1737133840.648245, 1737133840.7832336, 1737133840.899299, 1737133841.0209212, 1737133841.1427622, 1737133841.2713253, 1737133841.3984394, 1737133841.5338998, 1737133841.662383, 1737133841.7876894, 1737133841.9196897, 1737133842.0402148, 1737133842.1715012, 1737133842.298132, 1737133842.4229794, 1737133842.557762, 1737133842.6883426, 1737133842.8063276, 1737133842.9367695, 1737133843.0641437, 1737133843.190921, 1737133843.3184276, 1737133843.4479425, 1737133843.5817654, 1737133843.708771, 1737133843.8379834, 1737133843.9683666, 1737133844.1049113, 1737133844.2325149, 1737133844.3577666, 1737133844.4886675, 1737133844.6106513, 1737133844.7362485, 1737133844.8679335, 1737133844.9952238, 1737133845.124047, 1737133845.2515903, 1737133845.383045, 1737133845.5201378, 1737133845.645442, 1737133845.7794766, 1737133845.902494, 1737133846.0296476, 1737133846.1637504, 1737133846.2909975, 1737133846.422176, 1737133846.587278, 1737133846.726454, 1737133846.8637412, 1737133846.9912508, 1737133847.1283371, 1737133847.2589867, 1737133847.3936007, 1737133847.522983, 1737133847.6588144, 1737133847.7932503, 1737133847.92553, 1737133848.054407, 1737133848.189481, 1737133848.3369968, 1737133848.4838855, 1737133848.621924, 1737133848.7581544, 1737133848.8839397, 1737133849.0137362, 1737133849.1513019, 1737133849.2935388, 1737133849.429316, 1737133849.5639267, 1737133849.7066607, 1737133849.8375077, 1737133849.9689374, 1737133850.0977638, 1737133850.229248, 1737133850.362434, 1737133850.5122786, 1737133850.660436, 1737133850.8670137, 1737133851.0459065, 1737133851.1969793, 1737133851.339945, 1737133851.4874594, 1737133851.6380355], "score": 0, "output_len": 92, "output": "def fib(n: int):\n    if n <= 1:\n        return n\n    else:\n        return fib(n-1) + fib(n-2)\n\n# Example usage:\nprint(fib(10))  # Output: 55\nprint(fib(1))   # Output: 1\nprint(fib(8))   # Output: 21\n", "input_len": 86}
{"id": "HumanEval/56", "model_memory": 49136.0, "time_taken": 14.127421379089355, "input_kv_memory": 49436.0, "memory_usagetime_metric": [1737133852.1593254, 1737133852.3241324, 1737133852.4673326, 1737133852.6003408, 1737133852.73809, 1737133852.8755484, 1737133853.0118508, 1737133853.1592302, 1737133853.29858, 1737133853.442773, 1737133853.5864425, 1737133853.732224, 1737133853.8792489, 1737133854.0190063, 1737133854.1573942, 1737133854.3006668, 1737133854.4324744, 1737133854.5636268, 1737133854.6926992, 1737133854.822554, 1737133854.9588084, 1737133855.0870109, 1737133855.222385, 1737133855.3510315, 1737133855.4768097, 1737133855.59996, 1737133855.7265482, 1737133855.856363, 1737133855.9789367, 1737133856.111296, 1737133856.2373185, 1737133856.3710887, 1737133856.508556, 1737133856.6397111, 1737133856.7714026, 1737133856.89184, 1737133857.0210798, 1737133857.1485395, 1737133857.281284, 1737133857.4087005, 1737133857.534672, 1737133857.6573665, 1737133857.7944314, 1737133857.9189775, 1737133858.0733025, 1737133858.218326, 1737133858.3580294, 1737133858.4827917, 1737133858.616704, 1737133858.7489796, 1737133858.8774347, 1737133859.006724, 1737133859.1364586, 1737133859.2652397, 1737133859.390082, 1737133859.5183616, 1737133859.6479378, 1737133859.7916903, 1737133859.9194736, 1737133860.0461924, 1737133860.1784942, 1737133860.315546, 1737133860.4479613, 1737133860.581561, 1737133860.718259, 1737133860.8501496, 1737133860.9934254, 1737133861.130899, 1737133861.2614985, 1737133861.3955538, 1737133861.52558, 1737133861.669535, 1737133861.7982824, 1737133861.9296165, 1737133862.105807, 1737133862.2330744, 1737133862.3683767, 1737133862.505087, 1737133862.6455085, 1737133862.777854, 1737133862.9075754, 1737133863.0343502, 1737133863.169621, 1737133863.3009977, 1737133863.4309044, 1737133863.5600247, 1737133863.6933444, 1737133863.8330154, 1737133863.9850123, 1737133864.1145155, 1737133864.2481697, 1737133864.3800259, 1737133864.5164127, 1737133864.6482255, 1737133864.7792118, 1737133864.9091704, 1737133865.1071439, 1737133865.2479527, 1737133865.398596, 1737133865.5332162, 1737133865.6680355, 1737133865.7950356, 1737133865.9281652], "score": 0, "output_len": 79, "output": "```python\ndef correct_bracketing(brackets: str):\n    stack = []\n    for bracket in brackets:\n        if bracket == \"<\":\n            stack.append(bracket)\n        elif bracket == \">\":\n            if not stack or stack.pop() != \"<\":\n                return False\n    return not stack\n```", "input_len": 134}
{"id": "HumanEval/57", "model_memory": 49092.0, "time_taken": 19.50767683982849, "input_kv_memory": 49372.0, "memory_usagetime_metric": [1737133866.3499928, 1737133866.4726186, 1737133866.6002994, 1737133866.734918, 1737133866.8567739, 1737133866.983891, 1737133867.111755, 1737133867.2362475, 1737133867.3719845, 1737133867.4990132, 1737133867.6177988, 1737133867.7424164, 1737133867.87294, 1737133867.9931111, 1737133868.130881, 1737133868.2659087, 1737133868.4671216, 1737133868.6149096, 1737133868.7385387, 1737133868.8682444, 1737133869.0440102, 1737133869.2018619, 1737133869.329945, 1737133869.462434, 1737133869.5971615, 1737133869.736696, 1737133869.8686433, 1737133869.997849, 1737133870.1313317, 1737133870.2596612, 1737133870.3903599, 1737133870.5139334, 1737133870.6431417, 1737133870.7750037, 1737133870.905077, 1737133871.0362911, 1737133871.1685195, 1737133871.2892835, 1737133871.4118834, 1737133871.5354288, 1737133871.6653335, 1737133871.7909431, 1737133871.9158006, 1737133872.0484571, 1737133872.1776965, 1737133872.309788, 1737133872.437096, 1737133872.5684898, 1737133872.700359, 1737133872.832398, 1737133872.9590266, 1737133873.0998378, 1737133873.2281034, 1737133873.3597283, 1737133873.4944065, 1737133873.6251674, 1737133873.7504919, 1737133873.876843, 1737133873.9988384, 1737133874.1367857, 1737133874.2854006, 1737133874.4145913, 1737133874.5408092, 1737133874.6722877, 1737133874.8130527, 1737133874.9398882, 1737133875.0719042, 1737133875.1993678, 1737133875.3272283, 1737133875.457104, 1737133875.582256, 1737133875.7120671, 1737133875.8403811, 1737133875.967668, 1737133876.1017265, 1737133876.245454, 1737133876.3921914, 1737133876.5573678, 1737133876.741054, 1737133876.8816152, 1737133877.0064993, 1737133877.1426823, 1737133877.2754712, 1737133877.4059703, 1737133877.5399551, 1737133877.667398, 1737133877.7980103, 1737133877.927728, 1737133878.0593045, 1737133878.190411, 1737133878.3203828, 1737133878.450248, 1737133878.5837111, 1737133878.7154663, 1737133878.8549218, 1737133878.9865015, 1737133879.111139, 1737133879.2506747, 1737133879.3840725, 1737133879.51809, 1737133879.6436906, 1737133879.7741892, 1737133879.9155545, 1737133880.0478106, 1737133880.1803226, 1737133880.3361673, 1737133880.4682443, 1737133880.6028237, 1737133880.7376978, 1737133880.8772278, 1737133881.0128763, 1737133881.1430182, 1737133881.2740698, 1737133881.4069796, 1737133881.5413618, 1737133881.6685789, 1737133881.8056312, 1737133881.9335747, 1737133882.0659387, 1737133882.2058706, 1737133882.3378053, 1737133882.4745638, 1737133882.6074457, 1737133882.744325, 1737133882.8790915, 1737133883.0092201, 1737133883.155074, 1737133883.292823, 1737133883.4231372, 1737133883.558357, 1737133883.6942444, 1737133883.8250585, 1737133883.9567318, 1737133884.0907195, 1737133884.234828, 1737133884.3709116, 1737133884.5045428, 1737133884.6361947, 1737133884.8776274, 1737133885.035618, 1737133885.175786, 1737133885.3326552, 1737133885.4679554, 1737133885.600324], "score": 0, "output_len": 136, "output": "def monotonic(l: list):\n    increasing = all(x <= y for x, y in zip(l, l[1:]))\n    decreasing = all(x >= y for x, y in zip(l, l[1:]))\n    return increasing or decreasing\n\n# Test cases\nprint(monotonic([1, 2, 4, 20]))  # True\nprint(monotonic([1, 20, 4, 10]))  # False\nprint(monotonic([4, 1, 0, -10]))  # True\n", "input_len": 122}
{"id": "HumanEval/58", "model_memory": 49260.0, "time_taken": 23.179971933364868, "input_kv_memory": 49620.0, "memory_usagetime_metric": [1737133886.1004493, 1737133886.2661624, 1737133886.4257436, 1737133886.5906558, 1737133886.718274, 1737133886.8438723, 1737133886.9663785, 1737133887.1095123, 1737133887.2369127, 1737133887.367131, 1737133887.5084212, 1737133887.6382687, 1737133887.7683241, 1737133887.9017801, 1737133888.0473874, 1737133888.1952927, 1737133888.3205159, 1737133888.4548225, 1737133888.5838761, 1737133888.7281609, 1737133888.8641205, 1737133888.9954648, 1737133889.1282582, 1737133889.2651312, 1737133889.4015365, 1737133889.5477235, 1737133889.675242, 1737133889.7949998, 1737133889.9151077, 1737133890.0548003, 1737133890.1777182, 1737133890.3076766, 1737133890.430795, 1737133890.5688994, 1737133890.6952794, 1737133890.8251016, 1737133890.962999, 1737133891.0935774, 1737133891.2140949, 1737133891.3419702, 1737133891.4718559, 1737133891.6024253, 1737133891.7333944, 1737133891.8633342, 1737133891.984696, 1737133892.117548, 1737133892.2430463, 1737133892.3658452, 1737133892.4862185, 1737133892.6226945, 1737133892.75004, 1737133892.8792696, 1737133893.0111883, 1737133893.1415107, 1737133893.27066, 1737133893.3990128, 1737133893.5266347, 1737133893.6586952, 1737133893.7948275, 1737133893.9316885, 1737133894.0560973, 1737133894.1897736, 1737133894.3178532, 1737133894.439115, 1737133894.573447, 1737133894.7033968, 1737133894.831095, 1737133894.9634256, 1737133895.0973911, 1737133895.2196538, 1737133895.347365, 1737133895.4874427, 1737133895.6316597, 1737133895.7585585, 1737133895.8934844, 1737133896.0210226, 1737133896.16114, 1737133896.2928605, 1737133896.4253535, 1737133896.562284, 1737133896.6929667, 1737133896.8319602, 1737133896.969092, 1737133897.1026938, 1737133897.2391806, 1737133897.3700764, 1737133897.5005302, 1737133897.6263409, 1737133897.7643034, 1737133897.9008505, 1737133898.0287895, 1737133898.1677043, 1737133898.2999737, 1737133898.4315865, 1737133898.563273, 1737133898.696453, 1737133898.8285875, 1737133899.017072, 1737133899.1589432, 1737133899.2949727, 1737133899.4501944, 1737133899.5892096, 1737133899.7836154, 1737133899.9514546, 1737133900.0854373, 1737133900.2159097, 1737133900.4300115, 1737133900.6171675, 1737133900.7813802, 1737133900.9284792, 1737133901.0700555, 1737133901.203922, 1737133901.3438737, 1737133901.4750903, 1737133901.6129699, 1737133901.7479832, 1737133901.8863866, 1737133902.0209124, 1737133902.1499887, 1737133902.2883842, 1737133902.435029, 1737133902.5934308, 1737133902.7276628, 1737133902.917514, 1737133903.0483682, 1737133903.1868956, 1737133903.4016116, 1737133903.6032493, 1737133903.7331023, 1737133903.8689063, 1737133904.0021908, 1737133904.1457515, 1737133904.2861235, 1737133904.425816, 1737133904.629274, 1737133904.7597246, 1737133904.903328, 1737133905.0397835, 1737133905.1805584, 1737133905.3117764, 1737133905.4434876, 1737133905.581734, 1737133905.7148495, 1737133905.887183, 1737133906.0170395, 1737133906.1738026, 1737133906.3985581, 1737133906.569377, 1737133906.7101562, 1737133906.8469806, 1737133906.977, 1737133907.1072588, 1737133907.246158, 1737133907.392468, 1737133907.5316594, 1737133907.671821, 1737133907.8195696, 1737133907.960996, 1737133908.1835184, 1737133908.3459496, 1737133908.486827, 1737133908.6263509, 1737133908.765258, 1737133908.9197552], "score": 0, "output_len": 162, "output": "def common(l1: list, l2: list):\n    set1 = set(l1)\n    set2 = set(l2)\n    common_elements = sorted(list(set1 & set2))\n    return common_elements\n\n# Test cases\nprint(common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]))  # Output: [1, 5, 653]\nprint(common([5, 3, 2, 8], [3, 2]))  # Output: [2, 3]\n", "input_len": 155}
{"id": "HumanEval/59", "model_memory": 49008.0, "time_taken": 28.08265209197998, "input_kv_memory": 49248.0, "memory_usagetime_metric": [1737133909.3962698, 1737133909.548116, 1737133909.6743693, 1737133909.8069544, 1737133909.940756, 1737133910.0695033, 1737133910.2038136, 1737133910.3291395, 1737133910.45136, 1737133910.580949, 1737133910.7041204, 1737133910.826058, 1737133910.948627, 1737133911.0782382, 1737133911.2061598, 1737133911.3382533, 1737133911.4591944, 1737133911.5885491, 1737133911.7120147, 1737133911.8418705, 1737133911.9739904, 1737133912.1047544, 1737133912.23469, 1737133912.3847346, 1737133912.5136144, 1737133912.6418352, 1737133912.7710245, 1737133912.9008152, 1737133913.0173159, 1737133913.1447055, 1737133913.2690957, 1737133913.3934789, 1737133913.5176888, 1737133913.6418624, 1737133913.7752478, 1737133913.8952734, 1737133914.0184786, 1737133914.1484609, 1737133914.2701676, 1737133914.4010644, 1737133914.5281131, 1737133914.6542685, 1737133914.7763255, 1737133914.9033797, 1737133915.0269518, 1737133915.1585097, 1737133915.281011, 1737133915.411861, 1737133915.5454385, 1737133915.6852179, 1737133915.8113515, 1737133915.9440265, 1737133916.0730717, 1737133916.207628, 1737133916.3381906, 1737133916.4745324, 1737133916.6101878, 1737133916.7403185, 1737133916.8789806, 1737133917.018978, 1737133917.1507812, 1737133917.2867086, 1737133917.4162867, 1737133917.5466864, 1737133917.6731167, 1737133917.8083487, 1737133917.9421613, 1737133918.0992315, 1737133918.240175, 1737133918.3769677, 1737133918.5051517, 1737133918.6422596, 1737133918.77654, 1737133918.9049783, 1737133919.036798, 1737133919.1683495, 1737133919.3082392, 1737133919.4449544, 1737133919.5785046, 1737133919.7103276, 1737133919.8839688, 1737133920.0193, 1737133920.1552927, 1737133920.289386, 1737133920.4216487, 1737133920.5648918, 1737133920.6951652, 1737133920.8331704, 1737133920.9743032, 1737133921.1113863, 1737133921.2391303, 1737133921.3905277, 1737133921.534014, 1737133921.6627266, 1737133921.7991238, 1737133921.9291453, 1737133922.0670593, 1737133922.198701, 1737133922.3317297, 1737133922.4643776, 1737133922.596569, 1737133922.727295, 1737133922.8605933, 1737133922.995471, 1737133923.1344142, 1737133923.2681983, 1737133923.4008207, 1737133923.533289, 1737133923.666244, 1737133923.8062158, 1737133923.937991, 1737133924.073608, 1737133924.2056465, 1737133924.3354995, 1737133924.4736814, 1737133924.6101608, 1737133924.7435298, 1737133924.8812685, 1737133925.0395765, 1737133925.2261937, 1737133925.4277742, 1737133925.5680964, 1737133925.7009275, 1737133925.8313522, 1737133925.9688115, 1737133926.09933, 1737133926.2317762, 1737133926.3647504, 1737133926.4941256, 1737133926.6272376, 1737133926.7584727, 1737133926.8879333, 1737133927.020761, 1737133927.167941, 1737133927.3207085, 1737133927.4562697, 1737133927.592119, 1737133927.7178252, 1737133927.8475358, 1737133927.978883, 1737133928.1174538, 1737133928.249522, 1737133928.3975356, 1737133928.5330389, 1737133928.6804225, 1737133928.8450205, 1737133928.989799, 1737133929.125346, 1737133929.2585633, 1737133929.4033067, 1737133929.5306413, 1737133929.6683574, 1737133929.8020356, 1737133929.9323227, 1737133930.0646615, 1737133930.1923525, 1737133930.3285606, 1737133930.4616501, 1737133930.5945764, 1737133930.7294183, 1737133930.8714523, 1737133931.009808, 1737133931.1415727, 1737133931.2804494, 1737133931.4237564, 1737133931.5532396, 1737133931.6862621, 1737133931.827065, 1737133931.966484, 1737133932.0994234, 1737133932.2285397, 1737133932.3606048, 1737133932.506108, 1737133932.636172, 1737133932.7747283, 1737133932.9646468, 1737133933.1215186, 1737133933.2590635, 1737133933.3991709, 1737133933.5515182, 1737133933.8065877, 1737133934.0004928, 1737133934.1458542, 1737133934.2865362, 1737133934.4246778, 1737133934.560427, 1737133934.7008138, 1737133934.8414006, 1737133934.9823372, 1737133935.122284, 1737133935.2666457, 1737133935.4050758, 1737133935.6311274, 1737133935.7684257, 1737133935.9089336, 1737133936.037525, 1737133936.2965167, 1737133936.4529595, 1737133936.6065538, 1737133936.7582622, 1737133936.9085627, 1737133937.0465152, 1737133937.177052], "score": 0, "output_len": 201, "output": "```python\ndef largest_prime_factor(n: int):\n    def is_prime(num):\n        if num < 2:\n            return False\n        for i in range(2, int(num**0.5) + 1):\n            if num % i == 0:\n                return False\n        return True\n\n    largest_factor = 1\n    while n % 2 == 0:\n        largest_factor = 2\n        n //= 2\n\n    for i in range(3, int(n**0.5) + 1, 2):\n        while n % i == 0:\n            if is_prime(i):\n                largest_factor = i\n            n //= i\n\n    if n > 2:\n        if is_prime(n):\n            largest_factor = n\n\n    return largest_factor\n```", "input_len": 102}
{"id": "HumanEval/60", "model_memory": 49256.0, "time_taken": 7.25616192817688, "input_kv_memory": 49616.0, "memory_usage": [49616.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 48878.0, 48878.0, 49496.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0], "time_metric": [1737133937.7049518, 1737133937.8376863, 1737133937.9641573, 1737133938.0929778, 1737133938.2233837, 1737133938.3459933, 1737133938.475929, 1737133938.5971541, 1737133938.7287257, 1737133938.8632958, 1737133938.992609, 1737133939.1189425, 1737133939.2415845, 1737133939.370255, 1737133939.4941928, 1737133939.6174998, 1737133939.737368, 1737133939.865481, 1737133939.9876873, 1737133940.1086564, 1737133940.2310658, 1737133940.3696368, 1737133940.4977205, 1737133940.626567, 1737133940.7555969, 1737133940.8847687, 1737133941.0143864, 1737133941.150298, 1737133941.2793472, 1737133941.4066193, 1737133941.538163, 1737133941.6620162, 1737133941.795229, 1737133941.9240148, 1737133942.057565, 1737133942.1796162, 1737133942.3067226, 1737133942.434261, 1737133942.5666647, 1737133942.6911995, 1737133942.8170135, 1737133942.9459796, 1737133943.0715811, 1737133943.1997736, 1737133943.3308785, 1737133943.4723253, 1737133943.677189, 1737133943.8165104, 1737133943.9456425, 1737133944.0782278, 1737133944.2103527, 1737133944.3529267, 1737133944.4805257, 1737133944.601707], "score": 0, "output_len": 53, "output": "def sum_to_n(n: int):\n    return n * (n + 1) // 2\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()", "input_len": 145}
{"id": "HumanEval/61", "model_memory": 49136.0, "time_taken": 14.31638765335083, "input_kv_memory": 49436.0, "memory_usagetime_metric": [1737133945.081438, 1737133945.2410693, 1737133945.3704436, 1737133945.501245, 1737133945.6349788, 1737133945.768749, 1737133945.89689, 1737133946.0347085, 1737133946.1639318, 1737133946.284153, 1737133946.4157434, 1737133946.5475328, 1737133946.6777027, 1737133946.8065426, 1737133946.939115, 1737133947.070815, 1737133947.2026584, 1737133947.3309443, 1737133947.4535422, 1737133947.575963, 1737133947.6971514, 1737133947.821436, 1737133947.9555898, 1737133948.0967507, 1737133948.2232296, 1737133948.350211, 1737133948.4800293, 1737133948.611407, 1737133948.7441585, 1737133948.8741663, 1737133949.0078027, 1737133949.1478162, 1737133949.2770305, 1737133949.4127238, 1737133949.539207, 1737133949.6687052, 1737133949.7996767, 1737133949.9337208, 1737133950.0852327, 1737133950.213268, 1737133950.3504686, 1737133950.475064, 1737133950.6146684, 1737133950.7460518, 1737133950.875235, 1737133951.017897, 1737133951.1414852, 1737133951.2720916, 1737133951.4031413, 1737133951.5324664, 1737133951.6723592, 1737133951.8027334, 1737133951.9305162, 1737133952.0584238, 1737133952.1909544, 1737133952.3198144, 1737133952.4526918, 1737133952.5787814, 1737133952.7093856, 1737133952.8484368, 1737133952.9763625, 1737133953.1018174, 1737133953.229687, 1737133953.3603156, 1737133953.4896905, 1737133953.632337, 1737133953.7645252, 1737133953.894319, 1737133954.0252733, 1737133954.1623275, 1737133954.3032868, 1737133954.4422677, 1737133954.5654433, 1737133954.7016392, 1737133954.8277357, 1737133954.9676747, 1737133955.097583, 1737133955.2282774, 1737133955.3651671, 1737133955.496638, 1737133955.6304169, 1737133955.7648082, 1737133955.9106128, 1737133956.0447443, 1737133956.1757727, 1737133956.3162138, 1737133956.451455, 1737133956.5884407, 1737133956.722861, 1737133956.8557398, 1737133956.982657, 1737133957.1143894, 1737133957.2594085, 1737133957.4117117, 1737133957.5588167, 1737133957.8040538, 1737133957.9602432, 1737133958.1039565, 1737133958.2556546, 1737133958.4204419, 1737133958.590435, 1737133958.7482352, 1737133958.9014156, 1737133959.062478], "score": 0, "output_len": 103, "output": "def correct_bracketing(brackets: str):\n    stack = []\n    for bracket in brackets:\n        if bracket == '(':\n            stack.append(bracket)\n        elif bracket == ')':\n            if not stack or stack.pop() != '(':\n                return False\n    return not stack\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()\n", "input_len": 133}
{"id": "HumanEval/62", "model_memory": 49176.0, "time_taken": 14.167027235031128, "input_kv_memory": 49496.0, "memory_usagetime_metric": [1737133959.5653083, 1737133959.744991, 1737133959.8894062, 1737133960.0262892, 1737133960.1598413, 1737133960.3084295, 1737133960.4505446, 1737133960.6145754, 1737133960.7654955, 1737133960.909269, 1737133961.044143, 1737133961.1872947, 1737133961.3396192, 1737133961.471257, 1737133961.6249204, 1737133961.7630854, 1737133961.9017477, 1737133962.0511878, 1737133962.186806, 1737133962.3263495, 1737133962.4749217, 1737133962.6155667, 1737133962.75735, 1737133962.9015455, 1737133963.0584679, 1737133963.1945634, 1737133963.3398144, 1737133963.4815762, 1737133963.6230495, 1737133963.762167, 1737133963.906584, 1737133964.042533, 1737133964.1734333, 1737133964.3197355, 1737133964.4614587, 1737133964.6008854, 1737133964.7479641, 1737133964.885592, 1737133965.0266693, 1737133965.1630838, 1737133965.3009334, 1737133965.4351473, 1737133965.569897, 1737133965.701175, 1737133965.842087, 1737133965.9655502, 1737133966.099614, 1737133966.2273736, 1737133966.3511505, 1737133966.480698, 1737133966.6150103, 1737133966.7415419, 1737133966.8714583, 1737133967.0155303, 1737133967.1493232, 1737133967.281161, 1737133967.4159791, 1737133967.5426683, 1737133967.6729891, 1737133967.7982974, 1737133967.9443986, 1737133968.0922573, 1737133968.2296169, 1737133968.361375, 1737133968.510347, 1737133968.6449938, 1737133968.7804635, 1737133968.9128017, 1737133969.0423424, 1737133969.1833234, 1737133969.3120377, 1737133969.4427328, 1737133969.5703964, 1737133969.700974, 1737133969.8386915, 1737133969.963653, 1737133970.095614, 1737133970.225681, 1737133970.3541, 1737133970.4898942, 1737133970.618016, 1737133970.7506747, 1737133970.881481, 1737133971.009869, 1737133971.1443708, 1737133971.2799902, 1737133971.4113345, 1737133971.5451245, 1737133971.6736631, 1737133971.8050668, 1737133972.0450313, 1737133972.1886349, 1737133972.3206966, 1737133972.4617014, 1737133972.5989304, 1737133972.7298014, 1737133972.8607724, 1737133972.988698, 1737133973.1233637, 1737133973.2639587, 1737133973.3977447], "score": 0, "output_len": 100, "output": "def derivative(xs: list):\n    return [xs[i] * i for i in range(1, len(xs))]\n\n# Example usage:\nprint(derivative([3, 1, 2, 4, 5]))  # Output: [1, 4, 12, 20]\nprint(derivative([1, 2, 3]))        # Output: [2, 6]\n", "input_len": 142}
{"id": "HumanEval/63", "model_memory": 49648.0, "time_taken": 22.028862953186035, "input_kv_memory": 50170.0, "memory_usagetime_metric": [1737133973.9220073, 1737133974.0524838, 1737133974.172777, 1737133974.2950797, 1737133974.4178402, 1737133974.5357263, 1737133974.6672661, 1737133974.803308, 1737133974.9287567, 1737133975.0514657, 1737133975.1716816, 1737133975.2938433, 1737133975.4201982, 1737133975.544884, 1737133975.6777072, 1737133975.8103302, 1737133975.939638, 1737133976.0677867, 1737133976.2047422, 1737133976.3291192, 1737133976.4605737, 1737133976.5989604, 1737133976.7366703, 1737133976.8688252, 1737133977.0068736, 1737133977.1402833, 1737133977.2702332, 1737133977.4015987, 1737133977.5221078, 1737133977.657477, 1737133977.7841923, 1737133977.9038749, 1737133978.044855, 1737133978.1841414, 1737133978.3058484, 1737133978.4322767, 1737133978.5569828, 1737133978.6925535, 1737133978.8155255, 1737133978.942183, 1737133979.0686274, 1737133979.19826, 1737133979.3424973, 1737133979.4659407, 1737133979.6001387, 1737133979.729483, 1737133979.8617594, 1737133979.9904053, 1737133980.1208165, 1737133980.2527106, 1737133980.3829222, 1737133980.5114985, 1737133980.6427617, 1737133980.7939157, 1737133980.9223487, 1737133981.0485961, 1737133981.1794038, 1737133981.308762, 1737133981.4362326, 1737133981.5693798, 1737133981.6973138, 1737133981.8268638, 1737133981.956486, 1737133982.0798266, 1737133982.2119648, 1737133982.341649, 1737133982.4675398, 1737133982.607684, 1737133982.7508476, 1737133982.8897128, 1737133983.0276835, 1737133983.1546206, 1737133983.2917569, 1737133983.4262033, 1737133983.5569193, 1737133983.7298799, 1737133983.8709717, 1737133984.0084927, 1737133984.1694613, 1737133984.3006415, 1737133984.4298027, 1737133984.5604658, 1737133984.6932912, 1737133984.8232768, 1737133984.9571705, 1737133985.0959196, 1737133985.2343132, 1737133985.3639364, 1737133985.494412, 1737133985.626706, 1737133985.7633684, 1737133985.9046893, 1737133986.0343857, 1737133986.1637774, 1737133986.2877612, 1737133986.4262185, 1737133986.5636766, 1737133986.6945593, 1737133986.8250477, 1737133986.9605896, 1737133987.103905, 1737133987.2357807, 1737133987.3709533, 1737133987.4955084, 1737133987.623983, 1737133987.7516134, 1737133987.891409, 1737133988.0197656, 1737133988.1511426, 1737133988.2983472, 1737133988.4267628, 1737133988.556106, 1737133988.6893792, 1737133988.815917, 1737133988.9534805, 1737133989.0868447, 1737133989.2188091, 1737133989.3600378, 1737133989.5014539, 1737133989.6336184, 1737133989.7636807, 1737133989.8988822, 1737133990.0405135, 1737133990.1759531, 1737133990.338458, 1737133990.4699354, 1737133990.6068645, 1737133990.7393641, 1737133990.8712788, 1737133991.0126631, 1737133991.1470675, 1737133991.2826476, 1737133991.4207003, 1737133991.5578084, 1737133991.6958425, 1737133991.824592, 1737133991.95993, 1737133992.0996716, 1737133992.2296627, 1737133992.3647401, 1737133992.5034592, 1737133992.6425972, 1737133992.7747688, 1737133992.904776, 1737133993.0447583, 1737133993.1867325, 1737133993.318518, 1737133993.4531386, 1737133993.5942473, 1737133993.7277524, 1737133993.8607326, 1737133993.9923375, 1737133994.1344595, 1737133994.3013086, 1737133994.4559314, 1737133994.595733, 1737133994.7294295, 1737133994.8758538, 1737133995.022162, 1737133995.1614165, 1737133995.2974184, 1737133995.4327576, 1737133995.5694861], "score": 0, "output_len": 162, "output": "def fibfib(n: int) -> int:\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 0\n    elif n == 2:\n        return 1\n    else:\n        a, b, c = 0, 0, 1\n        for _ in range(3, n + 1):\n            a, b, c = b, c, a + b + c\n        return c\n\n# Test cases\nprint(fibfib(1))  # Output: 0\nprint(fibfib(5))  # Output: 4\nprint(fibfib(8))  # Output: 24\n", "input_len": 199}
{"id": "HumanEval/64", "model_memory": 49512.0, "time_taken": 33.65372157096863, "input_kv_memory": 49974.0, "memory_usagetime_metric": [1737133996.0570107, 1737133996.1816967, 1737133996.310304, 1737133996.436416, 1737133996.580476, 1737133996.7125392, 1737133996.8438537, 1737133996.9646668, 1737133997.0925062, 1737133997.2151814, 1737133997.3380883, 1737133997.4671974, 1737133997.5969048, 1737133997.7178557, 1737133997.84343, 1737133997.9704354, 1737133998.0979216, 1737133998.224828, 1737133998.3548105, 1737133998.4783792, 1737133998.6081297, 1737133998.732623, 1737133998.8597755, 1737133998.9894953, 1737133999.123098, 1737133999.252471, 1737133999.3837383, 1737133999.513482, 1737133999.6474788, 1737133999.7859483, 1737133999.9188466, 1737134000.0561967, 1737134000.1898057, 1737134000.324911, 1737134000.4674637, 1737134000.601117, 1737134000.7519834, 1737134000.9133298, 1737134001.0537126, 1737134001.1915293, 1737134001.3289428, 1737134001.4794066, 1737134001.6193974, 1737134001.7599528, 1737134001.9009805, 1737134002.040829, 1737134002.1941156, 1737134002.3392088, 1737134002.4878614, 1737134002.6253998, 1737134002.7773228, 1737134002.926537, 1737134003.0612154, 1737134003.1925087, 1737134003.3501022, 1737134003.5100055, 1737134003.6561892, 1737134003.7957125, 1737134003.9398997, 1737134004.0815, 1737134004.2196093, 1737134004.364117, 1737134004.5044656, 1737134004.6423948, 1737134004.7832747, 1737134004.9256587, 1737134005.0645065, 1737134005.2063549, 1737134005.3488998, 1737134005.4883275, 1737134005.6310842, 1737134005.7802055, 1737134005.9205968, 1737134006.065121, 1737134006.2201314, 1737134006.364571, 1737134006.5048761, 1737134006.6557581, 1737134006.792391, 1737134006.9301193, 1737134007.0825562, 1737134007.2380507, 1737134007.3798463, 1737134007.5233958, 1737134007.6624036, 1737134007.8078265, 1737134007.9571435, 1737134008.1355379, 1737134008.2783709, 1737134008.4262278, 1737134008.5687337, 1737134008.7094448, 1737134008.8576293, 1737134008.9970183, 1737134009.142907, 1737134009.284864, 1737134009.4815657, 1737134009.6251001, 1737134009.7691593, 1737134009.9174638, 1737134010.0594327, 1737134010.2026722, 1737134010.343353, 1737134010.4837663, 1737134010.648167, 1737134010.8012938, 1737134010.9496045, 1737134011.095649, 1737134011.239503, 1737134011.381235, 1737134011.5304048, 1737134011.6742969, 1737134011.8229582, 1737134012.0247514, 1737134012.1644099, 1737134012.3058484, 1737134012.4496667, 1737134012.5881302, 1737134012.7389402, 1737134012.8919923, 1737134013.082504, 1737134013.234163, 1737134013.3828056, 1737134013.5561163, 1737134013.6975756, 1737134013.8401008, 1737134013.9797385, 1737134014.1325202, 1737134014.3170822, 1737134014.4619377, 1737134014.6147797, 1737134014.809709, 1737134014.9605293, 1737134015.1069822, 1737134015.2492573, 1737134015.4003356, 1737134015.5960867, 1737134015.7408817, 1737134015.8851023, 1737134016.0248141, 1737134016.1926696, 1737134016.4365597, 1737134016.579507, 1737134016.7206557, 1737134016.862646, 1737134017.0019834, 1737134017.1583045, 1737134017.3031275, 1737134017.4436555, 1737134017.5854151, 1737134017.73481, 1737134017.8871365, 1737134018.0887043, 1737134018.2387295, 1737134018.3799007, 1737134018.5317361, 1737134018.7210476, 1737134018.870067, 1737134019.0149975, 1737134019.166957, 1737134019.398888, 1737134019.632617, 1737134019.7862957, 1737134019.9415824, 1737134020.093404, 1737134020.2337224, 1737134020.3817089, 1737134020.5272663, 1737134020.674347, 1737134020.8269212, 1737134021.090919, 1737134021.2329657, 1737134021.3764257, 1737134021.6072714, 1737134021.7359927, 1737134021.873059, 1737134022.012594, 1737134022.146366, 1737134022.279468, 1737134022.4095302, 1737134022.549077, 1737134022.6877007, 1737134022.8213418, 1737134022.9651494, 1737134023.0943515, 1737134023.227607, 1737134023.3621447, 1737134023.502883, 1737134023.6398919, 1737134023.7994955, 1737134023.9301934, 1737134024.072951, 1737134024.2032661, 1737134024.344718, 1737134024.484943, 1737134024.615842, 1737134024.760915, 1737134024.8985279, 1737134025.035824, 1737134025.179979, 1737134025.3211386, 1737134025.4621358, 1737134025.6027102, 1737134025.7578537, 1737134025.8981113, 1737134026.0451765, 1737134026.1863153, 1737134026.325272, 1737134026.472158, 1737134026.6266026, 1737134026.7612362, 1737134026.903405, 1737134027.0430892, 1737134027.185962, 1737134027.3327525, 1737134027.5580676, 1737134027.693661, 1737134027.8403993, 1737134028.0576978, 1737134028.2153597, 1737134028.3527982, 1737134028.4859412, 1737134028.6619394, 1737134028.8187408, 1737134028.9678621, 1737134029.1081846, 1737134029.2509022, 1737134029.3867009], "score": 0, "output_len": 210, "output": "def vowels_count(s):\n    vowels = 'aeiou'\n    count = 0\n    for i, char in enumerate(s):\n        if char in vowels:\n            count += 1\n        elif char == 'y' and i == len(s) - 1:\n            count += 1\n    return count\n\n# Test cases\nprint(vowels_count(\"abcde\"))  # Output: 2\nprint(vowels_count(\"ACEDY\"))  # Output: 3\nprint(vowels_count(\"hello\"))  # Output: 2\nprint(vowels_count(\"sky\"))    # Output: 0\nprint(vowels_count(\"aey\"))    # Output: 2\nprint(vowels_count(\"y\"))      # Output: 1\nprint(vowels_count(\"\"))       # Output: 0\n", "input_len": 175}
{"id": "HumanEval/65", "model_memory": 49092.0, "time_taken": 16.494173049926758, "input_kv_memory": 49372.0, "memory_usagetime_metric": [1737134029.8346894, 1737134029.9642699, 1737134030.0930119, 1737134030.2143507, 1737134030.3492892, 1737134030.4990537, 1737134030.6409824, 1737134030.7953146, 1737134030.9438984, 1737134031.103961, 1737134031.2355847, 1737134031.3721583, 1737134031.501888, 1737134031.65063, 1737134031.8020217, 1737134031.947356, 1737134032.093757, 1737134032.2419362, 1737134032.3832335, 1737134032.5269651, 1737134032.6681998, 1737134032.8090358, 1737134032.9576573, 1737134033.100073, 1737134033.248058, 1737134033.3910422, 1737134033.5348399, 1737134033.6689363, 1737134033.7996652, 1737134033.9310699, 1737134034.0601168, 1737134034.1809957, 1737134034.320102, 1737134034.4579508, 1737134034.5811543, 1737134034.7153778, 1737134034.845199, 1737134034.9770672, 1737134035.106533, 1737134035.238601, 1737134035.364703, 1737134035.4993591, 1737134035.626497, 1737134035.758331, 1737134035.8823178, 1737134036.0149627, 1737134036.149587, 1737134036.2919576, 1737134036.4221363, 1737134036.5504313, 1737134036.683331, 1737134036.8088517, 1737134036.9442797, 1737134037.0710154, 1737134037.201959, 1737134037.3429143, 1737134037.4757428, 1737134037.6122582, 1737134037.7362993, 1737134037.8657916, 1737134038.004048, 1737134038.1470704, 1737134038.2876246, 1737134038.419788, 1737134038.5498052, 1737134038.6806006, 1737134038.8154273, 1737134038.9465034, 1737134039.0821545, 1737134039.2140133, 1737134039.3469872, 1737134039.4787247, 1737134039.6117766, 1737134039.7406201, 1737134039.8905544, 1737134040.0189133, 1737134040.1497035, 1737134040.2845805, 1737134040.4143944, 1737134040.5635595, 1737134040.6990423, 1737134040.8239899, 1737134040.9551256, 1737134041.0858717, 1737134041.2189007, 1737134041.3594675, 1737134041.493902, 1737134041.62496, 1737134041.7600312, 1737134041.9043887, 1737134042.0336072, 1737134042.1644301, 1737134042.2959847, 1737134042.4275835, 1737134042.571918, 1737134042.7031326, 1737134042.835186, 1737134042.965866, 1737134043.1013806, 1737134043.246059, 1737134043.379692, 1737134043.5084136, 1737134043.6391227, 1737134043.7769659, 1737134043.9128265, 1737134044.0550256, 1737134044.196229, 1737134044.4487407, 1737134044.5950763, 1737134044.8234692, 1737134044.973598, 1737134045.105186, 1737134045.2378838, 1737134045.3790257, 1737134045.5139718, 1737134045.644068, 1737134045.7813377, 1737134045.913624, 1737134046.055546], "score": 0, "output_len": 118, "output": "def circular_shift(x, shift):\n    num_str = str(x)\n    num_len = len(num_str)\n    shift %= num_len\n    shifted_str = num_str[-shift:] + num_str[:-shift]\n    return shifted_str\n\n# Test cases\nprint(circular_shift(12, 1))  # Output: \"21\"\nprint(circular_shift(12, 2))  # Output: \"12\"\n", "input_len": 122}
{"id": "HumanEval/66", "model_memory": 49260.0, "time_taken": 5.721772193908691, "input_kv_memory": 49620.0, "memory_usage": [49620.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49260.0, 49260.0, 49116.0, 49804.0, 50440.0, 50440.0, 50440.0, 50440.0, 50440.0, 50440.0, 50440.0, 50440.0, 50440.0, 50440.0, 50440.0], "time_metric": [1737134046.5390384, 1737134046.6611266, 1737134046.79537, 1737134046.92954, 1737134047.0527172, 1737134047.1951046, 1737134047.3250215, 1737134047.4464846, 1737134047.5691195, 1737134047.6987126, 1737134047.831081, 1737134047.9508657, 1737134048.0724545, 1737134048.2011027, 1737134048.3530452, 1737134048.4947553, 1737134048.6259692, 1737134048.7478652, 1737134048.8763428, 1737134049.0004623, 1737134049.1301458, 1737134049.2601962, 1737134049.3907726, 1737134049.5225465, 1737134049.6484058, 1737134049.7785828, 1737134049.9113646, 1737134050.0375638, 1737134050.1701128, 1737134050.3783596, 1737134050.6126008, 1737134050.7625582, 1737134050.9010534, 1737134051.0273204, 1737134051.1575491, 1737134051.2802052, 1737134051.4080138, 1737134051.5404494, 1737134051.669284, 1737134051.8004549, 1737134051.9305375], "score": 0, "output_len": 27, "output": "def digitSum(s):\n    return sum(ord(char) for char in s if char.isupper())\n", "input_len": 153}
{"id": "HumanEval/67", "model_memory": 50060.0, "time_taken": 10.378835678100586, "input_kv_memory": 50768.0, "memory_usagetime_metric": [1737134052.48112, 1737134052.6060598, 1737134052.7327912, 1737134052.8571055, 1737134052.977846, 1737134053.1077886, 1737134053.2369, 1737134053.3586578, 1737134053.4839485, 1737134053.6063244, 1737134053.7333243, 1737134053.8553834, 1737134053.9858487, 1737134054.1129935, 1737134054.2366064, 1737134054.362496, 1737134054.5004992, 1737134054.62897, 1737134054.760231, 1737134054.8817425, 1737134055.0035934, 1737134055.1268613, 1737134055.2583694, 1737134055.3851814, 1737134055.5124297, 1737134055.6370444, 1737134055.7732794, 1737134055.9075472, 1737134056.0358872, 1737134056.161519, 1737134056.2916489, 1737134056.4165368, 1737134056.5704083, 1737134056.7126515, 1737134056.8382108, 1737134056.9667716, 1737134057.0921655, 1737134057.2228446, 1737134057.3529024, 1737134057.4842954, 1737134057.612659, 1737134057.7415905, 1737134057.8747551, 1737134058.0058477, 1737134058.14898, 1737134058.2772872, 1737134058.4062703, 1737134058.5386813, 1737134058.671999, 1737134058.8023138, 1737134058.9298859, 1737134059.0655274, 1737134059.2048585, 1737134059.334952, 1737134059.4745326, 1737134059.6078086, 1737134059.7303457, 1737134059.8597832, 1737134059.9865396, 1737134060.117915, 1737134060.2443402, 1737134060.3759234, 1737134060.5046058, 1737134060.8970866, 1737134061.0672293, 1737134061.2329452, 1737134061.4109864, 1737134061.5440762, 1737134061.6752412, 1737134061.8137896, 1737134061.9371464, 1737134062.0683906, 1737134062.2020588, 1737134062.3349416, 1737134062.465762], "score": 0, "output_len": 72, "output": "def fruit_distribution(s, n):\n    parts = s.split(\" and \")\n    apples = int(parts[0].split()[-2])\n    oranges = int(parts[1].split()[0])\n    mangoes = n - apples - oranges\n    return mangoes\n", "input_len": 283}
{"id": "HumanEval/68", "model_memory": 50604.0, "time_taken": 14.702414274215698, "input_kv_memory": 51560.0, "memory_usagetime_metric": [1737134063.1219597, 1737134063.2520823, 1737134063.3828676, 1737134063.5140734, 1737134063.642356, 1737134063.7653196, 1737134063.8934703, 1737134064.0281317, 1737134064.1625946, 1737134064.2938225, 1737134064.4324334, 1737134064.5724907, 1737134064.7308862, 1737134064.8699749, 1737134065.0184648, 1737134065.1572845, 1737134065.309675, 1737134065.4475389, 1737134065.5932608, 1737134065.73372, 1737134065.8847718, 1737134066.0368867, 1737134066.1787694, 1737134066.308665, 1737134066.4365563, 1737134066.5827413, 1737134066.7296865, 1737134066.8843648, 1737134067.0232, 1737134067.1621482, 1737134067.312687, 1737134067.4552178, 1737134067.5963411, 1737134067.7505438, 1737134067.8896365, 1737134068.0326462, 1737134068.193872, 1737134068.3366182, 1737134068.4826877, 1737134068.6104305, 1737134068.7552261, 1737134068.920511, 1737134069.0783994, 1737134069.2107024, 1737134069.3656948, 1737134069.5033216, 1737134069.6407034, 1737134069.7833555, 1737134069.942335, 1737134070.068556, 1737134070.204816, 1737134070.358183, 1737134070.5176258, 1737134070.6604617, 1737134070.8189561, 1737134070.9486003, 1737134071.0844364, 1737134071.2253711, 1737134071.3918853, 1737134071.5229602, 1737134071.6762426, 1737134071.8476238, 1737134072.0111327, 1737134072.1814258, 1737134072.3239691, 1737134072.483337, 1737134072.6565223, 1737134072.823047, 1737134072.9598453, 1737134073.099322, 1737134073.280242, 1737134073.423958, 1737134073.557947, 1737134073.7022061, 1737134073.822112, 1737134073.9553201, 1737134074.0859118, 1737134074.2160666, 1737134074.345407, 1737134074.478276, 1737134074.6101813, 1737134074.7399333, 1737134074.8701053, 1737134075.0046995, 1737134075.1246479, 1737134075.2543557, 1737134075.3821638, 1737134075.5197687, 1737134075.775565, 1737134075.9350371, 1737134076.088099, 1737134076.2432218, 1737134076.370683, 1737134076.5116596, 1737134076.6427689, 1737134076.7769122, 1737134076.9135027, 1737134077.0584953, 1737134077.1932545, 1737134077.3261194], "score": 0, "output_len": 99, "output": "def pluck(arr):\n    smallest_even = float('inf')\n    smallest_index = -1\n    for index, value in enumerate(arr):\n        if value % 2 == 0 and value < smallest_even:\n            smallest_even = value\n            smallest_index = index\n    if smallest_index != -1:\n        return [smallest_even, smallest_index]\n    else:\n        return []\n", "input_len": 385}
{"id": "HumanEval/69", "model_memory": 49648.0, "time_taken": 13.668494462966919, "input_kv_memory": 50170.0, "memory_usagetime_metric": [1737134077.8835108, 1737134078.0394876, 1737134078.1978047, 1737134078.3559582, 1737134078.4895797, 1737134078.6107094, 1737134078.74466, 1737134078.8704133, 1737134079.0139375, 1737134079.143265, 1737134079.2650046, 1737134079.396156, 1737134079.5267746, 1737134079.6564782, 1737134079.7893417, 1737134079.9314847, 1737134080.0615833, 1737134080.1904812, 1737134080.3218193, 1737134080.4485414, 1737134080.5763657, 1737134080.7041426, 1737134080.8358355, 1737134080.9658954, 1737134081.0969424, 1737134081.219383, 1737134081.3519785, 1737134081.4705043, 1737134081.599606, 1737134081.7249255, 1737134081.8527403, 1737134081.984365, 1737134082.110744, 1737134082.2362897, 1737134082.367904, 1737134082.4973896, 1737134082.62523, 1737134082.7583866, 1737134082.8861146, 1737134083.0155692, 1737134083.1430488, 1737134083.27592, 1737134083.404551, 1737134083.5383346, 1737134083.680444, 1737134083.809278, 1737134083.9356782, 1737134084.054269, 1737134084.1823072, 1737134084.3142385, 1737134084.4457817, 1737134084.57713, 1737134084.7049837, 1737134084.8398645, 1737134084.9615412, 1737134085.1006222, 1737134085.2326338, 1737134085.3612113, 1737134085.490182, 1737134085.622276, 1737134085.7583342, 1737134085.8919349, 1737134086.0235293, 1737134086.1576633, 1737134086.2866607, 1737134086.432439, 1737134086.5727744, 1737134086.715317, 1737134086.84421, 1737134086.9761848, 1737134087.1148102, 1737134087.245328, 1737134087.4009817, 1737134087.5362303, 1737134087.6711428, 1737134087.8067327, 1737134087.942604, 1737134088.0706322, 1737134088.203621, 1737134088.3512194, 1737134088.48717, 1737134088.6282976, 1737134088.7621918, 1737134088.8951643, 1737134089.0220158, 1737134089.155408, 1737134089.2979681, 1737134089.5256999, 1737134089.6541305, 1737134089.80605, 1737134089.941158, 1737134090.0754735, 1737134090.2157502, 1737134090.3574657, 1737134090.4917145, 1737134090.6181893, 1737134090.760606, 1737134090.9011366, 1737134091.033839, 1737134091.1650834], "score": 0, "output_len": 100, "output": "def search(lst):\n    freq_dict = {}\n    for num in lst:\n        if num > 0:\n            freq_dict[num] = freq_dict.get(num, 0) + 1\n\n    result = -1\n    for num, freq in freq_dict.items():\n        if freq >= num:\n            result = max(result, num)\n\n    return result\n", "input_len": 198}
{"id": "HumanEval/70", "model_memory": 49392.0, "time_taken": 11.682378053665161, "input_kv_memory": 49794.0, "memory_usagetime_metric": [1737134091.6299436, 1737134091.754412, 1737134091.8781059, 1737134092.0006971, 1737134092.1256912, 1737134092.2512527, 1737134092.3721068, 1737134092.506097, 1737134092.6265461, 1737134092.7547164, 1737134092.8794527, 1737134093.015025, 1737134093.1465886, 1737134093.2779255, 1737134093.419617, 1737134093.5423436, 1737134093.6829884, 1737134093.8057237, 1737134093.9304023, 1737134094.058052, 1737134094.18117, 1737134094.310097, 1737134094.4262402, 1737134094.551595, 1737134094.686661, 1737134094.8129525, 1737134094.9437578, 1737134095.079529, 1737134095.2087371, 1737134095.3405623, 1737134095.4744725, 1737134095.5997841, 1737134095.7233548, 1737134095.851942, 1737134095.9746292, 1737134096.1029012, 1737134096.2346299, 1737134096.3632712, 1737134096.4967022, 1737134096.630679, 1737134096.7578852, 1737134096.8888578, 1737134097.023243, 1737134097.1554809, 1737134097.2929525, 1737134097.435511, 1737134097.5584576, 1737134097.6961925, 1737134097.833066, 1737134097.9749641, 1737134098.114254, 1737134098.2414145, 1737134098.3786685, 1737134098.5117428, 1737134098.6432106, 1737134098.7735112, 1737134098.9030275, 1737134099.0413556, 1737134099.1806557, 1737134099.3466883, 1737134099.4935427, 1737134099.6299303, 1737134099.767547, 1737134099.8970332, 1737134100.0292459, 1737134100.1598592, 1737134100.3018117, 1737134100.432998, 1737134100.56543, 1737134100.6983101, 1737134100.8268976, 1737134100.9621167, 1737134101.0940444, 1737134101.224679, 1737134101.4144578, 1737134101.5470119, 1737134101.681101, 1737134101.8207946, 1737134101.950915, 1737134102.0791864, 1737134102.2098536, 1737134102.3417761, 1737134102.4807234, 1737134102.6158402, 1737134102.752279, 1737134102.8827615, 1737134103.0122235], "score": 0, "output_len": 80, "output": "def strange_sort_list(lst):\n    if not lst:\n        return []\n    sorted_lst = sorted(lst)\n    result = []\n    while sorted_lst:\n        result.append(sorted_lst.pop(0))\n        if sorted_lst:\n            result.append(sorted_lst.pop())\n    return result\n", "input_len": 168}
{"id": "HumanEval/71", "model_memory": 49260.0, "time_taken": 14.13482117652893, "input_kv_memory": 49620.0, "memory_usagetime_metric": [1737134103.4901998, 1737134103.63807, 1737134103.760186, 1737134103.8834407, 1737134104.0128727, 1737134104.1452827, 1737134104.2769074, 1737134104.411763, 1737134104.5365689, 1737134104.666818, 1737134104.7916396, 1737134104.9200113, 1737134105.0549433, 1737134105.1802316, 1737134105.3102477, 1737134105.4389384, 1737134105.5645053, 1737134105.7035875, 1737134105.8248997, 1737134105.9485397, 1737134106.069949, 1737134106.2019389, 1737134106.3292959, 1737134106.4572241, 1737134106.5861423, 1737134106.7150764, 1737134106.8422296, 1737134106.9717793, 1737134107.109711, 1737134107.2346976, 1737134107.3616655, 1737134107.4862113, 1737134107.6089296, 1737134107.7653043, 1737134107.9004314, 1737134108.0292332, 1737134108.1625812, 1737134108.3002703, 1737134108.4242263, 1737134108.5437746, 1737134108.677115, 1737134108.805438, 1737134108.928623, 1737134109.0573263, 1737134109.18919, 1737134109.322762, 1737134109.4488735, 1737134109.5799632, 1737134109.724129, 1737134109.855115, 1737134109.9825475, 1737134110.1150377, 1737134110.2545853, 1737134110.3841918, 1737134110.52032, 1737134110.6540582, 1737134110.7907717, 1737134110.9265203, 1737134111.0612118, 1737134111.190556, 1737134111.3293564, 1737134111.4620323, 1737134111.5941048, 1737134111.7235072, 1737134111.8550239, 1737134111.9872384, 1737134112.1230066, 1737134112.2629287, 1737134112.3947017, 1737134112.5239954, 1737134112.6626124, 1737134112.7852354, 1737134112.9234948, 1737134113.0487375, 1737134113.1829991, 1737134113.3153126, 1737134113.4432855, 1737134113.5914059, 1737134113.7250483, 1737134113.8535876, 1737134113.9816508, 1737134114.1131895, 1737134114.2422025, 1737134114.3746717, 1737134114.5151694, 1737134114.647279, 1737134114.7865548, 1737134114.9199355, 1737134115.060963, 1737134115.204787, 1737134115.3327749, 1737134115.4598866, 1737134115.7160418, 1737134115.8769476, 1737134116.0170448, 1737134116.1522827, 1737134116.300497, 1737134116.4399493, 1737134116.610857, 1737134116.7632568, 1737134116.899725, 1737134117.0347683, 1737134117.1658883, 1737134117.3009484], "score": 0, "output_len": 98, "output": "import math\n\ndef triangle_area(a, b, c):\n    if a + b > c and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = math.sqrt(s * (s - a) * (s - b) * (s - c))\n        return round(area, 2)\n    else:\n        return -1\n", "input_len": 156}
{"id": "HumanEval/72", "model_memory": 50172.0, "time_taken": 5.999029159545898, "input_kv_memory": 50936.0, "memory_usage": [50936.0, 51008.0, 51008.0, 51008.0, 51008.0, 51008.0, 51008.0, 51008.0, 51008.0, 51008.0, 51008.0, 51008.0, 51008.0, 51008.0, 51008.0, 51008.0, 51008.0, 51008.0, 51008.0, 51008.0, 51008.0, 51008.0, 51008.0, 51008.0, 51008.0, 51008.0, 51008.0, 51008.0, 49336.0, 49336.0, 49612.0, 50456.0, 50456.0, 50456.0, 50456.0, 50456.0, 50456.0, 50456.0, 50456.0, 50456.0, 50456.0, 50456.0, 50456.0, 50456.0], "time_metric": [1737134117.8693647, 1737134118.0033665, 1737134118.1407938, 1737134118.2654774, 1737134118.3944392, 1737134118.5146797, 1737134118.6361687, 1737134118.7586498, 1737134118.8822837, 1737134119.0098963, 1737134119.135103, 1737134119.2566762, 1737134119.3863928, 1737134119.5057392, 1737134119.6327102, 1737134119.7562695, 1737134119.8946586, 1737134120.0267096, 1737134120.1615436, 1737134120.2936738, 1737134120.4214618, 1737134120.5559962, 1737134120.6862755, 1737134120.809095, 1737134120.9488873, 1737134121.0770862, 1737134121.1977398, 1737134121.3193288, 1737134121.449753, 1737134121.5816267, 1737134121.7016027, 1737134121.8906004, 1737134122.0242136, 1737134122.1755402, 1737134122.3062692, 1737134122.4291315, 1737134122.5584936, 1737134122.6879325, 1737134122.827476, 1737134122.9644365, 1737134123.0838535, 1737134123.2055833, 1737134123.3341835, 1737134123.4599092], "score": 0, "output_len": 31, "output": "def will_it_fly(q, w):\n    return q == q[::-1] and sum(q) <= w\n", "input_len": 292}
{"id": "HumanEval/73", "model_memory": 49620.0, "time_taken": 8.80223798751831, "input_kv_memory": 50132.0, "memory_usage": [50132.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 49060.0, 49060.0, 49332.0, 50344.0, 50500.0, 50500.0, 50500.0, 50500.0, 50500.0, 50500.0, 50500.0, 50500.0, 50500.0, 50500.0, 50500.0, 50500.0], "time_metric": [1737134123.9427292, 1737134124.069082, 1737134124.2010646, 1737134124.3220165, 1737134124.4517252, 1737134124.5813937, 1737134124.7130551, 1737134124.8440404, 1737134124.9739146, 1737134125.1055956, 1737134125.2364693, 1737134125.3585615, 1737134125.48604, 1737134125.609087, 1737134125.7301435, 1737134125.8614056, 1737134125.9864056, 1737134126.1166935, 1737134126.244766, 1737134126.373858, 1737134126.5039685, 1737134126.637347, 1737134126.7662628, 1737134126.8976688, 1737134127.0361311, 1737134127.1640081, 1737134127.2982242, 1737134127.4349918, 1737134127.5650778, 1737134127.6969411, 1737134127.8402412, 1737134127.9748273, 1737134128.1218984, 1737134128.2619314, 1737134128.387315, 1737134128.5199423, 1737134128.6531599, 1737134128.7905135, 1737134128.9163518, 1737134129.0471084, 1737134129.177923, 1737134129.3111405, 1737134129.4400837, 1737134129.570693, 1737134129.7140076, 1737134129.8527002, 1737134129.9911475, 1737134130.1249545, 1737134130.2584093, 1737134130.3930457, 1737134130.5218005, 1737134130.648763, 1737134130.8390882, 1737134130.9742005, 1737134131.1001043, 1737134131.2305405, 1737134131.3606439, 1737134131.4853406, 1737134131.616313, 1737134131.7455099, 1737134131.8844388, 1737134132.0160801, 1737134132.1469557, 1737134132.2755628, 1737134132.4312718], "score": 0, "output_len": 62, "output": "def smallest_change(arr):\n    n = len(arr)\n    changes = 0\n    for i in range(n // 2):\n        if arr[i] != arr[n - i - 1]:\n            changes += 1\n    return changes\n", "input_len": 191}
{"id": "HumanEval/74", "model_memory": 49940.0, "time_taken": 16.967071533203125, "input_kv_memory": 50596.0, "memory_usagetime_metric": [1737134132.9716036, 1737134133.131583, 1737134133.2640467, 1737134133.3910732, 1737134133.5198107, 1737134133.6465824, 1737134133.780961, 1737134133.914675, 1737134134.0424137, 1737134134.1731262, 1737134134.3021507, 1737134134.4268024, 1737134134.5557327, 1737134134.6855466, 1737134134.8079815, 1737134134.9377756, 1737134135.0636969, 1737134135.1903698, 1737134135.323437, 1737134135.4481091, 1737134135.5847003, 1737134135.7135274, 1737134135.850154, 1737134135.9776652, 1737134136.1073706, 1737134136.2413917, 1737134136.3679574, 1737134136.4993906, 1737134136.6258898, 1737134136.7513304, 1737134136.8829772, 1737134137.0135136, 1737134137.1444407, 1737134137.2756002, 1737134137.4073055, 1737134137.5388498, 1737134137.67811, 1737134137.8097754, 1737134137.9402812, 1737134138.071274, 1737134138.2018209, 1737134138.3395374, 1737134138.5059376, 1737134138.6280174, 1737134138.7461896, 1737134138.8834417, 1737134139.0080013, 1737134139.1409228, 1737134139.2730467, 1737134139.3943415, 1737134139.5226927, 1737134139.646824, 1737134139.77534, 1737134139.9044795, 1737134140.0317218, 1737134140.1553586, 1737134140.2908657, 1737134140.4185581, 1737134140.5517087, 1737134140.6760623, 1737134140.7996142, 1737134140.9300048, 1737134141.0725143, 1737134141.2077706, 1737134141.3364446, 1737134141.4671428, 1737134141.5957458, 1737134141.7284164, 1737134141.8612394, 1737134141.9916806, 1737134142.1283364, 1737134142.2580552, 1737134142.384767, 1737134142.5215895, 1737134142.6538231, 1737134142.7853367, 1737134142.9227161, 1737134143.050838, 1737134143.186869, 1737134143.3213918, 1737134143.4531498, 1737134143.584447, 1737134143.7182448, 1737134143.8501875, 1737134144.0482957, 1737134144.2335134, 1737134144.3636029, 1737134144.5075736, 1737134144.7409806, 1737134144.89689, 1737134145.0395265, 1737134145.17765, 1737134145.3136098, 1737134145.46008, 1737134145.6034498, 1737134145.74858, 1737134145.9279003, 1737134146.0581613, 1737134146.2044363, 1737134146.3307154, 1737134146.517749, 1737134146.7448757, 1737134146.925214, 1737134147.0607553, 1737134147.1952631, 1737134147.377771, 1737134147.5150595, 1737134147.653353, 1737134147.7940571, 1737134148.0173888, 1737134148.1533327, 1737134148.2992485, 1737134148.426595, 1737134148.5564487, 1737134148.6965337, 1737134148.8327262, 1737134148.9898121, 1737134149.135903, 1737134149.285739, 1737134149.426573, 1737134149.5645733], "score": 0, "output_len": 119, "output": "```python\ndef total_match(lst1, lst2):\n    total_chars_lst1 = sum(len(s) for s in lst1)\n    total_chars_lst2 = sum(len(s) for s in lst2)\n\n    if total_chars_lst1 < total_chars_lst2:\n        return lst2\n    elif total_chars_lst2 < total_chars_lst1:\n        return lst1\n    else:\n        return lst1\n```", "input_len": 248}
{"id": "HumanEval/75", "model_memory": 49092.0, "time_taken": 27.414263486862183, "input_kv_memory": 49372.0, "memory_usage": [49372.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49408.0, 49408.0, 49428.0, 49428.0, 49428.0, 49428.0, 49428.0, 49428.0, 49428.0, 49428.0, 49428.0, 49428.0, 49468.0, 49468.0, 49528.0, 49548.0, 49568.0, 49608.0, 49608.0, 49608.0, 49648.0, 49648.0, 49668.0, 49688.0, 49688.0, 49688.0, 49728.0, 49728.0, 49728.0, 49768.0, 49768.0, 49768.0, 49768.0, 49768.0, 49808.0, 49808.0, 49808.0, 49808.0, 49808.0, 49808.0, 49808.0, 49828.0, 49868.0, 49868.0, 49928.0, 49928.0, 49928.0, 49928.0, 49928.0, 49928.0, 49928.0, 49928.0, 49928.0, 49928.0, 49928.0, 49988.0, 49988.0, 49988.0, 49988.0, 49988.0, 49988.0, 49988.0, 49988.0, 49988.0, 49988.0, 49988.0, 49988.0, 49988.0, 49988.0, 49988.0, 49988.0, 49988.0, 49988.0, 49988.0, 49988.0, 49988.0, 49988.0, 49988.0, 49988.0, 49988.0, 49988.0, 49988.0, 49988.0, 49988.0, 49988.0, 49988.0, 49988.0, 49988.0, 49988.0, 49988.0, 49988.0, 49988.0, 49988.0, 49988.0, 49988.0, 49988.0, 49988.0, 49988.0, 49988.0, 49988.0, 49492.0, 49492.0, 49016.0, 49572.0, 49956.0, 49956.0, 49956.0, 49956.0, 49956.0, 49956.0, 49956.0, 49956.0, 49956.0, 49956.0], "time_metric": [1737134150.019429, 1737134150.1499512, 1737134150.2714498, 1737134150.4005604, 1737134150.5230227, 1737134150.6526356, 1737134150.7830544, 1737134150.9199822, 1737134151.0435295, 1737134151.1676626, 1737134151.302889, 1737134151.4482796, 1737134151.591599, 1737134151.7423124, 1737134151.8896885, 1737134152.0341165, 1737134152.175789, 1737134152.3190525, 1737134152.471658, 1737134152.607494, 1737134152.7798264, 1737134152.9132965, 1737134153.0462334, 1737134153.1960824, 1737134153.3437352, 1737134153.4772515, 1737134153.6258032, 1737134153.7712545, 1737134153.8995402, 1737134154.02604, 1737134154.175369, 1737134154.3242693, 1737134154.457521, 1737134154.587941, 1737134154.7333138, 1737134154.8724244, 1737134155.023727, 1737134155.1704583, 1737134155.304804, 1737134155.450922, 1737134155.5931194, 1737134155.7256298, 1737134155.875512, 1737134156.0142655, 1737134156.166476, 1737134156.3128846, 1737134156.447503, 1737134156.583012, 1737134156.7169044, 1737134156.8627574, 1737134157.0282085, 1737134157.1667109, 1737134157.3209434, 1737134157.4782941, 1737134157.6278975, 1737134157.7734976, 1737134157.9264038, 1737134158.0740979, 1737134158.2193933, 1737134158.3681338, 1737134158.512702, 1737134158.6540346, 1737134158.7965977, 1737134158.9359708, 1737134159.0706227, 1737134159.2185886, 1737134159.4634013, 1737134159.662786, 1737134159.8333566, 1737134159.9971561, 1737134160.1472845, 1737134160.317198, 1737134160.4587379, 1737134160.60397, 1737134160.7432923, 1737134160.9087603, 1737134161.0533502, 1737134161.206447, 1737134161.3448038, 1737134161.495049, 1737134161.6405704, 1737134161.7773519, 1737134161.9200807, 1737134162.0902936, 1737134162.2420335, 1737134162.4159398, 1737134162.5643766, 1737134162.7073112, 1737134162.852759, 1737134162.9974124, 1737134163.1393335, 1737134163.2945166, 1737134163.4422288, 1737134163.6012924, 1737134163.7468257, 1737134163.8990219, 1737134164.0456705, 1737134164.1869745, 1737134164.3286376, 1737134164.473304, 1737134164.6203558, 1737134164.7724376, 1737134164.913362, 1737134165.0568433, 1737134165.224398, 1737134165.367883, 1737134165.5090415, 1737134165.6575754, 1737134165.7997737, 1737134165.9419694, 1737134166.0816596, 1737134166.2133405, 1737134166.3473747, 1737134166.4783297, 1737134166.6181028, 1737134166.760758, 1737134166.9175696, 1737134167.0422013, 1737134167.1795244, 1737134167.317824, 1737134167.4585326, 1737134167.594571, 1737134167.7375364, 1737134167.8706062, 1737134168.011888, 1737134168.153062, 1737134168.291007, 1737134168.4366164, 1737134168.571938, 1737134168.704823, 1737134168.845476, 1737134168.972988, 1737134169.1174054, 1737134169.2509553, 1737134169.3986044, 1737134169.54054, 1737134169.6799698, 1737134169.8208382, 1737134169.96262, 1737134170.101963, 1737134170.2332988, 1737134170.3676038, 1737134170.5038404, 1737134170.6347158, 1737134170.7752774, 1737134170.9181738, 1737134171.0481198, 1737134171.1786842, 1737134171.3122272, 1737134171.4510238, 1737134171.5899994, 1737134171.722043, 1737134171.8605664, 1737134171.9952748, 1737134172.1339114, 1737134172.2656126, 1737134172.3987246, 1737134172.5323634, 1737134172.6725142, 1737134172.8141222, 1737134172.9521666, 1737134173.0911772, 1737134173.2342198, 1737134173.375085, 1737134173.5184007, 1737134173.6576471, 1737134173.7996483, 1737134173.9418938, 1737134174.0811856, 1737134174.2194052, 1737134174.36268, 1737134174.4968665, 1737134174.6386106, 1737134174.7787642, 1737134174.9162273, 1737134175.0560837, 1737134175.192304, 1737134175.326696, 1737134175.5362663, 1737134175.7107377, 1737134175.8523657, 1737134175.996196, 1737134176.1593137, 1737134176.332337, 1737134176.5356274, 1737134176.7273314, 1737134176.868647, 1737134177.0040069, 1737134177.1415498], "score": 0, "output_len": 164, "output": "def is_prime(n):\n    if n <= 1:\n        return False\n    for i in range(2, int(n**0.5) + 1):\n        if n % i == 0:\n            return False\n    return True\n\ndef is_multiply_prime(a):\n    if a <= 1:\n        return False\n    prime_factors = []\n    for i in range(2, a + 1):\n        if a % i == 0 and is_prime(i):\n            prime_factors.append(i)\n            if len(prime_factors) > 3:\n                return False\n    return len(prime_factors) == 3\n", "input_len": 117}
{"id": "HumanEval/76", "model_memory": 49460.0, "time_taken": 8.271745443344116, "input_kv_memory": 49892.0, "memory_usage": [49892.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49460.0, 48980.0, 49020.0, 49600.0, 49740.0, 49740.0, 49740.0, 49740.0, 49740.0, 49740.0, 49740.0, 49740.0, 49740.0, 49740.0], "time_metric": [1737134177.638561, 1737134177.7693686, 1737134177.8954854, 1737134178.0261548, 1737134178.1548104, 1737134178.2832847, 1737134178.4212956, 1737134178.5526867, 1737134178.6772172, 1737134178.8177452, 1737134178.9407253, 1737134179.0820572, 1737134179.2104464, 1737134179.3495095, 1737134179.473117, 1737134179.5945208, 1737134179.724423, 1737134179.8551776, 1737134179.9873416, 1737134180.1160297, 1737134180.2351632, 1737134180.3581862, 1737134180.4905338, 1737134180.6179664, 1737134180.7407732, 1737134180.8608842, 1737134180.9845679, 1737134181.1085331, 1737134181.232372, 1737134181.3589041, 1737134181.4993904, 1737134181.631661, 1737134181.7634702, 1737134181.9010305, 1737134182.0303252, 1737134182.1593082, 1737134182.285172, 1737134182.417873, 1737134182.5433109, 1737134182.683156, 1737134182.8183098, 1737134182.9450488, 1737134183.0871546, 1737134183.219941, 1737134183.356583, 1737134183.4847696, 1737134183.6147738, 1737134183.7504194, 1737134183.8822103, 1737134184.016354, 1737134184.2212656, 1737134184.3651934, 1737134184.499633, 1737134184.6294143, 1737134184.7609088, 1737134184.8971918, 1737134185.0233526, 1737134185.1539028, 1737134185.2925215, 1737134185.4344814, 1737134185.58138], "score": 0, "output_len": 49, "output": "def is_simple_power(x, n):\n    if x == 1:\n        return True\n    power = n\n    while power < x:\n        power *= n\n    return power == x\n", "input_len": 184}
{"id": "HumanEval/77", "model_memory": 49260.0, "time_taken": 5.2297492027282715, "input_kv_memory": 49620.0, "memory_usage": [49620.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49260.0, 48880.0, 49088.0, 50528.0, 51120.0, 51216.0, 51216.0, 51216.0, 51216.0, 51216.0, 51216.0, 51216.0, 51216.0, 51216.0], "time_metric": [1737134186.070584, 1737134186.20514, 1737134186.3294847, 1737134186.4501944, 1737134186.5784166, 1737134186.703984, 1737134186.8305082, 1737134186.9546812, 1737134187.077819, 1737134187.2120311, 1737134187.338045, 1737134187.4654348, 1737134187.598723, 1737134187.7318628, 1737134187.8586426, 1737134187.9952252, 1737134188.1403935, 1737134188.2703898, 1737134188.3982131, 1737134188.5236819, 1737134188.656643, 1737134188.789305, 1737134188.9157526, 1737134189.039628, 1737134189.1670437, 1737134189.2936783, 1737134189.4224389, 1737134189.6741753, 1737134189.8216388, 1737134189.951177, 1737134190.0821652, 1737134190.2050915, 1737134190.3362753, 1737134190.456804, 1737134190.582253, 1737134190.712095, 1737134190.84281, 1737134190.9648807], "score": 0, "output_len": 35, "output": "def iscube(a):\n    cube_root = round(a ** (1/3))\n    return cube_root ** 3 == a\n", "input_len": 152}
{"id": "HumanEval/78", "model_memory": 50836.0, "time_taken": 10.316898345947266, "input_kv_memory": 51908.0, "memory_usagetime_metric": [1737134191.590432, 1737134191.737486, 1737134191.8653796, 1737134191.9887066, 1737134192.113563, 1737134192.2391388, 1737134192.3645017, 1737134192.4905376, 1737134192.6148694, 1737134192.7423012, 1737134192.8686178, 1737134192.9930537, 1737134193.1336932, 1737134193.258404, 1737134193.3880196, 1737134193.5102267, 1737134193.639549, 1737134193.7801447, 1737134193.912752, 1737134194.0423338, 1737134194.1719575, 1737134194.304839, 1737134194.4298613, 1737134194.556885, 1737134194.6809175, 1737134194.8097045, 1737134194.938841, 1737134195.0789826, 1737134195.2112124, 1737134195.335277, 1737134195.4626248, 1737134195.5914934, 1737134195.7337198, 1737134195.867416, 1737134195.997475, 1737134196.1212945, 1737134196.252195, 1737134196.3773868, 1737134196.5100062, 1737134196.6462288, 1737134196.771395, 1737134196.9039445, 1737134197.034373, 1737134197.1647127, 1737134197.2949688, 1737134197.4282966, 1737134197.5504048, 1737134197.6814656, 1737134197.809899, 1737134197.943773, 1737134198.0739625, 1737134198.2096162, 1737134198.3379648, 1737134198.4662008, 1737134198.5927188, 1737134198.7285614, 1737134198.865392, 1737134198.9949045, 1737134199.129211, 1737134199.256394, 1737134199.3870974, 1737134199.522, 1737134199.6557357, 1737134199.7870188, 1737134199.9352682, 1737134200.1353865, 1737134200.2656796, 1737134200.4016168, 1737134200.5315967, 1737134200.6624985, 1737134200.7840774, 1737134200.9185243, 1737134201.047943, 1737134201.1751623, 1737134201.3109293, 1737134201.440289], "score": 0, "output_len": 71, "output": "def hex_key(num):\n    prime_hex_digits = {'2', '3', '5', '7', 'B', 'D'}\n    count = 0\n    for digit in num:\n        if digit in prime_hex_digits:\n            count += 1\n    return count\n", "input_len": 378}
{"id": "HumanEval/79", "model_memory": 49460.0, "time_taken": 11.928064584732056, "input_kv_memory": 49892.0, "memory_usagetime_metric": [1737134201.957801, 1737134202.100447, 1737134202.2261095, 1737134202.3536258, 1737134202.483333, 1737134202.6177835, 1737134202.74511, 1737134202.8713164, 1737134203.0036056, 1737134203.129023, 1737134203.2588408, 1737134203.3844013, 1737134203.5114272, 1737134203.6397462, 1737134203.7769556, 1737134203.921814, 1737134204.050105, 1737134204.1770344, 1737134204.3078458, 1737134204.4333138, 1737134204.5619845, 1737134204.6910768, 1737134204.8194752, 1737134204.9456882, 1737134205.071923, 1737134205.2048512, 1737134205.3354304, 1737134205.463208, 1737134205.5891771, 1737134205.7326674, 1737134205.8565428, 1737134206.0015013, 1737134206.1289992, 1737134206.259722, 1737134206.3848836, 1737134206.5223, 1737134206.668337, 1737134206.793823, 1737134206.9173634, 1737134207.0533662, 1737134207.1821537, 1737134207.3079221, 1737134207.442105, 1737134207.5708914, 1737134207.6987197, 1737134207.822111, 1737134207.9533255, 1737134208.0810273, 1737134208.212806, 1737134208.344551, 1737134208.473213, 1737134208.598619, 1737134208.7271307, 1737134208.8687053, 1737134209.0000784, 1737134209.133413, 1737134209.2632484, 1737134209.39579, 1737134209.562876, 1737134209.706159, 1737134209.8368237, 1737134209.9614024, 1737134210.0869856, 1737134210.213223, 1737134210.3408482, 1737134210.4643223, 1737134210.5889812, 1737134210.723685, 1737134210.8563788, 1737134210.980733, 1737134211.126475, 1737134211.259727, 1737134211.387519, 1737134211.5264027, 1737134211.6525464, 1737134211.7833204, 1737134211.9303124, 1737134212.0619524, 1737134212.2030473, 1737134212.3365788, 1737134212.474742, 1737134212.6058502, 1737134212.7426999, 1737134212.872862, 1737134213.000668, 1737134213.1337187, 1737134213.2609026, 1737134213.395752, 1737134213.5334618], "score": 0, "output_len": 89, "output": "def decimal_to_binary(decimal):\n    if decimal == 0:\n        return \"db0db\"\n    binary_str = \"\"\n    while decimal > 0:\n        remainder = decimal % 2\n        binary_str = str(remainder) + binary_str\n        decimal = decimal // 2\n    return \"db\" + binary_str + \"db\"\n", "input_len": 188}
{"id": "HumanEval/80", "model_memory": 49260.0, "time_taken": 12.424179792404175, "input_kv_memory": 49640.0, "memory_usage": [49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 48880.0, 48880.0, 49042.0, 50464.0, 50608.0, 50608.0, 50608.0, 50608.0, 50608.0, 50608.0, 50608.0, 50608.0, 50608.0], "time_metric": [1737134214.0329971, 1737134214.1755881, 1737134214.3028052, 1737134214.4276235, 1737134214.5489297, 1737134214.6755095, 1737134214.8105912, 1737134214.9346006, 1737134215.0560691, 1737134215.1788461, 1737134215.2988713, 1737134215.4266934, 1737134215.551142, 1737134215.6792505, 1737134215.8113782, 1737134215.932017, 1737134216.054174, 1737134216.1942787, 1737134216.3191237, 1737134216.4460547, 1737134216.5713859, 1737134216.6960654, 1737134216.8202775, 1737134216.94869, 1737134217.078511, 1737134217.201772, 1737134217.3298979, 1737134217.4563916, 1737134217.585443, 1737134217.705253, 1737134217.844881, 1737134217.9817097, 1737134218.1299455, 1737134218.2796726, 1737134218.4198215, 1737134218.553477, 1737134218.6804066, 1737134218.8268955, 1737134218.9527977, 1737134219.085913, 1737134219.2132866, 1737134219.3372867, 1737134219.460001, 1737134219.5861745, 1737134219.715861, 1737134219.8397832, 1737134219.9681022, 1737134220.0895448, 1737134220.2111962, 1737134220.3378944, 1737134220.4651215, 1737134220.598235, 1737134220.732587, 1737134220.8745975, 1737134221.0145676, 1737134221.1473749, 1737134221.284704, 1737134221.4130225, 1737134221.541183, 1737134221.66858, 1737134221.7931843, 1737134221.9240758, 1737134222.0646405, 1737134222.1962955, 1737134222.357068, 1737134222.4869728, 1737134222.6137962, 1737134222.7454133, 1737134222.8829014, 1737134223.0218532, 1737134223.1572018, 1737134223.2919352, 1737134223.4223459, 1737134223.5615416, 1737134223.694519, 1737134223.829225, 1737134223.9593453, 1737134224.0870657, 1737134224.2133405, 1737134224.3427627, 1737134224.471105, 1737134224.6024854, 1737134224.9272478, 1737134225.0609272, 1737134225.1923127, 1737134225.323499, 1737134225.459983, 1737134225.5879824, 1737134225.7329955, 1737134225.865733, 1737134225.9877095, 1737134226.1166956], "score": 0, "output_len": 88, "output": "def is_happy(s):\n    if len(s) < 3:\n        return False\n    for i in range(len(s) - 2):\n        if s[i] == s[i+1] or s[i+1] == s[i+2] or s[i] == s[i+2]:\n            return False\n    return True\n", "input_len": 162}
{"id": "HumanEval/81", "model_memory": 50228.0, "time_taken": 52.9275803565979, "input_kv_memory": 51012.0, "memory_usagetime_metric": [1737134226.759638, 1737134226.8941398, 1737134227.013363, 1737134227.14984, 1737134227.276766, 1737134227.4063022, 1737134227.5364542, 1737134227.6656833, 1737134227.7967327, 1737134227.9298632, 1737134228.0581357, 1737134228.188879, 1737134228.3212726, 1737134228.4478846, 1737134228.57729, 1737134228.7033057, 1737134228.8463938, 1737134228.9739816, 1737134229.1041358, 1737134229.2302635, 1737134229.3695657, 1737134229.5084248, 1737134229.6396356, 1737134229.7734814, 1737134229.9004235, 1737134230.026017, 1737134230.1547475, 1737134230.2761931, 1737134230.40867, 1737134230.5501337, 1737134230.7472339, 1737134230.9017477, 1737134231.033181, 1737134231.1691813, 1737134231.2920458, 1737134231.422327, 1737134231.550315, 1737134231.676551, 1737134231.8067853, 1737134231.9329748, 1737134232.0591347, 1737134232.1930447, 1737134232.3183372, 1737134232.442106, 1737134232.587101, 1737134232.713348, 1737134232.8444133, 1737134232.9745338, 1737134233.106425, 1737134233.2390182, 1737134233.3630788, 1737134233.4995317, 1737134233.6302938, 1737134233.757513, 1737134233.88629, 1737134234.0108092, 1737134234.1410003, 1737134234.2733831, 1737134234.3987772, 1737134234.5370772, 1737134234.6728415, 1737134234.7962565, 1737134234.9392946, 1737134235.0662398, 1737134235.1998112, 1737134235.3350163, 1737134235.4626298, 1737134235.5989394, 1737134235.7261353, 1737134235.8586125, 1737134235.9864402, 1737134236.1211154, 1737134236.246018, 1737134236.3800187, 1737134236.5203943, 1737134236.6636744, 1737134236.7961447, 1737134236.9401047, 1737134237.0688653, 1737134237.203529, 1737134237.3327177, 1737134237.4660988, 1737134237.6002314, 1737134237.7297876, 1737134237.858016, 1737134237.9837642, 1737134238.1210675, 1737134238.2523258, 1737134238.3896506, 1737134238.518739, 1737134238.6462376, 1737134238.779009, 1737134238.9100957, 1737134239.040267, 1737134239.1743884, 1737134239.3143332, 1737134239.4430292, 1737134239.579103, 1737134239.716406, 1737134239.8487, 1737134239.9782865, 1737134240.107828, 1737134240.2418652, 1737134240.3802598, 1737134240.510171, 1737134240.647903, 1737134240.793984, 1737134240.9250488, 1737134241.0771604, 1737134241.238085, 1737134241.3760383, 1737134241.517088, 1737134241.6652074, 1737134241.801993, 1737134241.9456801, 1737134242.0829859, 1737134242.21282, 1737134242.346022, 1737134242.480887, 1737134242.6207252, 1737134242.7656808, 1737134242.9008496, 1737134243.0395095, 1737134243.1718822, 1737134243.3128011, 1737134243.4528434, 1737134243.599376, 1737134243.7658124, 1737134243.8979747, 1737134244.028822, 1737134244.1700752, 1737134244.3104959, 1737134244.4489682, 1737134244.5855584, 1737134244.721296, 1737134244.85481, 1737134244.9942124, 1737134245.134186, 1737134245.2670565, 1737134245.4106514, 1737134245.5472898, 1737134245.677602, 1737134245.8115213, 1737134245.9414105, 1737134246.0721145, 1737134246.212671, 1737134246.3511465, 1737134246.4895594, 1737134246.626887, 1737134246.7709954, 1737134246.904194, 1737134247.043005, 1737134247.1840096, 1737134247.3221016, 1737134247.454964, 1737134247.5953605, 1737134247.7294471, 1737134247.8664267, 1737134248.0249019, 1737134248.1670113, 1737134248.298856, 1737134248.4330235, 1737134248.5736275, 1737134248.7167466, 1737134248.855289, 1737134249.0017996, 1737134249.145953, 1737134249.2841496, 1737134249.4195826, 1737134249.558696, 1737134249.7042954, 1737134249.844088, 1737134249.9804366, 1737134250.1116076, 1737134250.2436697, 1737134250.3907127, 1737134250.5271752, 1737134250.6705406, 1737134250.808718, 1737134250.9507773, 1737134251.0896676, 1737134251.2213466, 1737134251.360274, 1737134251.4945848, 1737134251.6336718, 1737134251.7731793, 1737134251.9071836, 1737134252.0804877, 1737134252.327205, 1737134252.5434694, 1737134252.672973, 1737134252.8049552, 1737134253.0099993, 1737134253.1754885, 1737134253.32269, 1737134253.4674528, 1737134253.5997963, 1737134253.744158, 1737134253.9592223, 1737134254.1276433, 1737134254.274252, 1737134254.4071486, 1737134254.550139, 1737134254.691601, 1737134254.8466792, 1737134254.99449, 1737134255.137583, 1737134255.2799075, 1737134255.421225, 1737134255.562827, 1737134255.725918, 1737134255.8646762, 1737134256.0030997, 1737134256.1371017, 1737134256.278507, 1737134256.4223623, 1737134256.5615456, 1737134256.710217, 1737134256.8521876, 1737134256.9860053, 1737134257.1295853, 1737134257.2647212, 1737134257.4088888, 1737134257.5460277, 1737134257.6840508, 1737134257.828821, 1737134257.969176, 1737134258.112713, 1737134258.2564108, 1737134258.4151285, 1737134258.5515604, 1737134258.6977594, 1737134258.8520234, 1737134259.0137126, 1737134259.1591103, 1737134259.300766, 1737134259.4391787, 1737134259.5795228, 1737134259.720871, 1737134259.8619883, 1737134260.0134935, 1737134260.1920443, 1737134260.3427436, 1737134260.484656, 1737134260.662709, 1737134260.8969042, 1737134261.0375185, 1737134261.1814113, 1737134261.3204324, 1737134261.467171, 1737134261.6100495, 1737134261.7521632, 1737134261.894472, 1737134262.0448866, 1737134262.1924584, 1737134262.331538, 1737134262.4839103, 1737134262.6302505, 1737134262.774271, 1737134262.9159298, 1737134263.0544415, 1737134263.196346, 1737134263.346238, 1737134263.487116, 1737134263.637622, 1737134263.7814617, 1737134263.931657, 1737134264.0815725, 1737134264.2261577, 1737134264.3676326, 1737134264.5232482, 1737134264.6666899, 1737134264.8231814, 1737134264.9698982, 1737134265.1227746, 1737134265.270247, 1737134265.4078033, 1737134265.5501742, 1737134265.6986575, 1737134265.8412693, 1737134265.9932601, 1737134266.1345227, 1737134266.2759373, 1737134266.4258752, 1737134266.5929055, 1737134266.7393425, 1737134266.879657, 1737134267.0316331, 1737134267.172503, 1737134267.322674, 1737134267.4655173, 1737134267.6235762, 1737134267.7698624, 1737134267.9162288, 1737134268.0637574, 1737134268.2084675, 1737134268.3507261, 1737134268.4983878, 1737134268.6421008, 1737134268.7898126, 1737134268.9400136, 1737134269.0869079, 1737134269.2313075, 1737134269.3857205, 1737134269.5301843, 1737134269.6752052, 1737134269.8280125, 1737134269.9739149, 1737134270.1325123, 1737134270.2761862, 1737134270.4201682, 1737134270.5615277, 1737134270.7091622, 1737134270.855903, 1737134271.009993, 1737134271.1544409, 1737134271.2965384, 1737134271.4474044, 1737134271.5949452, 1737134271.7472343, 1737134271.891614, 1737134272.0443223, 1737134272.1961792, 1737134272.34782, 1737134272.4942427, 1737134272.6361563, 1737134272.7872028, 1737134272.9371014, 1737134273.0820472, 1737134273.236917, 1737134273.3804054, 1737134273.52404, 1737134273.6743484, 1737134273.8275807, 1737134273.9767275, 1737134274.122095, 1737134274.2708828, 1737134274.4216316, 1737134274.564412, 1737134274.7170959, 1737134274.867125, 1737134275.0059288, 1737134275.1552145, 1737134275.3041155, 1737134275.451426, 1737134275.6102576, 1737134275.764565, 1737134275.916098, 1737134276.0618775, 1737134276.2117646, 1737134276.361716, 1737134276.5063162, 1737134276.6568668, 1737134276.809612, 1737134276.9542024, 1737134277.143682, 1737134277.295684, 1737134277.5165203, 1737134277.707881, 1737134277.8554265, 1737134278.026117, 1737134278.2081575, 1737134278.361263, 1737134278.5188217, 1737134278.6923535, 1737134278.8559136, 1737134279.0102525, 1737134279.1591306], "score": 0, "output_len": 368, "output": "def numerical_letter_grade(grades):\n    letter_grades = []\n    for grade in grades:\n        if grade == 4.0:\n            letter_grades.append('A+')\n        elif grade > 3.7:\n            letter_grades.append('A')\n        elif grade > 3.3:\n            letter_grades.append('A-')\n        elif grade > 3.0:\n            letter_grades.append('B+')\n        elif grade > 2.7:\n            letter_grades.append('B')\n        elif grade > 2.3:\n            letter_grades.append('B-')\n        elif grade > 2.0:\n            letter_grades.append('C+')\n        elif grade > 1.7:\n            letter_grades.append('C')\n        elif grade > 1.3:\n            letter_grades.append('C-')\n        elif grade > 1.0:\n            letter_grades.append('D+')\n        elif grade > 0.7:\n            letter_grades.append('D')\n        elif grade > 0.0:\n            letter_grades.append('D-')\n        else:\n            letter_grades.append('E')\n    return letter_grades\n\n# Example usage:\nprint(numerical_letter_grade([4.0, 3, 1.7, 2, 3.5]))  # Output: ['A+', 'B', 'C-', 'C', 'A-']\n", "input_len": 324}
{"id": "HumanEval/82", "model_memory": 49092.0, "time_taken": 19.183502197265625, "input_kv_memory": 49372.0, "memory_usage": [49372.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49408.0, 49428.0, 49428.0, 49428.0, 49468.0, 49468.0, 49508.0, 49508.0, 49508.0, 49508.0, 49508.0, 49508.0, 49508.0, 49508.0, 49508.0, 49528.0, 49588.0, 49608.0, 49648.0, 49648.0, 49688.0, 49688.0, 49688.0, 49688.0, 49688.0, 49688.0, 49688.0, 49688.0, 49688.0, 49688.0, 49688.0, 49748.0, 49748.0, 49748.0, 49748.0, 49748.0, 49748.0, 49748.0, 49748.0, 49748.0, 49748.0, 49748.0, 49768.0, 49788.0, 49788.0, 49788.0, 49788.0, 49788.0, 49788.0, 49788.0, 49788.0, 49788.0, 49788.0, 49788.0, 49788.0, 49788.0, 49788.0, 49808.0, 49808.0, 49808.0, 49808.0, 49808.0, 49808.0, 49808.0, 49808.0, 49808.0, 49808.0, 49808.0, 49808.0, 49808.0, 49808.0, 49848.0, 49908.0, 49928.0, 49928.0, 49928.0, 49928.0, 49928.0, 49832.0, 49432.0, 48942.0, 49126.0, 49314.0, 49356.0, 49362.0, 49362.0, 49402.0, 49422.0, 49422.0, 49422.0, 49422.0, 49422.0, 49422.0, 49422.0], "time_metric": [1737134279.6640038, 1737134279.8151288, 1737134279.9453957, 1737134280.0686228, 1737134280.2047431, 1737134280.3281925, 1737134280.4489567, 1737134280.5694327, 1737134280.6894236, 1737134280.8121603, 1737134280.9450214, 1737134281.0742166, 1737134281.2047613, 1737134281.3329813, 1737134281.4579296, 1737134281.5933194, 1737134281.7273595, 1737134281.8585725, 1737134281.9816704, 1737134282.1141813, 1737134282.2512558, 1737134282.382097, 1737134282.5066555, 1737134282.6264436, 1737134282.7477586, 1737134282.876347, 1737134283.0050793, 1737134283.1367881, 1737134283.2614796, 1737134283.3921723, 1737134283.5133417, 1737134283.6457884, 1737134283.7836308, 1737134283.9054477, 1737134284.0273352, 1737134284.1546261, 1737134284.2804742, 1737134284.4079475, 1737134284.532438, 1737134284.658324, 1737134284.7831476, 1737134284.9091363, 1737134285.042727, 1737134285.172649, 1737134285.3010855, 1737134285.425643, 1737134285.565592, 1737134285.6929352, 1737134285.8199346, 1737134286.0129218, 1737134286.1787548, 1737134286.3089364, 1737134286.4408784, 1737134286.5693908, 1737134286.6960087, 1737134286.8240712, 1737134286.9540231, 1737134287.0869095, 1737134287.2158127, 1737134287.3486857, 1737134287.4804084, 1737134287.613176, 1737134287.747923, 1737134287.8931754, 1737134288.0223145, 1737134288.1550663, 1737134288.29728, 1737134288.4331696, 1737134288.5573003, 1737134288.6899555, 1737134288.8156345, 1737134288.9469392, 1737134289.0804362, 1737134289.2154357, 1737134289.3424976, 1737134289.473107, 1737134289.6046576, 1737134289.7425854, 1737134289.867954, 1737134290.001973, 1737134290.165929, 1737134290.3069599, 1737134290.4421244, 1737134290.5785835, 1737134290.713817, 1737134290.85085, 1737134290.9861531, 1737134291.1201544, 1737134291.2547019, 1737134291.3874726, 1737134291.5292695, 1737134291.6814275, 1737134291.818451, 1737134291.9502707, 1737134292.0809672, 1737134292.221263, 1737134292.3624287, 1737134292.4921715, 1737134292.6214607, 1737134292.7581577, 1737134292.8893788, 1737134293.022274, 1737134293.21151, 1737134293.3423562, 1737134293.4819655, 1737134293.6124089, 1737134293.7469482, 1737134293.961074, 1737134294.0959644, 1737134294.2282712, 1737134294.362107, 1737134294.502055, 1737134294.6362493, 1737134294.7826548, 1737134294.9216814, 1737134295.0644858, 1737134295.2016954, 1737134295.394392, 1737134295.5373263, 1737134295.6791558, 1737134295.8107572, 1737134295.9403028, 1737134296.0728106, 1737134296.2147834, 1737134296.3561323, 1737134296.5111392, 1737134296.6658196, 1737134296.809509, 1737134297.0032434, 1737134297.1592605, 1737134297.3066816, 1737134297.4744725, 1737134297.6243768, 1737134297.7632427, 1737134297.8955772, 1737134298.0264843, 1737134298.1611166, 1737134298.3043106, 1737134298.4366813, 1737134298.5686116], "score": 0, "output_len": 140, "output": "def is_prime(n):\n    if n <= 1:\n        return False\n    for i in range(2, int(n**0.5) + 1):\n        if n % i == 0:\n            return False\n    return True\n\ndef prime_length(string):\n    return is_prime(len(string))\n\n# Example usage:\nprint(prime_length('Hello'))  # True\nprint(prime_length('abcdcba'))  # True\nprint(prime_length('kittens'))  # True\nprint(prime_length('orange'))  # False\n", "input_len": 115}
{"id": "HumanEval/83", "model_memory": 48926.0, "time_taken": 9.692635297775269, "input_kv_memory": 49096.0, "memory_usage": [49096.0, 49134.0, 49138.0, 49138.0, 49138.0, 49138.0, 49138.0, 49138.0, 49138.0, 49138.0, 49138.0, 49138.0, 49138.0, 49138.0, 49138.0, 49138.0, 49138.0, 49138.0, 49138.0, 49138.0, 49138.0, 49138.0, 49138.0, 49138.0, 49138.0, 49138.0, 49138.0, 49138.0, 49138.0, 49158.0, 49158.0, 49178.0, 49178.0, 49178.0, 49178.0, 49178.0, 49218.0, 49238.0, 49258.0, 49258.0, 49258.0, 49258.0, 49258.0, 49258.0, 49258.0, 49278.0, 49278.0, 49278.0, 49278.0, 49278.0, 49278.0, 49318.0, 49378.0, 49398.0, 49398.0, 49398.0, 49398.0, 49086.0, 48774.0, 48936.0, 49416.0, 49732.0, 49732.0, 49732.0, 49732.0, 49732.0, 49732.0, 49772.0, 49772.0, 49772.0, 49772.0, 49772.0, 49772.0], "time_metric": [1737134299.0107791, 1737134299.141801, 1737134299.2655888, 1737134299.3990536, 1737134299.5257394, 1737134299.6575992, 1737134299.7884119, 1737134299.9138925, 1737134300.0456016, 1737134300.1780686, 1737134300.30954, 1737134300.4330328, 1737134300.56465, 1737134300.6955113, 1737134300.834917, 1737134300.9662194, 1737134301.0982518, 1737134301.2224035, 1737134301.3474898, 1737134301.4628024, 1737134301.593319, 1737134301.7136502, 1737134301.8444057, 1737134301.9654312, 1737134302.0850797, 1737134302.218161, 1737134302.3416498, 1737134302.472631, 1737134302.6014194, 1737134302.727504, 1737134302.8529387, 1737134302.9867322, 1737134303.115456, 1737134303.2378225, 1737134303.3595579, 1737134303.480104, 1737134303.6072564, 1737134303.7830117, 1737134303.9235175, 1737134304.0573378, 1737134304.185075, 1737134304.3057034, 1737134304.435082, 1737134304.563202, 1737134304.6885583, 1737134304.8208141, 1737134304.9472535, 1737134305.0781734, 1737134305.2120225, 1737134305.3337111, 1737134305.4639184, 1737134305.5940666, 1737134305.7284818, 1737134305.858282, 1737134305.9813743, 1737134306.1143095, 1737134306.245192, 1737134306.3737068, 1737134306.504235, 1737134306.6361563, 1737134306.7904947, 1737134306.950413, 1737134307.1002605, 1737134307.2301285, 1737134307.359628, 1737134307.4921398, 1737134307.61588, 1737134307.7448199, 1737134307.8751714, 1737134308.0122237, 1737134308.1495054, 1737134308.2962933, 1737134308.4285126], "score": 0, "output_len": 70, "output": "def starts_one_ends(n):\n    count = 0\n    for i in range(10**(n-1), 10**n):\n        if str(i).startswith('1') or str(i).endswith('1'):\n            count += 1\n    return count\n", "input_len": 74}
{"id": "HumanEval/84", "model_memory": 49460.0, "time_taken": 19.512935638427734, "input_kv_memory": 49892.0, "memory_usagetime_metric": [1737134308.9592993, 1737134309.1014194, 1737134309.224157, 1737134309.3470726, 1737134309.4686337, 1737134309.6037905, 1737134309.729789, 1737134309.8517234, 1737134309.9769282, 1737134310.1084774, 1737134310.2337058, 1737134310.3547952, 1737134310.4859698, 1737134310.6183655, 1737134310.7624114, 1737134310.8902123, 1737134311.0221334, 1737134311.1591635, 1737134311.2972205, 1737134311.4513404, 1737134311.5931835, 1737134311.7484746, 1737134311.8849337, 1737134312.0255167, 1737134312.1593804, 1737134312.3048859, 1737134312.4645202, 1737134312.607643, 1737134312.7453003, 1737134312.8878992, 1737134313.0252204, 1737134313.1543427, 1737134313.2917335, 1737134313.4260798, 1737134313.5564103, 1737134313.7058446, 1737134313.841466, 1737134313.9790747, 1737134314.1312828, 1737134314.2724535, 1737134314.4108229, 1737134314.5447514, 1737134314.6874688, 1737134314.8275428, 1737134314.9819095, 1737134315.1288354, 1737134315.2686896, 1737134315.4304295, 1737134315.5725336, 1737134315.7142286, 1737134315.8569276, 1737134316.002285, 1737134316.1489966, 1737134316.2916698, 1737134316.4455125, 1737134316.58046, 1737134316.7171881, 1737134316.849186, 1737134316.9930186, 1737134317.1430283, 1737134317.2833073, 1737134317.4356644, 1737134317.575948, 1737134317.7208064, 1737134317.8685164, 1737134318.0094461, 1737134318.1488369, 1737134318.300172, 1737134318.4426775, 1737134318.5838406, 1737134318.7232645, 1737134318.8651128, 1737134319.0058012, 1737134319.149853, 1737134319.3005803, 1737134319.4400032, 1737134319.5787952, 1737134319.7191432, 1737134319.9087121, 1737134320.125904, 1737134320.265864, 1737134320.3989048, 1737134320.5740232, 1737134320.7133024, 1737134320.8919547, 1737134321.0245707, 1737134321.2113085, 1737134321.378046, 1737134321.5108666, 1737134321.6458404, 1737134321.7888706, 1737134321.9289112, 1737134322.0664418, 1737134322.1999755, 1737134322.3537912, 1737134322.5051556, 1737134322.6544898, 1737134322.8066802, 1737134322.9414015, 1737134323.0751576, 1737134323.2414188, 1737134323.3728223, 1737134323.5612323, 1737134323.6995351, 1737134323.8366508, 1737134324.0367863, 1737134324.1642423, 1737134324.3070827, 1737134324.5191, 1737134324.7318444, 1737134324.8924155, 1737134325.029961, 1737134325.2229648, 1737134325.3536782, 1737134325.494485, 1737134325.6369958, 1737134325.8394387, 1737134326.0333714, 1737134326.1684723, 1737134326.3072295, 1737134326.5106516, 1737134326.674076, 1737134326.8145492, 1737134326.9571404, 1737134327.099392, 1737134327.2333357, 1737134327.3808553, 1737134327.5323095, 1737134327.670018, 1737134327.8145335, 1737134327.962186, 1737134328.1049485], "score": 0, "output_len": 37, "output": "def solve(N):\n    total_sum = sum(int(digit) for digit in str(N))\n    return bin(total_sum)[2:]\n", "input_len": 187}
{"id": "HumanEval/85", "model_memory": 48924.0, "time_taken": 9.91786527633667, "input_kv_memory": 49124.0, "memory_usagetime_metric": [1737134328.5376186, 1737134328.668468, 1737134328.7905529, 1737134328.9113653, 1737134329.0313756, 1737134329.171715, 1737134329.311777, 1737134329.476986, 1737134329.6177423, 1737134329.745275, 1737134329.8679008, 1737134330.0132234, 1737134330.1774995, 1737134330.3086262, 1737134330.458163, 1737134330.5995095, 1737134330.7732198, 1737134330.929395, 1737134331.0668738, 1737134331.1962957, 1737134331.319817, 1737134331.4458683, 1737134331.5882754, 1737134331.7208817, 1737134331.8615468, 1737134331.9886816, 1737134332.1260026, 1737134332.2628777, 1737134332.3915203, 1737134332.5171275, 1737134332.6418915, 1737134332.7857516, 1737134332.9090612, 1737134333.0427082, 1737134333.170432, 1737134333.296163, 1737134333.4251542, 1737134333.5470366, 1737134333.6909442, 1737134333.8219295, 1737134333.9567816, 1737134334.0905142, 1737134334.2223196, 1737134334.3539028, 1737134334.4856296, 1737134334.6139135, 1737134334.73701, 1737134334.8737724, 1737134335.0039365, 1737134335.1372578, 1737134335.2714014, 1737134335.4002438, 1737134335.534515, 1737134335.6612997, 1737134335.7951717, 1737134335.9277112, 1737134336.068225, 1737134336.2083988, 1737134336.3382816, 1737134336.4691787, 1737134336.6030283, 1737134336.814729, 1737134336.9814613, 1737134337.1204524, 1737134337.255836, 1737134337.3869746, 1737134337.519756, 1737134337.6493828, 1737134337.7793438, 1737134337.9097474, 1737134338.0469692, 1737134338.189703], "score": 0, "output_len": 70, "output": "def add(lst):\n    return sum(lst[i] for i in range(1, len(lst), 2) if lst[i] % 2 == 0)\n\n# Example usage:\nprint(add([4, 2, 6, 7]))  # Output: 2\n", "input_len": 87}
{"id": "HumanEval/86", "model_memory": 49512.0, "time_taken": 6.891672849655151, "input_kv_memory": 49974.0, "memory_usage": [49974.0, 50018.0, 50018.0, 50018.0, 50018.0, 50018.0, 50018.0, 50018.0, 50018.0, 50018.0, 50018.0, 50018.0, 50018.0, 50018.0, 50018.0, 50018.0, 50018.0, 50018.0, 50018.0, 50018.0, 50018.0, 50018.0, 50018.0, 50018.0, 50018.0, 50018.0, 50018.0, 50018.0, 50018.0, 50018.0, 50018.0, 50018.0, 50018.0, 50018.0, 50018.0, 50018.0, 50018.0, 49108.0, 49006.0, 50018.0, 50742.0, 50782.0, 50782.0, 50782.0, 50782.0, 50782.0, 50782.0, 50782.0, 50782.0, 50782.0], "time_metric": [1737134338.6675236, 1737134338.8025382, 1737134338.9356124, 1737134339.100121, 1737134339.2284687, 1737134339.3632648, 1737134339.48157, 1737134339.6101463, 1737134339.7385118, 1737134339.8646371, 1737134339.985689, 1737134340.1161172, 1737134340.2464898, 1737134340.3725872, 1737134340.5042043, 1737134340.6303668, 1737134340.7578866, 1737134340.8897195, 1737134341.017583, 1737134341.1592038, 1737134341.2869651, 1737134341.4150004, 1737134341.5468872, 1737134341.672472, 1737134341.7966268, 1737134341.9183934, 1737134342.043462, 1737134342.1723585, 1737134342.302665, 1737134342.4321442, 1737134342.5728924, 1737134342.695852, 1737134342.8181086, 1737134342.943352, 1737134343.0774481, 1737134343.2035336, 1737134343.335781, 1737134343.4675627, 1737134343.594722, 1737134343.8459332, 1737134344.0369213, 1737134344.1853032, 1737134344.3371348, 1737134344.4673798, 1737134344.5927358, 1737134344.7125554, 1737134344.841572, 1737134344.976633, 1737134345.1075134, 1737134345.2356606], "score": 0, "output_len": 48, "output": "def anti_shuffle(s):\n    words = s.split()\n    ordered_words = [''.join(sorted(word)) for word in words]\n    return ' '.join(ordered_words)\n", "input_len": 177}
{"id": "HumanEval/87", "model_memory": 50276.0, "time_taken": 10.330069065093994, "input_kv_memory": 51084.0, "memory_usagetime_metric": [1737134345.8426697, 1737134346.0265477, 1737134346.1537747, 1737134346.282348, 1737134346.4185147, 1737134346.545277, 1737134346.6672492, 1737134346.8013458, 1737134346.9396036, 1737134347.067794, 1737134347.199657, 1737134347.3217397, 1737134347.445187, 1737134347.5707893, 1737134347.6960812, 1737134347.8217237, 1737134347.9504027, 1737134348.0747974, 1737134348.2026498, 1737134348.3300483, 1737134348.4526887, 1737134348.578408, 1737134348.7021182, 1737134348.8211198, 1737134348.943325, 1737134349.0725412, 1737134349.2091522, 1737134349.3467925, 1737134349.4846847, 1737134349.6171086, 1737134349.7595172, 1737134349.9000742, 1737134350.0336733, 1737134350.1620562, 1737134350.3047426, 1737134350.4374201, 1737134350.568222, 1737134350.7060103, 1737134350.8502853, 1737134350.9788423, 1737134351.111084, 1737134351.24492, 1737134351.3856401, 1737134351.513297, 1737134351.643842, 1737134351.7681985, 1737134351.8978832, 1737134352.025862, 1737134352.1569166, 1737134352.2983642, 1737134352.4215496, 1737134352.5552492, 1737134352.6912527, 1737134352.8227594, 1737134352.961298, 1737134353.0947647, 1737134353.2176883, 1737134353.3448985, 1737134353.4731023, 1737134353.5987709, 1737134353.74843, 1737134353.9372308, 1737134354.0734754, 1737134354.339115, 1737134354.4788547, 1737134354.6458638, 1737134354.7916324, 1737134354.9273999, 1737134355.0604064, 1737134355.1884272, 1737134355.3120763, 1737134355.4401913, 1737134355.5822394, 1737134355.7192025], "score": 0, "output_len": 73, "output": "def get_row(lst, x):\n    result = []\n    for row_index, row in enumerate(lst):\n        for col_index, element in reversed(list(enumerate(row))):\n            if element == x:\n                result.append((row_index, col_index))\n    return result\n", "input_len": 311}
{"id": "HumanEval/88", "model_memory": 49940.0, "time_taken": 11.852780103683472, "input_kv_memory": 50596.0, "memory_usagetime_metric": [1737134356.2559, 1737134356.4183702, 1737134356.5828602, 1737134356.7410595, 1737134356.866026, 1737134357.0022762, 1737134357.1294317, 1737134357.2649956, 1737134357.4061341, 1737134357.5387776, 1737134357.6939366, 1737134357.8196633, 1737134357.9522007, 1737134358.0760713, 1737134358.2048879, 1737134358.3376048, 1737134358.467078, 1737134358.5886538, 1737134358.7125194, 1737134358.8470197, 1737134358.986359, 1737134359.134352, 1737134359.2656837, 1737134359.3947237, 1737134359.5227873, 1737134359.649534, 1737134359.7841494, 1737134359.913158, 1737134360.0387344, 1737134360.1781812, 1737134360.304973, 1737134360.4389002, 1737134360.5706742, 1737134360.701608, 1737134360.829219, 1737134360.9627392, 1737134361.0874572, 1737134361.2184837, 1737134361.3584116, 1737134361.4892862, 1737134361.6300957, 1737134361.7639887, 1737134361.8930578, 1737134362.0265331, 1737134362.1571338, 1737134362.2871547, 1737134362.410864, 1737134362.5465508, 1737134362.675458, 1737134362.809209, 1737134362.9425886, 1737134363.0741353, 1737134363.2060306, 1737134363.3419018, 1737134363.4764643, 1737134363.606687, 1737134363.7510028, 1737134363.8912752, 1737134364.0183506, 1737134364.1489117, 1737134364.288225, 1737134364.4159453, 1737134364.5466714, 1737134364.6747692, 1737134364.8077536, 1737134364.9374597, 1737134365.0694478, 1737134365.2007556, 1737134365.3306894, 1737134365.4621613, 1737134365.6321318, 1737134365.7694738, 1737134365.901752, 1737134366.1741753, 1737134366.3410149, 1737134366.4848127, 1737134366.618334, 1737134366.7483408, 1737134366.875478, 1737134367.000264, 1737134367.1331003, 1737134367.2998605, 1737134367.4685583, 1737134367.5981355, 1737134367.72954], "score": 0, "output_len": 84, "output": "def sort_array(array):\n    if not array:\n        return []\n\n    sorted_array = sorted(array)\n    sum_first_last = array[0] + array[-1]\n\n    if sum_first_last % 2 == 0:\n        return sorted_array[::-1]\n    else:\n        return sorted_array\n", "input_len": 251}
{"id": "HumanEval/89", "model_memory": 49260.0, "time_taken": 16.100576877593994, "input_kv_memory": 49620.0, "memory_usagetime_metric": [1737134368.2012942, 1737134368.3337524, 1737134368.4623384, 1737134368.5840654, 1737134368.7168512, 1737134368.8381171, 1737134368.9576967, 1737134369.0897646, 1737134369.2246926, 1737134369.3511593, 1737134369.4794254, 1737134369.6069803, 1737134369.7340949, 1737134369.8548267, 1737134369.9827495, 1737134370.1106484, 1737134370.2363265, 1737134370.3592553, 1737134370.4814432, 1737134370.600309, 1737134370.7177758, 1737134370.8445857, 1737134370.9771812, 1737134371.1090322, 1737134371.2436519, 1737134371.3728092, 1737134371.5066898, 1737134371.6409795, 1737134371.7672205, 1737134371.8978474, 1737134372.0218916, 1737134372.1432054, 1737134372.2778897, 1737134372.4063795, 1737134372.5358229, 1737134372.6798053, 1737134372.8083267, 1737134372.9400053, 1737134373.0753126, 1737134373.2025018, 1737134373.3299048, 1737134373.4563715, 1737134373.5972784, 1737134373.7300181, 1737134373.8628743, 1737134374.011191, 1737134374.136721, 1737134374.2711618, 1737134374.398077, 1737134374.5375218, 1737134374.665246, 1737134374.7942953, 1737134374.926405, 1737134375.047167, 1737134375.1751132, 1737134375.302262, 1737134375.4412224, 1737134375.5764787, 1737134375.7021706, 1737134375.831903, 1737134375.9723191, 1737134376.1075137, 1737134376.2446864, 1737134376.3720262, 1737134376.5036662, 1737134376.6345813, 1737134376.7695794, 1737134376.9002104, 1737134377.0267243, 1737134377.1550841, 1737134377.2900214, 1737134377.4202025, 1737134377.5527039, 1737134377.6768866, 1737134377.8066535, 1737134377.9420135, 1737134378.070178, 1737134378.2006361, 1737134378.3437982, 1737134378.4797246, 1737134378.6114995, 1737134378.7342484, 1737134378.875713, 1737134379.009767, 1737134379.1384256, 1737134379.266706, 1737134379.39707, 1737134379.5328262, 1737134379.665462, 1737134379.8053484, 1737134379.9329376, 1737134380.061099, 1737134380.192486, 1737134380.333669, 1737134380.465767, 1737134380.607005, 1737134380.7388134, 1737134380.8685732, 1737134380.997173, 1737134381.1335924, 1737134381.2716324, 1737134381.4103742, 1737134381.5414572, 1737134381.678349, 1737134381.8119717, 1737134381.9475007, 1737134382.10465, 1737134382.3405392, 1737134382.4733114, 1737134382.6053984, 1737134382.7393355, 1737134382.8741333, 1737134383.0046725, 1737134383.163038, 1737134383.3066325, 1737134383.4468875, 1737134383.594297, 1737134383.7310562, 1737134383.8593981, 1737134384.000121], "score": 0, "output_len": 99, "output": "def encrypt(s):\n    encrypted = ''\n    for char in s:\n        if char.isalpha():\n            shift = 2\n            if char.islower():\n                base = ord('a')\n            else:\n                base = ord('A')\n            encrypted += chr((ord(char) - base + shift * 2) % 26 + base)\n        else:\n            encrypted += char\n    return encrypted\n", "input_len": 149}
{"id": "HumanEval/90", "model_memory": 49260.0, "time_taken": 7.283420085906982, "input_kv_memory": 49620.0, "memory_usage": [49620.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49260.0, 48880.0, 48960.0, 49500.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0], "time_metric": [1737134384.5049977, 1737134384.6408541, 1737134384.778358, 1737134384.9029272, 1737134385.0423534, 1737134385.237047, 1737134385.3884485, 1737134385.5221174, 1737134385.647431, 1737134385.7790325, 1737134385.9071503, 1737134386.0373225, 1737134386.1896663, 1737134386.3149266, 1737134386.4434204, 1737134386.5903792, 1737134386.7152746, 1737134386.8432267, 1737134386.983145, 1737134387.1103537, 1737134387.2308085, 1737134387.359488, 1737134387.4893928, 1737134387.6187568, 1737134387.7440267, 1737134387.8721788, 1737134388.003401, 1737134388.1260912, 1737134388.2541149, 1737134388.387333, 1737134388.5070775, 1737134388.6414583, 1737134388.7709005, 1737134388.8975863, 1737134389.0263214, 1737134389.1619785, 1737134389.2939568, 1737134389.4253864, 1737134389.5669785, 1737134389.6975904, 1737134389.8618538, 1737134389.9988008, 1737134390.1398625, 1737134390.2668803, 1737134390.391745, 1737134390.528851, 1737134390.6541774, 1737134390.7853248, 1737134390.9216855, 1737134391.0553226, 1737134391.1912043, 1737134391.315613, 1737134391.4478948], "score": 0, "output_len": 52, "output": "def next_smallest(lst):\n    if len(lst) < 2:\n        return None\n    lst = sorted(lst)\n    return lst[1] if lst[1] != lst[0] else None\n", "input_len": 160}
{"id": "HumanEval/91", "model_memory": 49260.0, "time_taken": 9.499011516571045, "input_kv_memory": 49620.0, "memory_usage": [49620.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 48880.0, 48880.0, 48972.0, 49792.0, 49840.0, 49840.0, 49840.0, 49840.0, 49840.0, 49840.0, 49840.0, 49840.0, 49840.0, 49840.0], "time_metric": [1737134391.9398108, 1737134392.080898, 1737134392.2133849, 1737134392.3348699, 1737134392.4634943, 1737134392.601111, 1737134392.7313304, 1737134392.859536, 1737134392.9901748, 1737134393.1198883, 1737134393.2407928, 1737134393.3796809, 1737134393.5058248, 1737134393.6340039, 1737134393.7564533, 1737134393.8861215, 1737134394.0081806, 1737134394.1303961, 1737134394.258032, 1737134394.3960917, 1737134394.519458, 1737134394.6443846, 1737134394.7725692, 1737134394.9003923, 1737134395.0244963, 1737134395.147895, 1737134395.2868683, 1737134395.4174445, 1737134395.551015, 1737134395.6899192, 1737134395.822268, 1737134395.9488628, 1737134396.070914, 1737134396.2041407, 1737134396.328376, 1737134396.4559076, 1737134396.577684, 1737134396.7075975, 1737134396.837807, 1737134396.9647667, 1737134397.0938787, 1737134397.2332282, 1737134397.3621788, 1737134397.49325, 1737134397.6229146, 1737134397.748184, 1737134397.873169, 1737134398.0124848, 1737134398.1470134, 1737134398.2769816, 1737134398.40665, 1737134398.5354993, 1737134398.66164, 1737134398.784993, 1737134398.9149928, 1737134399.046588, 1737134399.1743426, 1737134399.306638, 1737134399.436464, 1737134399.7540684, 1737134399.9067369, 1737134400.0604997, 1737134400.1908844, 1737134400.324964, 1737134400.448335, 1737134400.576027, 1737134400.7063196, 1737134400.8435335, 1737134400.9698231, 1737134401.0992825], "score": 0, "output_len": 69, "output": "def is_bored(S):\n    sentences = re.split(r'[.?!]', S)\n    count = 0\n    for sentence in sentences:\n        if sentence.strip().lower().startswith('i'):\n            count += 1\n    return count\n\nimport re\n", "input_len": 150}
{"id": "HumanEval/92", "model_memory": 49460.0, "time_taken": 9.924630165100098, "input_kv_memory": 49892.0, "memory_usagetime_metric": [1737134401.5970428, 1737134401.7238026, 1737134401.8465383, 1737134401.9673533, 1737134402.0988123, 1737134402.2229273, 1737134402.3530793, 1737134402.481433, 1737134402.6290898, 1737134402.7540362, 1737134402.8739672, 1737134403.0116973, 1737134403.1350834, 1737134403.2581995, 1737134403.3869069, 1737134403.5177486, 1737134403.6414099, 1737134403.8110394, 1737134403.9562068, 1737134404.0826595, 1737134404.2150016, 1737134404.3420966, 1737134404.474186, 1737134404.6022646, 1737134404.7360113, 1737134404.8682582, 1737134404.9964366, 1737134405.1240788, 1737134405.2501793, 1737134405.384162, 1737134405.5125356, 1737134405.6433127, 1737134405.7715929, 1737134405.904706, 1737134406.0280676, 1737134406.15755, 1737134406.2833626, 1737134406.4078486, 1737134406.5281823, 1737134406.6751258, 1737134406.7986424, 1737134406.932034, 1737134407.0519233, 1737134407.1821084, 1737134407.3135343, 1737134407.443956, 1737134407.587549, 1737134407.718797, 1737134407.843731, 1737134407.969036, 1737134408.098659, 1737134408.2312756, 1737134408.3679805, 1737134408.4958656, 1737134408.6270819, 1737134408.7535987, 1737134408.88814, 1737134409.018383, 1737134409.1492786, 1737134409.2865462, 1737134409.4163575, 1737134409.5484557, 1737134409.6807182, 1737134409.8727467, 1737134410.0120575, 1737134410.1419253, 1737134410.2705195, 1737134410.4069252, 1737134410.5440311, 1737134410.6758204, 1737134410.8002894, 1737134410.933047, 1737134411.0588624, 1737134411.183211], "score": 0, "output_len": 73, "output": "def any_int(x, y, z):\n    if isinstance(x, int) and isinstance(y, int) and isinstance(z, int):\n        if (x == y + z) or (y == x + z) or (z == x + y):\n            return True\n    return False\n", "input_len": 187}
{"id": "HumanEval/93", "model_memory": 49260.0, "time_taken": 27.14611506462097, "input_kv_memory": 49620.0, "memory_usagetime_metric": [1737134411.6700828, 1737134411.7978454, 1737134411.9299693, 1737134412.0507233, 1737134412.178676, 1737134412.3086936, 1737134412.4342651, 1737134412.563568, 1737134412.6932342, 1737134412.820347, 1737134412.944416, 1737134413.0663824, 1737134413.1908684, 1737134413.3201253, 1737134413.4492402, 1737134413.5672052, 1737134413.689728, 1737134413.815746, 1737134413.9445405, 1737134414.0666, 1737134414.1923966, 1737134414.3234596, 1737134414.4558377, 1737134414.5871317, 1737134414.7217298, 1737134414.8505936, 1737134414.9791217, 1737134415.1088014, 1737134415.2491097, 1737134415.3793025, 1737134415.5046167, 1737134415.6261659, 1737134415.7539186, 1737134415.8856373, 1737134416.0085104, 1737134416.1467144, 1737134416.280603, 1737134416.4112852, 1737134416.5491283, 1737134416.683383, 1737134416.8077884, 1737134416.941928, 1737134417.070448, 1737134417.1957154, 1737134417.3264945, 1737134417.4529204, 1737134417.5787063, 1737134417.7103264, 1737134417.8405979, 1737134417.9713986, 1737134418.1031332, 1737134418.2346168, 1737134418.3693345, 1737134418.504666, 1737134418.6391094, 1737134418.7726028, 1737134418.9035058, 1737134419.0383148, 1737134419.1673946, 1737134419.295394, 1737134419.4220345, 1737134419.5467694, 1737134419.6862814, 1737134419.8186624, 1737134419.9456356, 1737134420.0738146, 1737134420.2006774, 1737134420.32843, 1737134420.4535825, 1737134420.5872858, 1737134420.7188222, 1737134420.8516874, 1737134420.9840598, 1737134421.1130745, 1737134421.2514815, 1737134421.3788867, 1737134421.5097523, 1737134421.6410716, 1737134421.772188, 1737134421.901309, 1737134422.039624, 1737134422.176134, 1737134422.3031669, 1737134422.4295766, 1737134422.5591233, 1737134422.6869767, 1737134422.8230371, 1737134422.9510407, 1737134423.0840743, 1737134423.2158248, 1737134423.348781, 1737134423.4743865, 1737134423.6115406, 1737134423.740189, 1737134423.8749473, 1737134424.0070028, 1737134424.137876, 1737134424.2707202, 1737134424.409726, 1737134424.544982, 1737134424.680298, 1737134424.8167124, 1737134424.9589536, 1737134425.1019318, 1737134425.256194, 1737134425.3944056, 1737134425.5373719, 1737134425.6712623, 1737134425.8037517, 1737134425.9328449, 1737134426.0719934, 1737134426.2024035, 1737134426.3430781, 1737134426.4842982, 1737134426.6282995, 1737134426.7547064, 1737134426.889367, 1737134427.0250602, 1737134427.2539084, 1737134427.401947, 1737134427.5860987, 1737134427.7338169, 1737134427.8681836, 1737134428.0131779, 1737134428.1566975, 1737134428.29424, 1737134428.4302766, 1737134428.5697582, 1737134428.6995618, 1737134428.8333368, 1737134428.9641464, 1737134429.096016, 1737134429.2344894, 1737134429.3714054, 1737134429.5081296, 1737134429.6523361, 1737134429.7899106, 1737134429.9329054, 1737134430.0742679, 1737134430.2144396, 1737134430.3435287, 1737134430.4746442, 1737134430.605557, 1737134430.7378118, 1737134430.8758123, 1737134431.0188367, 1737134431.1658685, 1737134431.2996006, 1737134431.4442983, 1737134431.5809178, 1737134431.7146084, 1737134431.8480716, 1737134431.989571, 1737134432.130536, 1737134432.318409, 1737134432.4564285, 1737134432.5916855, 1737134432.7896125, 1737134432.9261143, 1737134433.0696409, 1737134433.2132192, 1737134433.3489954, 1737134433.4885123, 1737134433.6309278, 1737134433.7692173, 1737134433.8992183, 1737134434.0329685, 1737134434.170479, 1737134434.3077254, 1737134434.4476478, 1737134434.5875754, 1737134434.7171054, 1737134434.856707, 1737134434.9962661, 1737134435.1414628, 1737134435.3595462, 1737134435.4932442, 1737134435.6322896, 1737134435.7778761, 1737134435.9166303, 1737134436.0595787, 1737134436.1963766, 1737134436.3365264, 1737134436.4839084, 1737134436.6325407, 1737134436.7687304, 1737134437.0597203, 1737134437.194966, 1737134437.3325913, 1737134437.4751587, 1737134437.6154358, 1737134437.7479825, 1737134437.8850348, 1737134438.0509238, 1737134438.2073598, 1737134438.3446267, 1737134438.4843144], "score": 0, "output_len": 196, "output": "def encode(message):\n    vowels = 'aeiou'\n    encoded_message = ''\n    for char in message:\n        if char.isalpha():\n            if char.lower() in vowels:\n                new_char = chr(((ord(char.lower()) - ord('a') + 2) % 26) + ord('a'))\n                if char.isupper():\n                    new_char = new_char.upper()\n            else:\n                new_char = char.swapcase()\n            encoded_message += new_char\n        else:\n            encoded_message += char\n    return encoded_message\n\n# Example usage:\nprint(encode('test'))  # Output: 'TGST'\nprint(encode('This is a message'))  # Output: 'tHKS KS C MGSSCGG'", "input_len": 157}
{"id": "HumanEval/94", "model_memory": 50812.0, "time_taken": 22.911298513412476, "input_kv_memory": 51880.0, "memory_usage": [51880.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 51968.0, 50812.0, 49656.0, 50180.0, 50542.0, 50944.0, 51004.0, 51004.0, 51004.0, 51004.0, 51004.0, 51004.0, 51004.0, 51004.0, 51004.0], "time_metric": [1737134439.1251643, 1737134439.2808368, 1737134439.4161031, 1737134439.5420585, 1737134439.6717494, 1737134439.800426, 1737134439.9263237, 1737134440.0581686, 1737134440.218079, 1737134440.3536506, 1737134440.475808, 1737134440.5991595, 1737134440.7224245, 1737134440.8514555, 1737134440.9774656, 1737134441.1063597, 1737134441.2286327, 1737134441.3513727, 1737134441.4826171, 1737134441.6032712, 1737134441.736943, 1737134441.8647878, 1737134442.0243635, 1737134442.1689079, 1737134442.3022718, 1737134442.4390094, 1737134442.574208, 1737134442.7064254, 1737134442.8334901, 1737134442.9611387, 1737134443.0853512, 1737134443.2203867, 1737134443.348386, 1737134443.479657, 1737134443.6288867, 1737134443.7543094, 1737134443.884021, 1737134444.0097075, 1737134444.14691, 1737134444.2747457, 1737134444.4037106, 1737134444.540993, 1737134444.6669526, 1737134444.7937899, 1737134444.9290807, 1737134445.0616922, 1737134445.1895256, 1737134445.331312, 1737134445.4576926, 1737134445.5953746, 1737134445.7487843, 1737134445.8849926, 1737134446.0184689, 1737134446.1563137, 1737134446.2876935, 1737134446.4228017, 1737134446.5717862, 1737134446.7054706, 1737134446.8431833, 1737134447.0033689, 1737134447.1346707, 1737134447.2699115, 1737134447.4092877, 1737134447.544456, 1737134447.6747963, 1737134447.8092535, 1737134447.934892, 1737134448.0606694, 1737134448.257368, 1737134448.4241998, 1737134448.5555127, 1737134448.6861117, 1737134448.8165522, 1737134448.9566183, 1737134449.1301007, 1737134449.2606366, 1737134449.3895788, 1737134449.524035, 1737134449.6991043, 1737134449.8951683, 1737134450.0618646, 1737134450.1903687, 1737134450.3186479, 1737134450.4527023, 1737134450.588878, 1737134450.726559, 1737134450.85496, 1737134450.9953594, 1737134451.1775303, 1737134451.3179946, 1737134451.45607, 1737134451.6211278, 1737134451.7480896, 1737134451.8908503, 1737134452.1379044, 1737134452.334351, 1737134452.509481, 1737134452.6388936, 1737134452.7714865, 1737134452.9024723, 1737134453.0691593, 1737134453.2688863, 1737134453.4525554, 1737134453.5833995, 1737134453.727356, 1737134453.874082, 1737134454.0147989, 1737134454.205122, 1737134454.3412313, 1737134454.5189261, 1737134454.6517613, 1737134454.7930453, 1737134454.9214442, 1737134455.0547264, 1737134455.1877937, 1737134455.3242116, 1737134455.4584765, 1737134455.5966825, 1737134455.7407956, 1737134455.878135, 1737134456.0088587, 1737134456.143613, 1737134456.2946067, 1737134456.4384131, 1737134456.5722742, 1737134456.7044933, 1737134456.8368835, 1737134456.9665654, 1737134457.1089492, 1737134457.2384021, 1737134457.3698254, 1737134457.5017, 1737134457.6335108, 1737134457.768291, 1737134457.9101434, 1737134458.0539162, 1737134458.2085898, 1737134458.3446438, 1737134458.491318, 1737134458.6269667, 1737134458.7660713, 1737134458.9061904, 1737134459.0454783, 1737134459.1850958, 1737134459.3371532, 1737134459.472791, 1737134459.6115024, 1737134459.750139, 1737134459.9429195, 1737134460.0856733, 1737134460.3010783, 1737134460.4449463, 1737134460.5862827, 1737134460.7251165, 1737134460.8614247, 1737134460.9963653, 1737134461.1301875, 1737134461.2742648, 1737134461.4211233, 1737134461.5552583], "score": 0, "output_len": 159, "output": "```python\ndef skjkasdkd(lst):\n    def is_prime(n):\n        if n <= 1:\n            return False\n        for i in range(2, int(n**0.5) + 1):\n            if n % i == 0:\n                return False\n        return True\n\n    def sum_of_digits(n):\n        return sum(int(digit) for digit in str(n))\n\n    max_prime = 0\n    for num in lst:\n        if is_prime(num) and num > max_prime:\n            max_prime = num\n\n    return sum_of_digits(max_prime)\n```\n", "input_len": 358}
{"id": "HumanEval/95", "model_memory": 49848.0, "time_taken": 12.548568487167358, "input_kv_memory": 50462.0, "memory_usagetime_metric": [1737134462.1165888, 1737134462.2631958, 1737134462.3896408, 1737134462.5154638, 1737134462.6425297, 1737134462.7725015, 1737134462.8986938, 1737134463.0259514, 1737134463.1583478, 1737134463.2898629, 1737134463.4092789, 1737134463.5415697, 1737134463.6697261, 1737134463.8031483, 1737134463.9262311, 1737134464.0526717, 1737134464.1845903, 1737134464.3245692, 1737134464.4465022, 1737134464.579753, 1737134464.6983006, 1737134464.8261843, 1737134464.9610574, 1737134465.1003006, 1737134465.2314858, 1737134465.3618503, 1737134465.4906406, 1737134465.6155553, 1737134465.7456136, 1737134465.879092, 1737134466.00758, 1737134466.149083, 1737134466.2789278, 1737134466.405479, 1737134466.533776, 1737134466.6594167, 1737134466.784731, 1737134466.912318, 1737134467.0402186, 1737134467.1754386, 1737134467.3056278, 1737134467.4379902, 1737134467.5635529, 1737134467.6873584, 1737134467.8249764, 1737134467.9508424, 1737134468.079887, 1737134468.22784, 1737134468.3593364, 1737134468.4925425, 1737134468.6308727, 1737134468.7587135, 1737134468.8890848, 1737134469.0183234, 1737134469.1461704, 1737134469.274612, 1737134469.4058568, 1737134469.5391982, 1737134469.6643198, 1737134469.7932377, 1737134469.9255216, 1737134470.0626326, 1737134470.1950989, 1737134470.334472, 1737134470.4654522, 1737134470.5899522, 1737134470.7221813, 1737134470.8518937, 1737134470.980505, 1737134471.1049218, 1737134471.2310975, 1737134471.358989, 1737134471.4931688, 1737134471.6276414, 1737134471.7591717, 1737134471.8897774, 1737134472.031295, 1737134472.1601396, 1737134472.288227, 1737134472.4324064, 1737134472.5687053, 1737134472.7832594, 1737134472.9388483, 1737134473.0783737, 1737134473.2089248, 1737134473.3445106, 1737134473.4734352, 1737134473.5994585, 1737134473.729689, 1737134473.859986, 1737134473.99626, 1737134474.1246274, 1737134474.2834268], "score": 0, "output_len": 91, "output": "```python\ndef check_dict_case(dict):\n    if not dict:\n        return False\n    lower_case = all(isinstance(key, str) and key.islower() for key in dict.keys())\n    upper_case = all(isinstance(key, str) and key.isupper() for key in dict.keys())\n    return lower_case or upper_case\n```", "input_len": 237}
{"id": "HumanEval/96", "model_memory": 49648.0, "time_taken": 22.98051881790161, "input_kv_memory": 50170.0, "memory_usagetime_metric": [1737134474.8355157, 1737134475.0093253, 1737134475.1655738, 1737134475.3033054, 1737134475.4482722, 1737134475.5753977, 1737134475.6973588, 1737134475.8197916, 1737134475.9570005, 1737134476.0917368, 1737134476.2140875, 1737134476.351223, 1737134476.4934692, 1737134476.6275856, 1737134476.7562149, 1737134476.8908193, 1737134477.0164278, 1737134477.152124, 1737134477.2794266, 1737134477.4118578, 1737134477.5436742, 1737134477.6709828, 1737134477.8027623, 1737134477.9297626, 1737134478.0704043, 1737134478.1947453, 1737134478.3575504, 1737134478.4883728, 1737134478.6199882, 1737134478.7490208, 1737134478.8821576, 1737134479.0121076, 1737134479.142187, 1737134479.2733097, 1737134479.4029052, 1737134479.531604, 1737134479.6642034, 1737134479.7889938, 1737134479.9203367, 1737134480.0495558, 1737134480.1800137, 1737134480.3052638, 1737134480.4323983, 1737134480.5586996, 1737134480.6831574, 1737134480.8156946, 1737134480.9343586, 1737134481.0681467, 1737134481.1957722, 1737134481.3362813, 1737134481.4651566, 1737134481.5918727, 1737134481.7242703, 1737134481.8560607, 1737134481.9861474, 1737134482.1140058, 1737134482.2399113, 1737134482.3749819, 1737134482.507684, 1737134482.6812003, 1737134482.8819008, 1737134483.0420866, 1737134483.1779277, 1737134483.3085873, 1737134483.439002, 1737134483.5710166, 1737134483.6979446, 1737134483.8262537, 1737134483.961527, 1737134484.0981002, 1737134484.2230775, 1737134484.35434, 1737134484.483139, 1737134484.6159356, 1737134484.7452078, 1737134484.8741632, 1737134485.0012257, 1737134485.1392674, 1737134485.271476, 1737134485.400695, 1737134485.5361254, 1737134485.7045622, 1737134485.891601, 1737134486.0257738, 1737134486.1609826, 1737134486.2985823, 1737134486.428368, 1737134486.562043, 1737134486.6954405, 1737134486.824118, 1737134486.9578164, 1737134487.0912263, 1737134487.2268596, 1737134487.3573163, 1737134487.4901745, 1737134487.6222324, 1737134487.75832, 1737134487.8915267, 1737134488.0353374, 1737134488.1813138, 1737134488.3190248, 1737134488.4464335, 1737134488.585423, 1737134488.7213771, 1737134488.8606753, 1737134488.9950733, 1737134489.1371398, 1737134489.2702029, 1737134489.40215, 1737134489.531, 1737134489.66258, 1737134489.801345, 1737134489.94699, 1737134490.0774086, 1737134490.2112496, 1737134490.4011564, 1737134490.5391521, 1737134490.7316103, 1737134490.8640575, 1737134491.0071595, 1737134491.2098768, 1737134491.3741803, 1737134491.51025, 1737134491.6498692, 1737134491.786656, 1737134491.9188926, 1737134492.0818636, 1737134492.225217, 1737134492.358587, 1737134492.5625753, 1737134492.7147646, 1737134492.8605886, 1737134492.9968886, 1737134493.130865, 1737134493.2712834, 1737134493.464672, 1737134493.6045232, 1737134493.7423127, 1737134493.8752842, 1737134494.026576, 1737134494.246274, 1737134494.381521, 1737134494.5179436, 1737134494.7336333, 1737134494.864804, 1737134495.0071785, 1737134495.1460996, 1737134495.2863812, 1737134495.4281492, 1737134495.6403224, 1737134495.7814035, 1737134495.9288394, 1737134496.0813916, 1737134496.2137635, 1737134496.3758972, 1737134496.5487728, 1737134496.7050283, 1737134496.8504207, 1737134496.9849484, 1737134497.1216683, 1737134497.2715838, 1737134497.4219282], "score": 0, "output_len": 116, "output": "```python\ndef count_up_to(n):\n    def is_prime(num):\n        if num < 2:\n            return False\n        for i in range(2, int(num**0.5) + 1):\n            if num % i == 0:\n                return False\n        return True\n\n    primes = []\n    for i in range(2, n):\n        if is_prime(i):\n            primes.append(i)\n    return primes\n```", "input_len": 204}
{"id": "HumanEval/97", "model_memory": 49256.0, "time_taken": 8.165929317474365, "input_kv_memory": 49616.0, "memory_usage": [49616.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49256.0, 49256.0, 49118.0, 49132.0, 49372.0, 49386.0, 49386.0, 49386.0, 49386.0, 49386.0, 49386.0, 49386.0, 49386.0, 49386.0, 49386.0], "time_metric": [1737134497.9598405, 1737134498.0871267, 1737134498.2121444, 1737134498.3483486, 1737134498.4877355, 1737134498.617605, 1737134498.7507362, 1737134498.892041, 1737134499.0323722, 1737134499.1911252, 1737134499.3219635, 1737134499.4704206, 1737134499.617232, 1737134499.7508695, 1737134499.8899984, 1737134500.0769126, 1737134500.2025743, 1737134500.3258758, 1737134500.4492865, 1737134500.5762787, 1737134500.7418516, 1737134500.879977, 1737134501.0172875, 1737134501.1513107, 1737134501.2898962, 1737134501.4404945, 1737134501.5863616, 1737134501.7423575, 1737134501.8728712, 1737134502.0055602, 1737134502.1404624, 1737134502.2953076, 1737134502.4226706, 1737134502.5600317, 1737134502.7029414, 1737134502.859591, 1737134502.9914677, 1737134503.164954, 1737134503.2947505, 1737134503.4428558, 1737134503.5982423, 1737134503.730657, 1737134503.8529003, 1737134504.0687943, 1737134504.2204614, 1737134504.423323, 1737134504.57702, 1737134504.7046673, 1737134504.8309186, 1737134504.9855776, 1737134505.110618, 1737134505.236186, 1737134505.3736327, 1737134505.5054204, 1737134505.6352808, 1737134505.7639568], "score": 0, "output_len": 55, "output": "def multiply(a, b):\n    unit_digit_a = abs(a) % 10\n    unit_digit_b = abs(b) % 10\n    return unit_digit_a * unit_digit_b\n", "input_len": 147}
{"id": "HumanEval/98", "model_memory": 49008.0, "time_taken": 9.718350410461426, "input_kv_memory": 49248.0, "memory_usage": [49248.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49302.0, 49302.0, 49302.0, 49342.0, 49342.0, 49342.0, 49342.0, 49342.0, 49342.0, 49342.0, 49342.0, 49342.0, 49342.0, 49342.0, 49342.0, 49382.0, 49382.0, 49382.0, 49382.0, 49368.0, 49088.0, 49142.0, 49316.0, 49576.0, 49942.0, 49942.0, 49942.0, 49942.0, 49942.0, 49942.0, 49942.0, 49942.0, 49942.0, 49942.0, 49942.0], "time_metric": [1737134506.229568, 1737134506.3562872, 1737134506.490824, 1737134506.633042, 1737134506.7543948, 1737134506.88212, 1737134507.0279496, 1737134507.1608887, 1737134507.2770336, 1737134507.4044392, 1737134507.533818, 1737134507.6585534, 1737134507.7811859, 1737134507.9088352, 1737134508.037495, 1737134508.1644852, 1737134508.3092554, 1737134508.4329157, 1737134508.5633118, 1737134508.687807, 1737134508.8137717, 1737134508.9390771, 1737134509.0737982, 1737134509.2002478, 1737134509.3296535, 1737134509.4576433, 1737134509.5901413, 1737134509.723068, 1737134509.8554487, 1737134509.9842017, 1737134510.115318, 1737134510.2526758, 1737134510.3882391, 1737134510.5211997, 1737134510.6619558, 1737134510.7919855, 1737134510.9267364, 1737134511.056459, 1737134511.186245, 1737134511.3145258, 1737134511.4405518, 1737134511.5703712, 1737134511.7018578, 1737134511.8310444, 1737134511.9552906, 1737134512.0943317, 1737134512.2294478, 1737134512.3570774, 1737134512.4881728, 1737134512.6164508, 1737134512.7499247, 1737134512.882099, 1737134513.0158997, 1737134513.1613247, 1737134513.2888637, 1737134513.4139836, 1737134513.5418072, 1737134513.6926534, 1737134513.9127395, 1737134514.075222, 1737134514.254617, 1737134514.3965924, 1737134514.5394757, 1737134514.667473, 1737134514.8008249, 1737134514.9300585, 1737134515.0628586, 1737134515.2125387, 1737134515.3443065, 1737134515.4831088, 1737134515.6346765], "score": 0, "output_len": 64, "output": "def count_upper(s):\n    vowels = 'AEIOU'\n    count = 0\n    for i in range(0, len(s), 2):\n        if s[i] in vowels:\n            count += 1\n    return count\n", "input_len": 110}
{"id": "HumanEval/99", "model_memory": 49648.0, "time_taken": 14.250939846038818, "input_kv_memory": 50170.0, "memory_usage": [50170.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 49648.0, 49074.0, 49716.0, 50086.0, 50086.0, 50086.0, 50086.0, 50086.0, 50086.0, 50086.0, 50086.0, 50086.0, 50086.0, 50086.0, 50086.0, 50086.0], "time_metric": [1737134516.1876557, 1737134516.310069, 1737134516.44063, 1737134516.5639513, 1737134516.6979768, 1737134516.8285012, 1737134516.9621267, 1737134517.0886984, 1737134517.2198274, 1737134517.3576982, 1737134517.4779916, 1737134517.5993173, 1737134517.7230577, 1737134517.8426504, 1737134517.980027, 1737134518.1195874, 1737134518.2479734, 1737134518.384439, 1737134518.505917, 1737134518.6416004, 1737134518.762335, 1737134518.8967097, 1737134519.029768, 1737134519.157773, 1737134519.283816, 1737134519.416378, 1737134519.5488284, 1737134519.6756809, 1737134519.8062341, 1737134519.9381325, 1737134520.070457, 1737134520.1921973, 1737134520.32003, 1737134520.4513624, 1737134520.5806391, 1737134520.7054873, 1737134520.8315217, 1737134520.96182, 1737134521.091862, 1737134521.224628, 1737134521.359439, 1737134521.4854054, 1737134521.616595, 1737134521.7605011, 1737134521.8825564, 1737134522.0132136, 1737134522.1437101, 1737134522.271259, 1737134522.4063036, 1737134522.5387876, 1737134522.6766815, 1737134522.812514, 1737134522.9309263, 1737134523.0614247, 1737134523.188284, 1737134523.3230422, 1737134523.4514418, 1737134523.58146, 1737134523.7128086, 1737134523.8419037, 1737134523.9662158, 1737134524.094928, 1737134524.2421548, 1737134524.3720086, 1737134524.5006807, 1737134524.631568, 1737134524.766742, 1737134524.9039583, 1737134525.0336425, 1737134525.1669874, 1737134525.3050632, 1737134525.438889, 1737134525.5702155, 1737134525.6969178, 1737134525.8304741, 1737134525.9592752, 1737134526.1071105, 1737134526.2430313, 1737134526.3739216, 1737134526.518594, 1737134526.6477082, 1737134526.7859914, 1737134526.923011, 1737134527.0622153, 1737134527.2180772, 1737134527.3492095, 1737134527.4893796, 1737134527.6154304, 1737134527.7495055, 1737134527.8824818, 1737134528.014415, 1737134528.2773201, 1737134528.4189818, 1737134528.5615258, 1737134528.6910768, 1737134528.8221335, 1737134528.9547248, 1737134529.0865948, 1737134529.225026, 1737134529.3685815, 1737134529.5068598, 1737134529.6377304, 1737134529.7749906, 1737134529.9098437, 1737134530.0480099], "score": 0, "output_len": 104, "output": "import math\n\ndef closest_integer(value):\n    try:\n        num = float(value)\n    except ValueError:\n        return None\n\n    if num == int(num):\n        return int(num)\n    else:\n        lower = math.floor(num)\n        upper = math.ceil(num)\n        if abs(num - lower) > abs(num - upper):\n            return upper\n        else:\n            return lower\n", "input_len": 203}
{"id": "HumanEval/100", "model_memory": 49512.0, "time_taken": 10.08203649520874, "input_kv_memory": 49974.0, "memory_usagetime_metric": [1737134530.5492983, 1737134530.674326, 1737134530.7975287, 1737134530.9279714, 1737134531.090369, 1737134531.2925415, 1737134531.4203522, 1737134531.555377, 1737134531.6830182, 1737134531.8277752, 1737134531.9632044, 1737134532.094111, 1737134532.232469, 1737134532.3582253, 1737134532.4888818, 1737134532.6185737, 1737134532.741584, 1737134532.87153, 1737134533.0009818, 1737134533.164625, 1737134533.2968254, 1737134533.4241607, 1737134533.5573118, 1737134533.6782336, 1737134533.8075328, 1737134533.9308918, 1737134534.0608659, 1737134534.1812613, 1737134534.3128088, 1737134534.4363275, 1737134534.571947, 1737134534.7073498, 1737134534.8324738, 1737134534.965614, 1737134535.0954103, 1737134535.227369, 1737134535.3691878, 1737134535.4953508, 1737134535.6221168, 1737134535.768251, 1737134535.8993285, 1737134536.0316987, 1737134536.15856, 1737134536.2936468, 1737134536.4245467, 1737134536.5828671, 1737134536.717175, 1737134536.850305, 1737134536.982492, 1737134537.10981, 1737134537.2452173, 1737134537.372498, 1737134537.5072584, 1737134537.6368573, 1737134537.7620852, 1737134537.8892906, 1737134538.0198736, 1737134538.1520834, 1737134538.273981, 1737134538.4024801, 1737134538.6330175, 1737134538.8318276, 1737134538.9769247, 1737134539.1075885, 1737134539.237968, 1737134539.368753, 1737134539.505442, 1737134539.6430328, 1737134539.770359, 1737134539.9010315, 1737134540.0287266, 1737134540.1600952, 1737134540.2888658], "score": 0, "output_len": 64, "output": "def make_a_pile(n):\n    pile = []\n    stones = n\n    for i in range(n):\n        pile.append(stones)\n        stones += 2 if stones % 2 == 0 else 1\n    return pile\n", "input_len": 174}
{"id": "HumanEval/101", "model_memory": 49260.0, "time_taken": 3.9515130519866943, "input_kv_memory": 49620.0, "memory_usage": [49620.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49260.0, 48880.0, 48920.0, 49498.0, 49516.0, 49516.0, 49516.0, 49516.0, 49516.0, 49516.0, 49516.0, 49516.0, 49516.0, 49516.0, 49516.0, 49516.0], "time_metric": [1737134540.7677715, 1737134540.8904347, 1737134541.0143785, 1737134541.1510227, 1737134541.2937493, 1737134541.4373026, 1737134541.6024876, 1737134541.7380373, 1737134541.8692107, 1737134542.000205, 1737134542.1312668, 1737134542.254871, 1737134542.3871155, 1737134542.5204625, 1737134542.645862, 1737134542.8687575, 1737134542.9991841, 1737134543.1332347, 1737134543.2611554, 1737134543.3843374, 1737134543.5045836, 1737134543.6321461, 1737134543.758241, 1737134543.8807485, 1737134544.00827, 1737134544.1415875, 1737134544.2684705, 1737134544.4010231], "score": 0, "output_len": 22, "output": "def words_string(s):\n    return s.replace(',', ' ').split()\n", "input_len": 151}
{"id": "HumanEval/102", "model_memory": 49136.0, "time_taken": 9.858041048049927, "input_kv_memory": 49436.0, "memory_usagetime_metric": [1737134544.8647838, 1737134544.9970644, 1737134545.121695, 1737134545.2641878, 1737134545.395933, 1737134545.5187426, 1737134545.6507504, 1737134545.7694986, 1737134545.8961158, 1737134546.0193202, 1737134546.1465669, 1737134546.275499, 1737134546.40542, 1737134546.5265193, 1737134546.6553993, 1737134546.777226, 1737134546.901038, 1737134547.020893, 1737134547.1504695, 1737134547.2805717, 1737134547.403222, 1737134547.5272548, 1737134547.6526594, 1737134547.7847214, 1737134547.913332, 1737134548.0479567, 1737134548.1926627, 1737134548.322514, 1737134548.4505365, 1737134548.5821638, 1737134548.7128844, 1737134548.848467, 1737134548.9737403, 1737134549.1082284, 1737134549.234681, 1737134549.3670287, 1737134549.4959915, 1737134549.6367755, 1737134549.7735496, 1737134549.9026473, 1737134550.032906, 1737134550.1547763, 1737134550.2836483, 1737134550.4144597, 1737134550.542351, 1737134550.6718726, 1737134550.798515, 1737134550.929635, 1737134551.0587075, 1737134551.1892002, 1737134551.319515, 1737134551.4492226, 1737134551.5739026, 1737134551.710258, 1737134551.8417075, 1737134551.9728131, 1737134552.1043668, 1737134552.2303224, 1737134552.369419, 1737134552.4915426, 1737134552.6843998, 1737134552.8329554, 1737134552.9764686, 1737134553.1427827, 1737134553.316153, 1737134553.4474568, 1737134553.5796328, 1737134553.7319212, 1737134553.8777215, 1737134554.011129, 1737134554.1492906, 1737134554.2828624, 1737134554.4087582], "score": 0, "output_len": 72, "output": "def choose_num(x, y):\n    if x > y:\n        x, y = y, x\n    if x % 2 != 0:\n        x += 1\n    if y < x:\n        return -1\n    return x if x <= y else y - (y - x)\n", "input_len": 133}
{"id": "HumanEval/103", "model_memory": 49620.0, "time_taken": 8.830186605453491, "input_kv_memory": 50132.0, "memory_usage": [50132.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 50180.0, 49060.0, 49060.0, 49200.0, 49800.0, 49820.0, 49820.0, 49820.0, 49820.0, 49820.0, 49820.0, 49820.0, 49820.0, 49820.0, 49820.0, 49820.0], "time_metric": [1737134554.8809614, 1737134555.009599, 1737134555.1304922, 1737134555.2561762, 1737134555.3954062, 1737134555.52604, 1737134555.6504312, 1737134555.7758558, 1737134555.904693, 1737134556.0344067, 1737134556.1745138, 1737134556.3090754, 1737134556.4384964, 1737134556.5701299, 1737134556.6999605, 1737134556.8206055, 1737134556.949882, 1737134557.0800102, 1737134557.2037396, 1737134557.3264868, 1737134557.4491765, 1737134557.5806878, 1737134557.7120945, 1737134557.8409984, 1737134557.9677188, 1737134558.0930297, 1737134558.2322693, 1737134558.354973, 1737134558.5082622, 1737134558.669245, 1737134558.7983081, 1737134558.9277854, 1737134559.059957, 1737134559.1894445, 1737134559.3215113, 1737134559.4535882, 1737134559.5801158, 1737134559.7082083, 1737134559.835671, 1737134559.9670413, 1737134560.0919764, 1737134560.2220657, 1737134560.3471267, 1737134560.4747782, 1737134560.6113908, 1737134560.7457414, 1737134560.8722157, 1737134560.999854, 1737134561.133455, 1737134561.2679448, 1737134561.3934581, 1737134561.5238357, 1737134561.6595576, 1737134561.93005, 1737134562.0778043, 1737134562.2204738, 1737134562.3520176, 1737134562.483959, 1737134562.6124256, 1737134562.7374697, 1737134562.8700724, 1737134563.001868, 1737134563.1302228, 1737134563.2610903, 1737134563.3951354], "score": 0, "output_len": 60, "output": "def rounded_avg(n, m):\n    if n > m:\n        return -1\n    avg = (n + m) / 2\n    rounded_avg = round(avg)\n    return bin(rounded_avg)\n", "input_len": 192}
{"id": "HumanEval/104", "model_memory": 49260.0, "time_taken": 8.676506280899048, "input_kv_memory": 49620.0, "memory_usage": [49620.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49260.0, 48880.0, 49018.0, 50296.0, 50620.0, 50620.0, 50620.0, 50620.0, 50620.0, 50620.0, 50620.0, 50620.0, 50620.0, 50620.0, 50620.0], "time_metric": [1737134563.8936484, 1737134564.025814, 1737134564.1452034, 1737134564.270346, 1737134564.39581, 1737134564.5206132, 1737134564.6417272, 1737134564.7705479, 1737134564.8946507, 1737134565.024182, 1737134565.155264, 1737134565.282793, 1737134565.407236, 1737134565.539947, 1737134565.6670673, 1737134565.797969, 1737134565.9298253, 1737134566.0515306, 1737134566.1700375, 1737134566.3022423, 1737134566.438419, 1737134566.5941997, 1737134566.7254808, 1737134566.8659935, 1737134566.9883404, 1737134567.118143, 1737134567.2522228, 1737134567.3795505, 1737134567.5074549, 1737134567.641863, 1737134567.7700257, 1737134567.893854, 1737134568.0160391, 1737134568.1396327, 1737134568.2680936, 1737134568.390437, 1737134568.5237277, 1737134568.6591434, 1737134568.793316, 1737134568.9223137, 1737134569.0545347, 1737134569.185704, 1737134569.3201578, 1737134569.447151, 1737134569.5751693, 1737134569.6971729, 1737134569.8270373, 1737134569.9601297, 1737134570.0838258, 1737134570.224852, 1737134570.3628027, 1737134570.4925294, 1737134570.7683477, 1737134570.90871, 1737134571.0393577, 1737134571.1746151, 1737134571.309943, 1737134571.4435372, 1737134571.581579, 1737134571.712631, 1737134571.8359218, 1737134571.9628866, 1737134572.0951462, 1737134572.2244444], "score": 0, "output_len": 59, "output": "def unique_digits(x):\n    result = []\n    for num in x:\n        if all(int(digit) % 2 != 0 for digit in str(num)):\n            result.append(num)\n    return sorted(result)\n", "input_len": 159}
{"id": "HumanEval/105", "model_memory": 50240.0, "time_taken": 21.908634662628174, "input_kv_memory": 51026.0, "memory_usagetime_metric": [1737134572.8546255, 1737134573.003922, 1737134573.1299906, 1737134573.2632205, 1737134573.392721, 1737134573.5124364, 1737134573.6343687, 1737134573.7649822, 1737134573.8868098, 1737134574.0168912, 1737134574.138414, 1737134574.260315, 1737134574.380106, 1737134574.5054657, 1737134574.634096, 1737134574.753989, 1737134574.8778884, 1737134575.0063927, 1737134575.1395156, 1737134575.2604592, 1737134575.3848658, 1737134575.5147815, 1737134575.6435022, 1737134575.7674096, 1737134575.8927674, 1737134576.0225935, 1737134576.1563542, 1737134576.2999308, 1737134576.4264889, 1737134576.5479853, 1737134576.680077, 1737134576.8224666, 1737134576.9545925, 1737134577.0896688, 1737134577.222656, 1737134577.3539312, 1737134577.4853783, 1737134577.6059916, 1737134577.7344418, 1737134577.8664095, 1737134578.0039182, 1737134578.1600785, 1737134578.3114076, 1737134578.4374256, 1737134578.5576162, 1737134578.705944, 1737134578.8383458, 1737134578.9664807, 1737134579.0968664, 1737134579.2252212, 1737134579.3514307, 1737134579.4797692, 1737134579.6154342, 1737134579.7505665, 1737134579.8820596, 1737134580.0201051, 1737134580.143858, 1737134580.2767873, 1737134580.411308, 1737134580.5372007, 1737134580.6694503, 1737134580.8002574, 1737134580.9284525, 1737134581.0709171, 1737134581.21165, 1737134581.3436158, 1737134581.4664817, 1737134581.5940921, 1737134581.7371304, 1737134581.905529, 1737134582.040512, 1737134582.173074, 1737134582.3060176, 1737134582.4808848, 1737134582.6121778, 1737134582.7423975, 1737134582.8887703, 1737134583.0239043, 1737134583.1663685, 1737134583.299011, 1737134583.4314702, 1737134583.560969, 1737134583.699233, 1737134583.8329134, 1737134583.9729202, 1737134584.1036098, 1737134584.2362814, 1737134584.366806, 1737134584.489195, 1737134584.6205492, 1737134584.746721, 1737134584.8873267, 1737134585.0186853, 1737134585.154146, 1737134585.2854767, 1737134585.4151735, 1737134585.55122, 1737134585.6846333, 1737134585.81902, 1737134585.9532297, 1737134586.1026864, 1737134586.2409403, 1737134586.3685641, 1737134586.4981537, 1737134586.6309206, 1737134586.7713022, 1737134586.9140553, 1737134587.0490594, 1737134587.184306, 1737134587.3186812, 1737134587.452823, 1737134587.586851, 1737134587.718185, 1737134587.8523247, 1737134587.9933014, 1737134588.1208022, 1737134588.252808, 1737134588.38965, 1737134588.5264843, 1737134588.6642292, 1737134588.795741, 1737134588.9404056, 1737134589.0734696, 1737134589.2030518, 1737134589.338971, 1737134589.472223, 1737134589.6064901, 1737134589.7470026, 1737134589.8804052, 1737134590.0139337, 1737134590.1650133, 1737134590.2974136, 1737134590.435401, 1737134590.5706503, 1737134590.70749, 1737134590.8450265, 1737134590.982503, 1737134591.1239338, 1737134591.2661088, 1737134591.3961163, 1737134591.5343523, 1737134591.6825638, 1737134591.8349073, 1737134591.9840808, 1737134592.1487775, 1737134592.302083, 1737134592.5033462, 1737134592.6812534, 1737134592.851247, 1737134593.0023806, 1737134593.1588194, 1737134593.3460057, 1737134593.4966323, 1737134593.6424046, 1737134593.7851107, 1737134593.9327326, 1737134594.1036024, 1737134594.2780514], "score": 0, "output_len": 153, "output": "def by_length(arr):\n    valid_digits = {1: \"One\", 2: \"Two\", 3: \"Three\", 4: \"Four\", 5: \"Five\", 6: \"Six\", 7: \"Seven\", 8: \"Eight\", 9: \"Nine\"}\n    filtered_arr = [num for num in arr if 1 <= num <= 9]\n    sorted_arr = sorted(filtered_arr, reverse=True)\n    return [valid_digits[num] for num in sorted_arr]\n\n    if not arr:\n        return []\n    else:\n        return ['One']\n", "input_len": 334}
{"id": "HumanEval/106", "model_memory": 49260.0, "time_taken": 20.122004508972168, "input_kv_memory": 49620.0, "memory_usagetime_metric": [1737134594.79446, 1737134594.9531326, 1737134595.094773, 1737134595.2330055, 1737134595.3915744, 1737134595.5391486, 1737134595.679606, 1737134595.8118734, 1737134595.9515026, 1737134596.0853288, 1737134596.2321022, 1737134596.3856459, 1737134596.533509, 1737134596.6847951, 1737134596.8147352, 1737134596.9502606, 1737134597.0884042, 1737134597.2391233, 1737134597.3794198, 1737134597.521705, 1737134597.6694703, 1737134597.8128734, 1737134597.94701, 1737134598.089056, 1737134598.242909, 1737134598.3744953, 1737134598.5121949, 1737134598.6557345, 1737134598.792359, 1737134598.9254224, 1737134599.0664518, 1737134599.2073839, 1737134599.3481917, 1737134599.4890256, 1737134599.6287804, 1737134599.7681596, 1737134599.9023547, 1737134600.0406396, 1737134600.1761842, 1737134600.3146555, 1737134600.4635894, 1737134600.6054628, 1737134600.761622, 1737134600.906868, 1737134601.0398633, 1737134601.1720684, 1737134601.3093307, 1737134601.4531333, 1737134601.5903826, 1737134601.7310507, 1737134601.8839633, 1737134602.0173182, 1737134602.1576738, 1737134602.2978554, 1737134602.435426, 1737134602.5801558, 1737134602.7185547, 1737134602.8726416, 1737134603.0276449, 1737134603.1645815, 1737134603.3023896, 1737134603.4478557, 1737134603.5952775, 1737134603.7416773, 1737134603.8855493, 1737134604.031588, 1737134604.1774411, 1737134604.3303924, 1737134604.4710994, 1737134604.6215847, 1737134604.7734962, 1737134604.9190028, 1737134605.0740285, 1737134605.2255552, 1737134605.3773909, 1737134605.52655, 1737134605.669649, 1737134605.8107486, 1737134605.955239, 1737134606.1048865, 1737134606.252061, 1737134606.397054, 1737134606.5758374, 1737134606.7216141, 1737134606.8592896, 1737134606.9912913, 1737134607.1236851, 1737134607.261875, 1737134607.3990338, 1737134607.5670164, 1737134607.6975155, 1737134607.829204, 1737134607.9549093, 1737134608.110341, 1737134608.2403371, 1737134608.3681471, 1737134608.5031257, 1737134608.6336124, 1737134608.7723157, 1737134608.9122934, 1737134609.0448542, 1737134609.1813092, 1737134609.3107738, 1737134609.4467618, 1737134609.585709, 1737134609.7159977, 1737134609.8484693, 1737134609.9783099, 1737134610.1117606, 1737134610.2424998, 1737134610.3736832, 1737134610.5018442, 1737134610.6259513, 1737134610.754898, 1737134610.8848226, 1737134611.0190113, 1737134611.1589873, 1737134611.2851372, 1737134611.4097173, 1737134611.5458806, 1737134611.6749318, 1737134611.8141701, 1737134611.9538627, 1737134612.091839, 1737134612.225759, 1737134612.370564, 1737134612.6020026, 1737134612.7430618, 1737134612.882756, 1737134613.0234468, 1737134613.1721268, 1737134613.3154802, 1737134613.448805, 1737134613.5873203, 1737134613.7208345, 1737134613.8600693, 1737134614.0246067, 1737134614.1605198, 1737134614.2930532, 1737134614.42903, 1737134614.5779948], "score": 0, "output_len": 140, "output": "def f(n):\n    result = []\n    for i in range(1, n+1):\n        if i % 2 == 0:\n            factorial = 1\n            for j in range(1, i+1):\n                factorial *= j\n            result.append(factorial)\n        else:\n            sum_numbers = sum(range(1, i+1))\n            result.append(sum_numbers)\n    return result\n\n# Example usage:\nprint(f(5))  # Output: [1, 2, 6, 24, 15]\n", "input_len": 160}
{"id": "HumanEval/107", "model_memory": 50008.0, "time_taken": 13.954758405685425, "input_kv_memory": 50694.0, "memory_usagetime_metric": [1737134615.1703742, 1737134615.3402927, 1737134615.4636626, 1737134615.586678, 1737134615.7125778, 1737134615.8364217, 1737134615.9562194, 1737134616.0789473, 1737134616.2006483, 1737134616.3306324, 1737134616.459036, 1737134616.5860007, 1737134616.7165241, 1737134616.8440816, 1737134616.9769137, 1737134617.1072965, 1737134617.2367203, 1737134617.3610766, 1737134617.4882894, 1737134617.627902, 1737134617.7602038, 1737134617.890191, 1737134618.0111063, 1737134618.1466112, 1737134618.271486, 1737134618.4011617, 1737134618.5307002, 1737134618.6542192, 1737134618.7781458, 1737134618.9134126, 1737134619.0396965, 1737134619.169129, 1737134619.291258, 1737134619.4202838, 1737134619.5502982, 1737134619.675506, 1737134619.8022346, 1737134619.9349794, 1737134620.0677032, 1737134620.2054443, 1737134620.350019, 1737134620.4764037, 1737134620.6020055, 1737134620.7321992, 1737134620.8596375, 1737134620.9818509, 1737134621.1046133, 1737134621.2361183, 1737134621.3651865, 1737134621.494612, 1737134621.6259465, 1737134621.7593353, 1737134621.879764, 1737134622.0144377, 1737134622.140722, 1737134622.2630882, 1737134622.3903203, 1737134622.520875, 1737134622.653158, 1737134622.7888424, 1737134622.9190845, 1737134623.0398045, 1737134623.1759114, 1737134623.311471, 1737134623.4437902, 1737134623.5773277, 1737134623.7033055, 1737134623.8314114, 1737134623.9610233, 1737134624.0893328, 1737134624.224657, 1737134624.3736036, 1737134624.5201347, 1737134624.6528082, 1737134624.7812786, 1737134624.9176052, 1737134625.0471995, 1737134625.17343, 1737134625.3065228, 1737134625.443734, 1737134625.5790992, 1737134625.745046, 1737134625.874835, 1737134626.0064847, 1737134626.1330414, 1737134626.2731495, 1737134626.4025865, 1737134626.6537771, 1737134626.7859948, 1737134626.9261603, 1737134627.077115, 1737134627.2140005, 1737134627.3471248, 1737134627.4791188, 1737134627.6122437, 1737134627.7632062, 1737134627.9003499, 1737134628.030915, 1737134628.1556797, 1737134628.289379, 1737134628.4232469, 1737134628.5610485, 1737134628.6899908], "score": 0, "output_len": 102, "output": "def even_odd_palindrome(n):\n    even_count = 0\n    odd_count = 0\n    for i in range(1, n + 1):\n        if str(i) == str(i)[::-1]:\n            if i % 2 == 0:\n                even_count += 1\n            else:\n                odd_count += 1\n    return (even_count, odd_count)\n", "input_len": 266}
{"id": "HumanEval/108", "model_memory": 49432.0, "time_taken": 22.240126371383667, "input_kv_memory": 49854.0, "memory_usagetime_metric": [1737134629.1994553, 1737134629.3403351, 1737134629.4738815, 1737134629.6041093, 1737134629.7385004, 1737134629.867954, 1737134630.0028846, 1737134630.129056, 1737134630.2528725, 1737134630.376339, 1737134630.4971323, 1737134630.6155035, 1737134630.7454412, 1737134630.866338, 1737134630.9961295, 1737134631.1319342, 1737134631.2580097, 1737134631.387984, 1737134631.5100973, 1737134631.6373851, 1737134631.7635367, 1737134631.9017212, 1737134632.0453, 1737134632.175597, 1737134632.2971623, 1737134632.428744, 1737134632.5571427, 1737134632.687258, 1737134632.8216193, 1737134632.9453657, 1737134633.0711176, 1737134633.2032914, 1737134633.3342388, 1737134633.4536517, 1737134633.5912218, 1737134633.7188795, 1737134633.8498898, 1737134633.9978645, 1737134634.122528, 1737134634.259081, 1737134634.3958437, 1737134634.5199697, 1737134634.6585479, 1737134634.7836306, 1737134634.9049406, 1737134635.0353987, 1737134635.1565123, 1737134635.2845604, 1737134635.4167259, 1737134635.546799, 1737134635.6716075, 1737134635.8033872, 1737134635.934595, 1737134636.0649714, 1737134636.193912, 1737134636.3263152, 1737134636.4561691, 1737134636.5898874, 1737134636.7190018, 1737134636.8567467, 1737134636.9827092, 1737134637.1182506, 1737134637.249824, 1737134637.378936, 1737134637.510535, 1737134637.635373, 1737134637.7639399, 1737134637.8918123, 1737134638.0317638, 1737134638.172477, 1737134638.309199, 1737134638.438853, 1737134638.5748832, 1737134638.7043765, 1737134638.8424904, 1737134638.9785874, 1737134639.1061003, 1737134639.2384613, 1737134639.376618, 1737134639.5099943, 1737134639.6695712, 1737134639.847505, 1737134639.9843552, 1737134640.1209052, 1737134640.2589362, 1737134640.395512, 1737134640.5298111, 1737134640.6608653, 1737134640.7902577, 1737134640.9215121, 1737134641.059997, 1737134641.1923914, 1737134641.3246992, 1737134641.4641902, 1737134641.5918238, 1737134641.7227054, 1737134641.8532345, 1737134641.9853754, 1737134642.1262293, 1737134642.2699926, 1737134642.4080758, 1737134642.5426466, 1737134642.6726677, 1737134642.8081498, 1737134642.9309978, 1737134643.0672705, 1737134643.2030022, 1737134643.346681, 1737134643.4846432, 1737134643.6312094, 1737134643.76315, 1737134643.889763, 1737134644.0308776, 1737134644.1606848, 1737134644.2947178, 1737134644.4234562, 1737134644.5540311, 1737134644.6952422, 1737134644.8248677, 1737134644.956643, 1737134645.083509, 1737134645.219903, 1737134645.3526256, 1737134645.4940803, 1737134645.6256342, 1737134645.761016, 1737134645.8957946, 1737134646.0375118, 1737134646.1796646, 1737134646.3112795, 1737134646.4506104, 1737134646.5828006, 1737134646.736333, 1737134646.8720903, 1737134647.0009012, 1737134647.1352596, 1737134647.2672315, 1737134647.4105616, 1737134647.55036, 1737134647.6895192, 1737134647.8527303, 1737134647.9927814, 1737134648.1460583, 1737134648.2883687, 1737134648.4249144, 1737134648.8703835, 1737134649.019238, 1737134649.1590593, 1737134649.2919807, 1737134649.4281116, 1737134649.574779, 1737134649.7072747, 1737134649.83646, 1737134649.964914, 1737134650.0965412, 1737134650.2291472, 1737134650.395456, 1737134650.5550413, 1737134650.69373, 1737134650.821677, 1737134650.95315, 1737134651.0892167], "score": 0, "output_len": 161, "output": "def count_nums(arr):\n    count = 0\n    for num in arr:\n        if num >= 0:\n            if sum(int(digit) for digit in str(num)) > 0:\n                count += 1\n        else:\n            if sum(int(digit) for digit in str(abs(num))) > 0:\n                count += 1\n    return count\n\n# Test cases\nprint(count_nums([]))  # Output: 0\nprint(count_nums([-1, 11, -11]))  # Output: 1\nprint(count_nums([1, 1, 2]))  # Output: 3\n", "input_len": 169}
{"id": "HumanEval/109", "model_memory": 50824.0, "time_taken": 10.654738426208496, "input_kv_memory": 51894.0, "memory_usage": [51894.0, 51986.0, 51986.0, 51986.0, 51986.0, 51986.0, 51986.0, 51986.0, 51986.0, 51986.0, 51986.0, 51986.0, 51986.0, 51986.0, 51986.0, 51986.0, 51986.0, 51986.0, 51986.0, 51986.0, 51986.0, 51986.0, 51986.0, 51986.0, 51986.0, 51986.0, 51986.0, 51986.0, 51986.0, 51986.0, 51986.0, 51986.0, 51986.0, 51986.0, 51986.0, 51986.0, 51986.0, 51986.0, 51986.0, 51986.0, 51986.0, 51986.0, 51986.0, 51986.0, 51986.0, 51986.0, 51986.0, 51986.0, 51986.0, 51986.0, 49662.0, 49662.0, 50950.0, 51010.0, 51010.0, 51010.0, 51010.0, 51010.0, 51010.0, 51010.0, 51010.0, 51010.0, 51010.0, 51010.0, 51010.0, 51010.0, 51010.0, 51010.0, 51010.0, 51010.0, 51010.0], "time_metric": [1737134651.7178788, 1737134651.9136605, 1737134652.0526245, 1737134652.1922553, 1737134652.315249, 1737134652.4461424, 1737134652.6036632, 1737134652.7321568, 1737134652.874016, 1737134653.008117, 1737134653.136575, 1737134653.2665918, 1737134653.3929105, 1737134653.515909, 1737134653.654, 1737134653.7925603, 1737134653.9470613, 1737134654.106741, 1737134654.2572246, 1737134654.3938425, 1737134654.541184, 1737134654.6829493, 1737134654.8318996, 1737134654.9665868, 1737134655.1086144, 1737134655.2434208, 1737134655.3884132, 1737134655.5217793, 1737134655.666393, 1737134655.8076904, 1737134655.9517848, 1737134656.0851057, 1737134656.224205, 1737134656.3684406, 1737134656.531801, 1737134656.679322, 1737134656.8175483, 1737134656.9771318, 1737134657.1190972, 1737134657.2610865, 1737134657.4023128, 1737134657.5348866, 1737134657.672052, 1737134657.8075058, 1737134657.9468122, 1737134658.0883923, 1737134658.2315266, 1737134658.3730626, 1737134658.5179987, 1737134658.6624548, 1737134658.8099625, 1737134658.9479089, 1737134659.2546186, 1737134659.40619, 1737134659.5620377, 1737134659.6996884, 1737134659.8448439, 1737134660.005559, 1737134660.1475265, 1737134660.2886007, 1737134660.448299, 1737134660.5964744, 1737134660.7446442, 1737134660.8848631, 1737134661.0270123, 1737134661.170095, 1737134661.3271136, 1737134661.4747574, 1737134661.6235936, 1737134661.7744393, 1737134661.915069], "score": 0, "output_len": 65, "output": "def move_one_ball(arr):\n    if not arr:\n        return True\n\n    sorted_arr = sorted(arr)\n    for i in range(len(arr)):\n        if arr[i] != sorted_arr[i]:\n            return False\n    return True\n", "input_len": 362}
{"id": "HumanEval/110", "model_memory": 49848.0, "time_taken": 15.385243892669678, "input_kv_memory": 50462.0, "memory_usagetime_metric": [1737134662.4675179, 1737134662.6119864, 1737134662.7732635, 1737134662.9129405, 1737134663.056513, 1737134663.1896586, 1737134663.3361065, 1737134663.4789958, 1737134663.619457, 1737134663.7569253, 1737134663.8922148, 1737134664.033568, 1737134664.1711318, 1737134664.3119318, 1737134664.4544864, 1737134664.5964904, 1737134664.7372668, 1737134664.8800156, 1737134665.0200417, 1737134665.1621528, 1737134665.2909985, 1737134665.4237838, 1737134665.565514, 1737134665.7159014, 1737134665.8634448, 1737134665.9969485, 1737134666.1289911, 1737134666.2737725, 1737134666.4152308, 1737134666.551853, 1737134666.697537, 1737134666.8334692, 1737134666.9772196, 1737134667.126844, 1737134667.2705219, 1737134667.409806, 1737134667.5500207, 1737134667.6958778, 1737134667.8394742, 1737134667.9917002, 1737134668.1519482, 1737134668.3028948, 1737134668.4443562, 1737134668.5897746, 1737134668.7246594, 1737134668.8613868, 1737134668.9946969, 1737134669.1334388, 1737134669.277955, 1737134669.423908, 1737134669.5615025, 1737134669.702331, 1737134669.8434248, 1737134669.986045, 1737134670.153279, 1737134670.29196, 1737134670.4328027, 1737134670.5722425, 1737134670.714154, 1737134670.8521223, 1737134670.9941957, 1737134671.1338487, 1737134671.2748199, 1737134671.4220622, 1737134671.5577555, 1737134671.7076316, 1737134671.850525, 1737134672.0125833, 1737134672.1466177, 1737134672.2831736, 1737134672.4259584, 1737134672.565707, 1737134672.708269, 1737134672.864938, 1737134673.0076504, 1737134673.1484675, 1737134673.290013, 1737134673.431727, 1737134673.59326, 1737134673.7976537, 1737134673.9465148, 1737134674.119872, 1737134674.2694514, 1737134674.4947412, 1737134674.657318, 1737134674.8170586, 1737134674.9595082, 1737134675.1170163, 1737134675.2578063, 1737134675.4060688, 1737134675.5625346, 1737134675.7046719, 1737134675.8632941, 1737134676.0007927, 1737134676.1447666, 1737134676.2848544, 1737134676.4288142, 1737134676.5763772, 1737134676.7227728, 1737134676.8664489, 1737134677.0254917, 1737134677.1688476, 1737134677.3143883, 1737134677.463951], "score": 0, "output_len": 78, "output": "```python\ndef exchange(lst1, lst2):\n    even_count = 0\n    for num in lst1:\n        if num % 2 == 0:\n            even_count += 1\n    if even_count == len(lst1):\n        return \"YES\"\n    else:\n        return \"NO\"\n```", "input_len": 234}
{"id": "HumanEval/111", "model_memory": 49516.0, "time_taken": 15.490509510040283, "input_kv_memory": 49976.0, "memory_usagetime_metric": [1737134678.0249984, 1737134678.1704993, 1737134678.3077123, 1737134678.442248, 1737134678.5741384, 1737134678.7055063, 1737134678.8545015, 1737134678.993994, 1737134679.1274052, 1737134679.2650566, 1737134679.4026337, 1737134679.5385215, 1737134679.6748445, 1737134679.812133, 1737134679.9442418, 1737134680.0817692, 1737134680.2284777, 1737134680.3746293, 1737134680.5168, 1737134680.6575375, 1737134680.799118, 1737134680.9436154, 1737134681.0799234, 1737134681.234079, 1737134681.3761413, 1737134681.5171976, 1737134681.6602623, 1737134681.7977345, 1737134681.9340277, 1737134682.0746627, 1737134682.218077, 1737134682.3438165, 1737134682.4702282, 1737134682.6099308, 1737134682.7389288, 1737134682.8669772, 1737134682.9913826, 1737134683.1164775, 1737134683.2480936, 1737134683.3717253, 1737134683.4983673, 1737134683.6415453, 1737134683.7752333, 1737134683.906005, 1737134684.0337868, 1737134684.1600173, 1737134684.288418, 1737134684.415504, 1737134684.540245, 1737134684.6711943, 1737134684.8075142, 1737134684.9387167, 1737134685.0694408, 1737134685.2012737, 1737134685.3330534, 1737134685.472762, 1737134685.6099792, 1737134685.7373545, 1737134685.8650897, 1737134685.997743, 1737134686.131576, 1737134686.2586427, 1737134686.388682, 1737134686.5415695, 1737134686.6867025, 1737134686.818306, 1737134686.9465506, 1737134687.0781696, 1737134687.2093832, 1737134687.3524008, 1737134687.486083, 1737134687.6190279, 1737134687.7512836, 1737134687.87823, 1737134688.0099542, 1737134688.1447415, 1737134688.2726953, 1737134688.4024327, 1737134688.5250201, 1737134688.6589768, 1737134688.7857995, 1737134688.9274068, 1737134689.0686054, 1737134689.2037692, 1737134689.340959, 1737134689.473412, 1737134689.6066587, 1737134689.7426655, 1737134689.8732858, 1737134690.0086734, 1737134690.1427906, 1737134690.3183646, 1737134690.5076, 1737134690.658425, 1737134690.792184, 1737134690.9227877, 1737134691.0556827, 1737134691.1984103, 1737134691.3239498, 1737134691.4630508, 1737134691.589872, 1737134691.727457, 1737134691.8631063, 1737134691.9981613, 1737134692.1393466, 1737134692.2728107, 1737134692.4416478, 1737134692.5956519, 1737134692.737991, 1737134692.8669162, 1737134692.996945, 1737134693.127318], "score": 0, "output_len": 107, "output": "def histogram(test):\n    if not test:\n        return {}\n    \n    letter_count = {}\n    for letter in test.split():\n        letter_count[letter] = letter_count.get(letter, 0) + 1\n    \n    max_count = max(letter_count.values())\n    result = {letter: count for letter, count in letter_count.items() if count == max_count}\n    \n    return result\n", "input_len": 195}
{"id": "HumanEval/112", "model_memory": 49648.0, "time_taken": 9.251231670379639, "input_kv_memory": 50170.0, "memory_usage": [50170.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 49648.0, 49074.0, 49282.0, 50002.0, 50394.0, 50394.0, 50394.0, 50394.0, 50394.0, 50394.0, 50394.0, 50394.0, 50394.0, 50394.0, 50394.0, 50394.0, 50394.0, 50394.0, 50394.0, 50394.0, 50394.0, 50394.0, 50394.0, 50394.0, 50394.0], "time_metric": [1737134693.6775627, 1737134693.8064504, 1737134693.9328015, 1737134694.0581696, 1737134694.1846035, 1737134694.3110704, 1737134694.437001, 1737134694.5716386, 1737134694.7063649, 1737134694.8370442, 1737134694.967929, 1737134695.0936975, 1737134695.2264984, 1737134695.3639824, 1737134695.488355, 1737134695.6156638, 1737134695.7464566, 1737134695.8791547, 1737134696.009054, 1737134696.1321943, 1737134696.2623532, 1737134696.3964953, 1737134696.525461, 1737134696.659043, 1737134696.784796, 1737134696.9146943, 1737134697.051094, 1737134697.1807399, 1737134697.3078647, 1737134697.4327834, 1737134697.5725477, 1737134697.7036161, 1737134697.8415785, 1737134697.971581, 1737134698.114097, 1737134698.245951, 1737134698.3840892, 1737134698.5180786, 1737134698.640853, 1737134698.7700787, 1737134698.9013045, 1737134699.0300076, 1737134699.1596413, 1737134699.2952292, 1737134699.4288952, 1737134699.5550368, 1737134699.7458544, 1737134699.9001813, 1737134700.0565896, 1737134700.1885376, 1737134700.3210022, 1737134700.4519684, 1737134700.5808735, 1737134700.7099953, 1737134700.8367195, 1737134700.9675505, 1737134701.1004362, 1737134701.2258775, 1737134701.3585157, 1737134701.493971, 1737134701.6210275, 1737134701.746091, 1737134701.8745556, 1737134702.0009708, 1737134702.134488, 1737134702.265839, 1737134702.396624, 1737134702.5329983], "score": 0, "output_len": 58, "output": "def reverse_delete(s, c):\n    result = ''.join([char for char in s if char not in c])\n    is_palindrome = result == result[::-1]\n    return (result, is_palindrome)\n", "input_len": 204}
{"id": "HumanEval/113", "model_memory": 49820.0, "time_taken": 17.345563888549805, "input_kv_memory": 50424.0, "memory_usagetime_metric": [1737134703.0514154, 1737134703.1729698, 1737134703.300122, 1737134703.4345596, 1737134703.5971882, 1737134703.739715, 1737134703.8684962, 1737134703.9984653, 1737134704.1204576, 1737134704.2562103, 1737134704.3861153, 1737134704.513281, 1737134704.6351836, 1737134704.7570548, 1737134704.8881364, 1737134705.0191548, 1737134705.1468692, 1737134705.2718678, 1737134705.4046836, 1737134705.524582, 1737134705.6536472, 1737134705.7829394, 1737134705.9086902, 1737134706.0358913, 1737134706.158661, 1737134706.2873938, 1737134706.4270809, 1737134706.5506718, 1737134706.6793315, 1737134706.8056395, 1737134706.9252048, 1737134707.053334, 1737134707.187549, 1737134707.3206873, 1737134707.4621744, 1737134707.593119, 1737134707.726157, 1737134707.8520422, 1737134707.9925764, 1737134708.1121984, 1737134708.2521217, 1737134708.4064133, 1737134708.533953, 1737134708.6720567, 1737134708.7987995, 1737134708.9219067, 1737134709.0494795, 1737134709.180434, 1737134709.312078, 1737134709.44426, 1737134709.5725253, 1737134709.7118223, 1737134709.8386672, 1737134709.9606667, 1737134710.0875318, 1737134710.2130795, 1737134710.351156, 1737134710.480671, 1737134710.612395, 1737134710.7404668, 1737134710.875165, 1737134711.0034764, 1737134711.1296487, 1737134711.2653542, 1737134711.3988082, 1737134711.5296412, 1737134711.6600466, 1737134711.7921755, 1737134711.9357486, 1737134712.0663116, 1737134712.1999059, 1737134712.3287485, 1737134712.4570901, 1737134712.597903, 1737134712.7259946, 1737134712.859323, 1737134712.994817, 1737134713.124013, 1737134713.2616632, 1737134713.3937576, 1737134713.526996, 1737134713.6531475, 1737134713.7884316, 1737134713.9266183, 1737134714.0588834, 1737134714.1974416, 1737134714.3307912, 1737134714.4741864, 1737134714.6041708, 1737134714.7383907, 1737134714.8667345, 1737134714.998546, 1737134715.1317806, 1737134715.275717, 1737134715.4122171, 1737134715.5532877, 1737134715.6815052, 1737134715.82003, 1737134715.9639132, 1737134716.0954049, 1737134716.2273476, 1737134716.359636, 1737134716.501136, 1737134716.6549995, 1737134716.789047, 1737134716.925793, 1737134717.0642478, 1737134717.2027605, 1737134717.3396945, 1737134717.4752502, 1737134717.6121025, 1737134717.7428393, 1737134717.8683848, 1737134718.009083, 1737134718.1423092, 1737134718.2725966, 1737134718.411851, 1737134718.548117, 1737134718.6839814, 1737134718.8214738, 1737134718.9565701, 1737134719.08649, 1737134719.230279, 1737134719.3601542, 1737134719.4994073, 1737134719.6336486, 1737134719.7691197, 1737134719.9055123, 1737134720.0356631], "score": 0, "output_len": 128, "output": "def odd_count(lst):\n    result = []\n    for i, s in enumerate(lst):\n        odd_count = sum(int(digit) % 2 != 0 for digit in s)\n        result.append(f\"the number of odd elements {odd_count} in the str{i+1}ng {i+1} of the input.\")\n    return result\n\n# Test cases\nprint(odd_count(['1234567']))\nprint(odd_count(['3',\"11111111\"]))\n", "input_len": 223}
{"id": "HumanEval/114", "model_memory": 49092.0, "time_taken": 13.656023502349854, "input_kv_memory": 49372.0, "memory_usage": [49372.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49428.0, 49428.0, 49428.0, 49428.0, 49428.0, 49428.0, 49428.0, 49428.0, 49428.0, 49428.0, 49428.0, 49428.0, 49428.0, 49428.0, 49428.0, 49428.0, 49428.0, 49448.0, 49468.0, 49508.0, 49528.0, 49528.0, 49528.0, 49528.0, 49528.0, 49528.0, 49528.0, 49528.0, 49528.0, 49528.0, 49528.0, 49528.0, 49172.0, 49172.0, 48952.0, 49926.0, 50678.0, 50920.0, 50960.0, 50960.0, 50960.0, 50960.0, 50960.0, 50960.0, 50960.0, 50960.0, 50960.0, 50960.0, 50960.0, 50960.0, 50960.0, 50960.0, 50960.0], "time_metric": [1737134720.4712079, 1737134720.6016846, 1737134720.7313976, 1737134720.8539639, 1737134720.9884741, 1737134721.1135852, 1737134721.2357314, 1737134721.3595684, 1737134721.489615, 1737134721.6115317, 1737134721.7457101, 1737134721.8739605, 1737134722.0139942, 1737134722.1376517, 1737134722.2639585, 1737134722.3943818, 1737134722.5176923, 1737134722.6417365, 1737134722.7793949, 1737134722.908263, 1737134723.0333714, 1737134723.1976407, 1737134723.3261223, 1737134723.4467888, 1737134723.588257, 1737134723.7338831, 1737134723.8576922, 1737134723.9880223, 1737134724.110851, 1737134724.2364478, 1737134724.3601153, 1737134724.489077, 1737134724.6165295, 1737134724.758189, 1737134724.9139576, 1737134725.0642853, 1737134725.2192786, 1737134725.3790512, 1737134725.5133936, 1737134725.64055, 1737134725.7704194, 1737134725.8989542, 1737134726.0896218, 1737134726.2078276, 1737134726.3350682, 1737134726.4669986, 1737134726.603722, 1737134726.7307422, 1737134726.8677003, 1737134726.9999402, 1737134727.1637225, 1737134727.3058722, 1737134727.4491637, 1737134727.6138186, 1737134727.7878828, 1737134727.919462, 1737134728.0600076, 1737134728.2023447, 1737134728.3485107, 1737134728.525041, 1737134728.6520936, 1737134728.7865422, 1737134728.9152553, 1737134729.0466228, 1737134729.178633, 1737134729.311573, 1737134729.4393864, 1737134729.5680726, 1737134729.7074556, 1737134729.8335361, 1737134729.9626884, 1737134730.092478, 1737134730.22292, 1737134730.419865, 1737134730.6197212, 1737134730.7668414, 1737134730.8908687, 1737134731.017692, 1737134731.1492732, 1737134731.282658, 1737134731.5343604, 1737134731.7168255, 1737134731.8505373, 1737134731.9809234, 1737134732.1125753, 1737134732.2475739, 1737134732.3924847, 1737134732.5222273, 1737134732.6545026, 1737134732.7834368, 1737134732.9181547, 1737134733.0501819, 1737134733.184516, 1737134733.3204324, 1737134733.4501283, 1737134733.5855439, 1737134733.725178, 1737134733.8520894], "score": 0, "output_len": 97, "output": "def minSubArraySum(nums):\n    if not nums:\n        return 0\n\n    min_sum = nums[0]\n    current_sum = nums[0]\n\n    for num in nums[1:]:\n        current_sum = min(num, current_sum + num)\n        min_sum = min(min_sum, current_sum)\n\n    return min_sum\n", "input_len": 121}
{"id": "HumanEval/115", "model_memory": 50604.0, "time_taken": 10.157963275909424, "input_kv_memory": 51560.0, "memory_usage": [51560.0, 51656.0, 51656.0, 51656.0, 51656.0, 51656.0, 51656.0, 51656.0, 51656.0, 51656.0, 51656.0, 51656.0, 51656.0, 51656.0, 51656.0, 51656.0, 51656.0, 51656.0, 51656.0, 51656.0, 51656.0, 51656.0, 51656.0, 51656.0, 51656.0, 51656.0, 51656.0, 51656.0, 51656.0, 51656.0, 51656.0, 51656.0, 51656.0, 51656.0, 51656.0, 51656.0, 51656.0, 51656.0, 51656.0, 51656.0, 51656.0, 51656.0, 51656.0, 51656.0, 51656.0, 51656.0, 51656.0, 51656.0, 51656.0, 51656.0, 51656.0, 51656.0, 51656.0, 50604.0, 50604.0, 49720.0, 50220.0, 50700.0, 50700.0, 50700.0, 50700.0, 50700.0, 50700.0, 50700.0, 50700.0, 50700.0, 50700.0, 50700.0, 50700.0, 50700.0, 50700.0, 50700.0, 50700.0, 50700.0], "time_metric": [1737134734.4961178, 1737134734.6249828, 1737134734.7441585, 1737134734.8675826, 1737134735.0008943, 1737134735.1296594, 1737134735.254734, 1737134735.3824725, 1737134735.5061686, 1737134735.6328595, 1737134735.7641754, 1737134735.8881357, 1737134736.0082304, 1737134736.129872, 1737134736.257657, 1737134736.3887334, 1737134736.5149739, 1737134736.6427295, 1737134736.7716439, 1737134736.895014, 1737134737.0272222, 1737134737.1562908, 1737134737.2870286, 1737134737.4160304, 1737134737.5483484, 1737134737.6847718, 1737134737.8117976, 1737134737.9447522, 1737134738.0734296, 1737134738.2026072, 1737134738.342379, 1737134738.4787316, 1737134738.6154578, 1737134738.7463343, 1737134738.877135, 1737134739.0039775, 1737134739.1311269, 1737134739.2680554, 1737134739.4013016, 1737134739.5327055, 1737134739.6625934, 1737134739.7925391, 1737134739.9211712, 1737134740.0574503, 1737134740.1933022, 1737134740.3232992, 1737134740.4426832, 1737134740.5767648, 1737134740.7118018, 1737134740.846629, 1737134740.9713273, 1737134741.1026235, 1737134741.231329, 1737134741.3661926, 1737134741.493754, 1737134741.6289058, 1737134741.8146222, 1737134742.0379167, 1737134742.1817238, 1737134742.317608, 1737134742.4452434, 1737134742.5764096, 1737134742.7038453, 1737134742.8460855, 1737134742.978637, 1737134743.108507, 1737134743.251085, 1737134743.3820937, 1737134743.5106058, 1737134743.6468432, 1737134743.779268, 1737134743.9147646, 1737134744.0419722, 1737134744.1654837], "score": 0, "output_len": 74, "output": "def max_fill(grid, capacity):\n    total_fills = 0\n    for row in grid:\n        water_units = sum(row)\n        fills_needed = math.ceil(water_units / capacity)\n        total_fills += fills_needed\n    return total_fills\n", "input_len": 392}
{"id": "HumanEval/116", "model_memory": 49648.0, "time_taken": 7.140642166137695, "input_kv_memory": 50170.0, "memory_usage": [50170.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 49828.0, 49074.0, 49074.0, 50212.0, 50422.0, 50422.0, 50422.0, 50422.0, 50422.0, 50422.0, 50422.0, 50422.0, 50422.0, 50422.0, 50422.0, 50422.0, 50422.0, 50422.0, 50422.0, 50422.0], "time_metric": [1737134744.7027166, 1737134744.827802, 1737134744.9591012, 1737134745.0937166, 1737134745.2239437, 1737134745.3438702, 1737134745.4734643, 1737134745.5935159, 1737134745.717611, 1737134745.8376527, 1737134745.9656014, 1737134746.0990632, 1737134746.2247636, 1737134746.3480258, 1737134746.474796, 1737134746.6376672, 1737134746.76241, 1737134746.8949897, 1737134747.0158103, 1737134747.1435273, 1737134747.2658439, 1737134747.4007678, 1737134747.527878, 1737134747.6501446, 1737134747.782604, 1737134747.9102244, 1737134748.0460153, 1737134748.1769035, 1737134748.3043382, 1737134748.4308531, 1737134748.5568578, 1737134748.6835823, 1737134748.811573, 1737134748.9406834, 1737134749.0707283, 1737134749.1958025, 1737134749.4346464, 1737134749.5673506, 1737134749.6925404, 1737134749.8185918, 1737134749.9469085, 1737134750.0761461, 1737134750.1978068, 1737134750.3302717, 1737134750.45326, 1737134750.57803, 1737134750.705018, 1737134750.834468, 1737134750.957133, 1737134751.0848408, 1737134751.2141871, 1737134751.34164, 1737134751.4837053], "score": 0, "output_len": 32, "output": "def sort_array(arr):\n    return sorted(arr, key=lambda x: (bin(x).count('1'), x))\n", "input_len": 211}
{"id": "HumanEval/117", "model_memory": 49848.0, "time_taken": 11.385793924331665, "input_kv_memory": 50462.0, "memory_usagetime_metric": [1737134752.0219445, 1737134752.1600645, 1737134752.2821825, 1737134752.4118838, 1737134752.5365865, 1737134752.6659563, 1737134752.7871358, 1737134752.9104955, 1737134753.0462096, 1737134753.1711898, 1737134753.3071275, 1737134753.4380918, 1737134753.5722435, 1737134753.7100544, 1737134753.8453352, 1737134753.9754415, 1737134754.1045208, 1737134754.2344286, 1737134754.3690379, 1737134754.4950628, 1737134754.6183271, 1737134754.7477484, 1737134754.87044, 1737134754.9993598, 1737134755.1236372, 1737134755.2508874, 1737134755.389815, 1737134755.5142708, 1737134755.6447122, 1737134755.7750874, 1737134755.9012666, 1737134756.0301652, 1737134756.1625478, 1737134756.2934315, 1737134756.4213374, 1737134756.5504134, 1737134756.6836715, 1737134756.8066905, 1737134756.935873, 1737134757.0684397, 1737134757.195168, 1737134757.3165033, 1737134757.4488833, 1737134757.5799334, 1737134757.7093587, 1737134757.8364494, 1737134757.9782312, 1737134758.1247635, 1737134758.2563977, 1737134758.3929782, 1737134758.5264363, 1737134758.6506026, 1737134758.7713337, 1737134758.9008949, 1737134759.0384438, 1737134759.1691062, 1737134759.3033125, 1737134759.43198, 1737134759.557496, 1737134759.6809285, 1737134759.825091, 1737134759.9698694, 1737134760.0991764, 1737134760.2292943, 1737134760.368173, 1737134760.4936497, 1737134760.623217, 1737134760.8858528, 1737134761.0508966, 1737134761.1769357, 1737134761.3052175, 1737134761.4408467, 1737134761.5686371, 1737134761.711402, 1737134761.8435917, 1737134761.9744456, 1737134762.1112556, 1737134762.240821, 1737134762.377603, 1737134762.5118592, 1737134762.712286, 1737134762.8724897, 1737134763.0255497], "score": 0, "output_len": 81, "output": "```python\ndef select_words(s, n):\n    words = s.split()\n    result = []\n    for word in words:\n        consonants = sum(1 for char in word if char.lower() not in 'aeiou')\n        if consonants == n:\n            result.append(word)\n    return result\n```", "input_len": 233}
{"id": "HumanEval/118", "model_memory": 49648.0, "time_taken": 15.797481298446655, "input_kv_memory": 50170.0, "memory_usagetime_metric": [1737134763.5628226, 1737134763.7208743, 1737134763.8465736, 1737134763.9776995, 1737134764.112011, 1737134764.2400093, 1737134764.3618376, 1737134764.4806805, 1737134764.6027539, 1737134764.7341871, 1737134764.8553295, 1737134764.9842474, 1737134765.1166108, 1737134765.2425945, 1737134765.3675234, 1737134765.5016615, 1737134765.6295586, 1737134765.7626908, 1737134765.8914564, 1737134766.0235698, 1737134766.1534445, 1737134766.2920744, 1737134766.4194777, 1737134766.5600557, 1737134766.6876147, 1737134766.8186185, 1737134766.9406886, 1737134767.0901337, 1737134767.2283282, 1737134767.357502, 1737134767.4799163, 1737134767.6032648, 1737134767.731169, 1737134767.860329, 1737134767.9912114, 1737134768.1161492, 1737134768.2464778, 1737134768.3786924, 1737134768.5112329, 1737134768.640106, 1737134768.7778232, 1737134768.9153664, 1737134769.0439897, 1737134769.1873102, 1737134769.3171983, 1737134769.4457664, 1737134769.5807316, 1737134769.7061815, 1737134769.8357809, 1737134769.9655428, 1737134770.097036, 1737134770.2285645, 1737134770.3610578, 1737134770.491881, 1737134770.6299684, 1737134770.7650218, 1737134770.897994, 1737134771.0212154, 1737134771.1486537, 1737134771.2804089, 1737134771.4113555, 1737134771.5442913, 1737134771.677586, 1737134771.807672, 1737134771.939919, 1737134772.0648031, 1737134772.2003467, 1737134772.3346817, 1737134772.46304, 1737134772.599898, 1737134772.729154, 1737134772.8640292, 1737134772.9915583, 1737134773.1237617, 1737134773.270444, 1737134773.4065318, 1737134773.5382504, 1737134773.6661398, 1737134773.8099988, 1737134773.945601, 1737134774.0774531, 1737134774.2114882, 1737134774.3434985, 1737134774.5049715, 1737134774.7403526, 1737134774.940813, 1737134775.0713818, 1737134775.1975648, 1737134775.3334827, 1737134775.4696467, 1737134775.6073315, 1737134775.7394366, 1737134775.8737955, 1737134776.0071187, 1737134776.1568146, 1737134776.2863731, 1737134776.4204383, 1737134776.7354374, 1737134776.8809872, 1737134777.029504, 1737134777.1621764, 1737134777.300544, 1737134777.4435809, 1737134777.6005855, 1737134777.737828, 1737134777.8727252, 1737134778.0097044, 1737134778.1548777, 1737134778.3113928, 1737134778.4374397, 1737134778.5718648, 1737134778.7058377, 1737134778.844688, 1737134778.9766765], "score": 0, "output_len": 94, "output": "def get_closest_vowel(word):\n    vowels = \"AEIOU\"\n    for i in range(len(word) - 2, 0, -1):\n        if word[i] in vowels and word[i + 1] not in vowels and word[i + 2] not in vowels:\n            return word[i]\n    return \"\"\n", "input_len": 202}
{"id": "HumanEval/119", "model_memory": 49648.0, "time_taken": 11.861328125, "input_kv_memory": 50170.0, "memory_usagetime_metric": [1737134779.518381, 1737134779.6708853, 1737134779.8062613, 1737134779.9418974, 1737134780.0667586, 1737134780.199528, 1737134780.3324153, 1737134780.4661076, 1737134780.590415, 1737134780.7187648, 1737134780.8457766, 1737134780.9727113, 1737134781.1021698, 1737134781.22371, 1737134781.3450367, 1737134781.4823956, 1737134781.6079583, 1737134781.736868, 1737134781.8654275, 1737134782.0031252, 1737134782.1297195, 1737134782.2529962, 1737134782.3794239, 1737134782.5075939, 1737134782.6332157, 1737134782.753058, 1737134782.8922486, 1737134783.0252533, 1737134783.1609511, 1737134783.29079, 1737134783.4208052, 1737134783.548512, 1737134783.6777487, 1737134783.802711, 1737134783.9244423, 1737134784.0511186, 1737134784.1790872, 1737134784.3037784, 1737134784.4340682, 1737134784.5723462, 1737134784.6981072, 1737134784.8274071, 1737134784.9660609, 1737134785.0978987, 1737134785.2354574, 1737134785.3742216, 1737134785.5076125, 1737134785.6344697, 1737134785.7649636, 1737134785.8956127, 1737134786.0290372, 1737134786.1580932, 1737134786.3181577, 1737134786.447628, 1737134786.578525, 1737134786.704441, 1737134786.8414717, 1737134786.9669118, 1737134787.122712, 1737134787.2541046, 1737134787.3846297, 1737134787.515396, 1737134787.6496727, 1737134787.7844145, 1737134787.9159799, 1737134788.0665076, 1737134788.2043264, 1737134788.4226224, 1737134788.5970433, 1737134788.7281504, 1737134788.8603005, 1737134788.985541, 1737134789.1247618, 1737134789.251239, 1737134789.389641, 1737134789.5325122, 1737134789.6713316, 1737134789.8032758, 1737134789.9405224, 1737134790.0747778, 1737134790.2114432, 1737134790.3385391, 1737134790.4710886, 1737134790.5988357, 1737134790.739072, 1737134790.8745205, 1737134791.000458], "score": 0, "output_len": 84, "output": "def match_parens(lst):\n    open_count = 0\n    close_count = 0\n\n    for s in lst:\n        if s == '(':\n            open_count += 1\n        elif s == ')':\n            close_count += 1\n\n    return 'Yes' if open_count == close_count else 'No'\n", "input_len": 211}
{"id": "HumanEval/120", "model_memory": 50008.0, "time_taken": 3.9411067962646484, "input_kv_memory": 50694.0, "memory_usage": [50694.0, 50762.0, 50762.0, 50762.0, 50762.0, 50008.0, 49254.0, 49334.0, 49792.0, 49890.0, 49890.0, 49890.0, 49890.0, 49890.0, 49890.0, 49890.0, 49890.0, 49890.0, 49890.0, 49890.0, 49890.0, 49890.0, 49890.0, 49890.0, 49890.0, 49890.0, 49890.0, 49890.0], "time_metric": [1737134791.5757172, 1737134791.7190585, 1737134791.879365, 1737134792.0063198, 1737134792.12797, 1737134792.251477, 1737134792.3764536, 1737134792.49944, 1737134792.6546597, 1737134792.7815619, 1737134792.910727, 1737134793.03921, 1737134793.165806, 1737134793.3004208, 1737134793.4204624, 1737134793.550868, 1737134793.6794324, 1737134793.8045285, 1737134793.9300182, 1737134794.057571, 1737134794.2094016, 1737134794.3488438, 1737134794.4731255, 1737134794.6042545, 1737134794.7262833, 1737134794.8607545, 1737134794.9916732, 1737134795.1128898], "score": 0, "output_len": 22, "output": "def maximum(arr, k):\n    arr.sort()\n    return arr[:k]\n", "input_len": 266}
{"id": "HumanEval/121", "model_memory": 49136.0, "time_taken": 10.633909702301025, "input_kv_memory": 49436.0, "memory_usagetime_metric": [1737134795.6235495, 1737134795.7569067, 1737134795.901181, 1737134796.025708, 1737134796.162842, 1737134796.2910485, 1737134796.4247675, 1737134796.5558844, 1737134796.6836815, 1737134796.8127246, 1737134796.9424486, 1737134797.0820673, 1737134797.2202094, 1737134797.3477862, 1737134797.4799485, 1737134797.607972, 1737134797.742428, 1737134797.8710473, 1737134797.9965847, 1737134798.1306598, 1737134798.2599318, 1737134798.387535, 1737134798.5179179, 1737134798.6572487, 1737134798.7823234, 1737134798.919787, 1737134799.042046, 1737134799.1732993, 1737134799.3020763, 1737134799.4365277, 1737134799.5630918, 1737134799.6937945, 1737134799.8264775, 1737134799.9581337, 1737134800.079495, 1737134800.207562, 1737134800.3332891, 1737134800.4673293, 1737134800.5942812, 1737134800.7322214, 1737134800.8663447, 1737134800.9974477, 1737134801.1295605, 1737134801.2726927, 1737134801.403598, 1737134801.5316055, 1737134801.659506, 1737134801.788732, 1737134801.9191148, 1737134802.0514016, 1737134802.1899292, 1737134802.3247035, 1737134802.453588, 1737134802.5858655, 1737134802.7207477, 1737134802.8537753, 1737134802.9867783, 1737134803.2513437, 1737134803.4073684, 1737134803.564519, 1737134803.7101693, 1737134803.845401, 1737134803.9775534, 1737134804.1076324, 1737134804.2346141, 1737134804.3649583, 1737134804.4970098, 1737134804.6384144, 1737134804.7789488, 1737134804.9091406, 1737134805.042856, 1737134805.1799293, 1737134805.3420796, 1737134805.4833393, 1737134805.632906, 1737134805.7692063, 1737134805.9057395], "score": 0, "output_len": 42, "output": "def solution(lst):\n    return sum(lst[i] for i in range(1, len(lst), 2) if lst[i] % 2 != 0)\n", "input_len": 134}
{"id": "HumanEval/122", "model_memory": 49512.0, "time_taken": 16.71291422843933, "input_kv_memory": 49974.0, "memory_usagetime_metric": [1737134806.4056113, 1737134806.5395582, 1737134806.673679, 1737134806.7998974, 1737134806.9240391, 1737134807.045892, 1737134807.1759815, 1737134807.3026419, 1737134807.4303806, 1737134807.551823, 1737134807.6807833, 1737134807.809139, 1737134807.9416494, 1737134808.0947528, 1737134808.2165635, 1737134808.3453608, 1737134808.4662535, 1737134808.591003, 1737134808.721623, 1737134808.8481464, 1737134808.9725614, 1737134809.1088095, 1737134809.2310123, 1737134809.3578043, 1737134809.4985013, 1737134809.6240838, 1737134809.7556736, 1737134809.8855305, 1737134810.0282001, 1737134810.161464, 1737134810.2882159, 1737134810.4116356, 1737134810.5375159, 1737134810.6607983, 1737134810.7988446, 1737134810.92364, 1737134811.0488186, 1737134811.1764588, 1737134811.3007352, 1737134811.430394, 1737134811.5594904, 1737134811.6802206, 1737134811.819506, 1737134811.9470658, 1737134812.0828185, 1737134812.2343376, 1737134812.365379, 1737134812.502194, 1737134812.6349814, 1737134812.7661033, 1737134812.9019508, 1737134813.035958, 1737134813.1782231, 1737134813.3224585, 1737134813.4496078, 1737134813.5749094, 1737134813.7048228, 1737134813.8353326, 1737134813.9666061, 1737134814.0990865, 1737134814.233153, 1737134814.3602076, 1737134814.4993188, 1737134814.6320007, 1737134814.765096, 1737134814.9024796, 1737134815.0255551, 1737134815.1680727, 1737134815.2967677, 1737134815.4286518, 1737134815.554769, 1737134815.6861587, 1737134815.8102245, 1737134815.9369261, 1737134816.068122, 1737134816.2076402, 1737134816.3364096, 1737134816.46587, 1737134816.6043534, 1737134816.734561, 1737134816.8679516, 1737134817.0048733, 1737134817.137758, 1737134817.2726011, 1737134817.409176, 1737134817.5393274, 1737134817.6701102, 1737134817.801272, 1737134817.9330008, 1737134818.0788884, 1737134818.2198472, 1737134818.3601193, 1737134818.5381699, 1737134818.6674578, 1737134818.8030524, 1737134818.940874, 1737134819.0854623, 1737134819.216765, 1737134819.3502934, 1737134819.4986084, 1737134819.6332517, 1737134820.032279, 1737134820.1633139, 1737134820.291287, 1737134820.4295423, 1737134820.562561, 1737134820.697594, 1737134820.8286097, 1737134820.9626327, 1737134821.1015716, 1737134821.2267482, 1737134821.3578088, 1737134821.4899528, 1737134821.624264, 1737134821.7545924, 1737134821.8932471, 1737134822.034742, 1737134822.1675518, 1737134822.304694, 1737134822.4372146, 1737134822.5806787, 1737134822.7707863], "score": 0, "output_len": 73, "output": "def add_elements(arr, k):\n    sum_two_digit_elements = 0\n    for i in range(k):\n        if 10 <= arr[i] < 100:\n            sum_two_digit_elements += arr[i]\n    return sum_two_digit_elements\n", "input_len": 174}
{"id": "HumanEval/123", "model_memory": 50048.0, "time_taken": 13.606044054031372, "input_kv_memory": 50754.0, "memory_usagetime_metric": [1737134823.3345132, 1737134823.4552732, 1737134823.5882044, 1737134823.7203903, 1737134823.847722, 1737134823.977088, 1737134824.1038973, 1737134824.2311068, 1737134824.3527334, 1737134824.4857714, 1737134824.6069183, 1737134824.739525, 1737134824.8591974, 1737134824.9882038, 1737134825.1148477, 1737134825.2412374, 1737134825.3704839, 1737134825.4917212, 1737134825.618784, 1737134825.7459998, 1737134825.8754115, 1737134825.9974444, 1737134826.1295893, 1737134826.2567055, 1737134826.3797405, 1737134826.5219548, 1737134826.6458936, 1737134826.774512, 1737134826.909136, 1737134827.0440423, 1737134827.1767387, 1737134827.3055913, 1737134827.4355874, 1737134827.5777602, 1737134827.7111382, 1737134827.8301227, 1737134827.9518955, 1737134828.0816548, 1737134828.2110326, 1737134828.3361201, 1737134828.463451, 1737134828.5902147, 1737134828.7190142, 1737134828.8475592, 1737134828.975991, 1737134829.1096787, 1737134829.240593, 1737134829.3641684, 1737134829.502586, 1737134829.6311946, 1737134829.7683651, 1737134829.9005702, 1737134830.0224125, 1737134830.1476378, 1737134830.280652, 1737134830.4146206, 1737134830.5476937, 1737134830.6845224, 1737134830.8160446, 1737134830.944869, 1737134831.0747838, 1737134831.2042818, 1737134831.3447976, 1737134831.5282495, 1737134831.6989925, 1737134831.859208, 1737134831.9934366, 1737134832.1226306, 1737134832.2521791, 1737134832.383548, 1737134832.5211778, 1737134832.663452, 1737134832.8000865, 1737134832.940797, 1737134833.0738633, 1737134833.2047858, 1737134833.357185, 1737134833.7058015, 1737134833.8334312, 1737134833.9813635, 1737134834.1098175, 1737134834.2576163, 1737134834.4074826, 1737134834.542667, 1737134834.674133, 1737134834.825271, 1737134834.963463, 1737134835.10478, 1737134835.234674, 1737134835.380514, 1737134835.50646, 1737134835.6490831, 1737134835.8282232, 1737134835.9886603, 1737134836.1219811, 1737134836.2541018, 1737134836.3955653, 1737134836.5404823], "score": 0, "output_len": 88, "output": "def get_odd_collatz(n):\n    sequence = [n]\n    while n != 1:\n        if n % 2 == 0:\n            n = n // 2\n        else:\n            n = 3 * n + 1\n        sequence.append(n)\n    return sorted([num for num in sequence if num % 2 != 0])\n", "input_len": 272}
{"id": "HumanEval/124", "model_memory": 50240.0, "time_taken": 25.633430242538452, "input_kv_memory": 51026.0, "memory_usagetime_metric": [1737134837.1741028, 1737134837.3126292, 1737134837.4318829, 1737134837.5530622, 1737134837.6744595, 1737134837.7943022, 1737134837.919455, 1737134838.047509, 1737134838.1708045, 1737134838.3046021, 1737134838.4709287, 1737134838.6115959, 1737134838.737942, 1737134838.91641, 1737134839.0621507, 1737134839.186298, 1737134839.3177445, 1737134839.4530587, 1737134839.5781, 1737134839.7096796, 1737134839.8402662, 1737134839.9629602, 1737134840.1012545, 1737134840.238078, 1737134840.3651738, 1737134840.504564, 1737134840.652578, 1737134840.7981963, 1737134840.9387858, 1737134841.078562, 1737134841.2184517, 1737134841.368491, 1737134841.5002913, 1737134841.6553679, 1737134841.7921283, 1737134841.944979, 1737134842.0867848, 1737134842.2198365, 1737134842.3694658, 1737134842.4944034, 1737134842.6181688, 1737134842.743069, 1737134842.8933058, 1737134843.0423129, 1737134843.188501, 1737134843.3178928, 1737134843.4559708, 1737134843.6148856, 1737134843.7702076, 1737134843.906281, 1737134844.0518515, 1737134844.1907222, 1737134844.3777268, 1737134844.5573363, 1737134844.686871, 1737134844.8281476, 1737134844.9880915, 1737134845.1251805, 1737134845.2802386, 1737134845.42067, 1737134845.5541422, 1737134845.6921666, 1737134845.8561783, 1737134845.98131, 1737134846.1281693, 1737134846.2985613, 1737134846.4640539, 1737134846.5951672, 1737134846.7304206, 1737134846.8728087, 1737134847.0142124, 1737134847.1927404, 1737134847.3292882, 1737134847.5104914, 1737134847.6458817, 1737134847.7849846, 1737134847.9746065, 1737134848.1266398, 1737134848.258064, 1737134848.400999, 1737134848.5330887, 1737134848.710259, 1737134848.847612, 1737134849.0020344, 1737134849.1465433, 1737134849.3232412, 1737134849.4554608, 1737134849.595056, 1737134849.774084, 1737134849.9245937, 1737134850.054827, 1737134850.2367952, 1737134850.3696306, 1737134850.5048354, 1737134850.6891851, 1737134850.8249428, 1737134851.0051093, 1737134851.1480424, 1737134851.3362281, 1737134851.4756432, 1737134851.617797, 1737134851.751873, 1737134851.8804781, 1737134852.0199537, 1737134852.2427151, 1737134852.4245088, 1737134852.5640821, 1737134852.6949074, 1737134852.8236403, 1737134852.9517922, 1737134853.094814, 1737134853.243736, 1737134853.3826108, 1737134853.5165594, 1737134853.7030308, 1737134853.8957167, 1737134854.0490975, 1737134854.1844404, 1737134854.3469985, 1737134854.4802527, 1737134854.6165957, 1737134854.7516608, 1737134854.881146, 1737134855.0274034, 1737134855.2270575, 1737134855.398537, 1737134855.5688498, 1737134855.697934, 1737134855.846574, 1737134855.979497, 1737134856.118364, 1737134856.2628784, 1737134856.3966463, 1737134856.586662, 1737134856.7192624, 1737134856.8698554, 1737134857.0807734, 1737134857.2124252, 1737134857.3540475, 1737134857.5916207, 1737134857.7252746, 1737134857.8622708, 1737134857.9976149, 1737134858.1256561, 1737134858.2721648, 1737134858.4616292, 1737134858.5888584, 1737134858.7228467, 1737134858.8533795, 1737134859.0025103, 1737134859.2330825, 1737134859.3867655, 1737134859.5349615, 1737134859.7776256, 1737134859.9116318, 1737134860.0500026, 1737134860.1920078, 1737134860.3206906, 1737134860.464046, 1737134860.603527, 1737134860.738952, 1737134860.8777945, 1737134861.0169795, 1737134861.1476276, 1737134861.2940016, 1737134861.448608, 1737134861.6050475, 1737134861.74423, 1737134861.875693, 1737134862.0251606, 1737134862.175292, 1737134862.3167238], "score": 0, "output_len": 171, "output": "import datetime\n\ndef valid_date(date):\n    try:\n        month, day, year = map(int, date.split('-'))\n        datetime.datetime(year, month, day)\n        return True\n    except ValueError:\n        return False\n\n# Example usage:\nprint(valid_date('03-11-2000'))  # True\nprint(valid_date('15-01-2012'))   # False\nprint(valid_date('04-0-2040'))    # False\nprint(valid_date('06-04-2020'))   # True\nprint(valid_date('06/04/2020'))   # False\n", "input_len": 330}
{"id": "HumanEval/125", "model_memory": 49460.0, "time_taken": 12.556748867034912, "input_kv_memory": 49892.0, "memory_usagetime_metric": [1737134862.8667495, 1737134862.9922438, 1737134863.1223783, 1737134863.2435737, 1737134863.3933117, 1737134863.5188236, 1737134863.6470027, 1737134863.778653, 1737134863.9092288, 1737134864.032187, 1737134864.1704428, 1737134864.3328981, 1737134864.4676955, 1737134864.5965338, 1737134864.7529068, 1737134864.8868697, 1737134865.033945, 1737134865.1764295, 1737134865.3206263, 1737134865.4725056, 1737134865.6104856, 1737134865.7532313, 1737134865.8967597, 1737134866.043772, 1737134866.1849165, 1737134866.334492, 1737134866.4905047, 1737134866.6319358, 1737134866.7799149, 1737134866.9264517, 1737134867.075634, 1737134867.2220645, 1737134867.3543186, 1737134867.4960601, 1737134867.6438465, 1737134867.8073928, 1737134867.9538262, 1737134868.0798388, 1737134868.2199347, 1737134868.3489003, 1737134868.4724436, 1737134868.5992875, 1737134868.726321, 1737134868.8596265, 1737134868.9881346, 1737134869.115604, 1737134869.2446249, 1737134869.3729794, 1737134869.5162473, 1737134869.6502845, 1737134869.7771585, 1737134869.911338, 1737134870.048535, 1737134870.1815562, 1737134870.3189838, 1737134870.4532137, 1737134870.5986161, 1737134870.7351165, 1737134870.8640835, 1737134871.0023196, 1737134871.1360373, 1737134871.2770834, 1737134871.4097457, 1737134871.5628495, 1737134871.6972587, 1737134871.8354545, 1737134871.9643433, 1737134872.0926812, 1737134872.4020414, 1737134872.533918, 1737134872.70946, 1737134872.953766, 1737134873.100387, 1737134873.2303534, 1737134873.363176, 1737134873.499132, 1737134873.6450074, 1737134873.7740984, 1737134873.9008038, 1737134874.025702, 1737134874.1492646, 1737134874.2753584, 1737134874.402017, 1737134874.5353594, 1737134874.6605728, 1737134874.7916973, 1737134874.9214735, 1737134875.0733082], "score": 0, "output_len": 82, "output": "```python\ndef split_words(txt):\n    if ' ' in txt:\n        return txt.split(' ')\n    elif ',' in txt:\n        return txt.split(',')\n    else:\n        count = sum(1 for char in txt if char.islower() and ord(char) % 2 == 0)\n        return count\n```", "input_len": 186}
{"id": "HumanEval/126", "model_memory": 50244.0, "time_taken": 14.639985084533691, "input_kv_memory": 51050.0, "memory_usagetime_metric": [1737134875.6514037, 1737134875.7819262, 1737134875.9157212, 1737134876.0430777, 1737134876.1827495, 1737134876.3102765, 1737134876.439444, 1737134876.5766966, 1737134876.710879, 1737134876.8407078, 1737134876.9784184, 1737134877.1017318, 1737134877.2318568, 1737134877.359051, 1737134877.4857337, 1737134877.6070437, 1737134877.7360985, 1737134877.8578153, 1737134877.9884868, 1737134878.1296628, 1737134878.2605333, 1737134878.403841, 1737134878.5324218, 1737134878.6602116, 1737134878.7848408, 1737134878.905958, 1737134879.037339, 1737134879.1649544, 1737134879.2879155, 1737134879.4104843, 1737134879.5418417, 1737134879.6708784, 1737134879.795789, 1737134879.9246902, 1737134880.0517683, 1737134880.1902857, 1737134880.317332, 1737134880.448319, 1737134880.5717857, 1737134880.7000592, 1737134880.8332942, 1737134880.963015, 1737134881.0952387, 1737134881.2218187, 1737134881.3514311, 1737134881.4773092, 1737134881.6065745, 1737134881.7350981, 1737134881.8586926, 1737134881.991037, 1737134882.1209633, 1737134882.2495024, 1737134882.385826, 1737134882.5170934, 1737134882.6469955, 1737134882.7747517, 1737134882.9011185, 1737134883.0334694, 1737134883.1618469, 1737134883.2920706, 1737134883.4187493, 1737134883.5508466, 1737134883.6928751, 1737134883.8257458, 1737134883.9745486, 1737134884.1070967, 1737134884.238657, 1737134884.3800802, 1737134884.5060055, 1737134884.6389217, 1737134884.7695923, 1737134884.901027, 1737134885.0356715, 1737134885.1681893, 1737134885.3026078, 1737134885.4294648, 1737134885.5547707, 1737134885.69242, 1737134885.8221142, 1737134885.9530876, 1737134886.0844266, 1737134886.2234855, 1737134886.3552856, 1737134886.490633, 1737134886.6282182, 1737134886.925701, 1737134887.1111834, 1737134887.250543, 1737134887.3817022, 1737134887.6664274, 1737134887.802855, 1737134887.9513319, 1737134888.1332812, 1737134888.2672522, 1737134888.4128742, 1737134888.5398464, 1737134888.6727571, 1737134888.8020542, 1737134888.9364297, 1737134889.064616, 1737134889.1958272, 1737134889.3265831, 1737134889.4568896, 1737134889.5866194, 1737134889.723224, 1737134889.8630779], "score": 0, "output_len": 104, "output": "def is_sorted(lst):\n    if len(lst) <= 1:\n        return True\n\n    prev_num = lst[0]\n    duplicates = 1\n\n    for num in lst[1:]:\n        if num < prev_num:\n            return False\n        if num == prev_num:\n            duplicates += 1\n            if duplicates > 1:\n                return False\n        prev_num = num\n\n    return True\n", "input_len": 304}
{"id": "HumanEval/127", "model_memory": 50184.0, "time_taken": 30.740346670150757, "input_kv_memory": 50950.0, "memory_usagetime_metric": [1737134890.4332964, 1737134890.6128223, 1737134890.7407842, 1737134890.863364, 1737134890.990471, 1737134891.1271207, 1737134891.2531137, 1737134891.3756547, 1737134891.5045488, 1737134891.6351745, 1737134891.7698617, 1737134891.9070494, 1737134892.038325, 1737134892.1691065, 1737134892.299619, 1737134892.4368396, 1737134892.572247, 1737134892.7125375, 1737134892.8399878, 1737134892.9701362, 1737134893.1005988, 1737134893.2366219, 1737134893.3634393, 1737134893.4805439, 1737134893.6052325, 1737134893.731084, 1737134893.8628964, 1737134893.9852035, 1737134894.1196446, 1737134894.2539642, 1737134894.3796382, 1737134894.5084143, 1737134894.6339877, 1737134894.7575235, 1737134894.8844044, 1737134895.013103, 1737134895.147456, 1737134895.2748535, 1737134895.4029653, 1737134895.5281856, 1737134895.653147, 1737134895.7841177, 1737134895.9119194, 1737134896.041577, 1737134896.1695945, 1737134896.3046498, 1737134896.433069, 1737134896.5926967, 1737134896.7180161, 1737134896.8509302, 1737134896.9828024, 1737134897.1167433, 1737134897.2539372, 1737134897.3846145, 1737134897.51976, 1737134897.6472957, 1737134897.789328, 1737134897.92111, 1737134898.0577657, 1737134898.187884, 1737134898.3131495, 1737134898.471464, 1737134898.6005533, 1737134898.728436, 1737134898.8544958, 1737134898.981891, 1737134899.115404, 1737134899.2443619, 1737134899.3744555, 1737134899.498433, 1737134899.628118, 1737134899.759009, 1737134899.8902938, 1737134900.0236304, 1737134900.1539261, 1737134900.289071, 1737134900.423113, 1737134900.5565808, 1737134900.6855211, 1737134900.82053, 1737134900.9637456, 1737134901.0979793, 1737134901.2728243, 1737134901.4122503, 1737134901.5610962, 1737134901.6928248, 1737134901.823709, 1737134901.9557579, 1737134902.088023, 1737134902.218027, 1737134902.3591018, 1737134902.4986992, 1737134902.630976, 1737134902.8122396, 1737134902.9503272, 1737134903.081931, 1737134903.2131605, 1737134903.3467343, 1737134903.4920146, 1737134903.6386054, 1737134903.7718608, 1737134903.9015007, 1737134904.0297446, 1737134904.1755486, 1737134904.3334959, 1737134904.4730315, 1737134904.6146405, 1737134904.7547045, 1737134904.8910105, 1737134905.038287, 1737134905.1786344, 1737134905.3091817, 1737134905.451552, 1737134905.5992904, 1737134905.7355113, 1737134905.8726044, 1737134906.0054753, 1737134906.1364138, 1737134906.2749193, 1737134906.4078088, 1737134906.536881, 1737134906.6785405, 1737134906.803657, 1737134906.9405792, 1737134907.0703142, 1737134907.2036567, 1737134907.344612, 1737134907.4852812, 1737134907.6268752, 1737134907.7560153, 1737134907.8895438, 1737134908.04246, 1737134908.1808507, 1737134908.3109217, 1737134908.4408185, 1737134908.5717528, 1737134908.7104046, 1737134908.8373766, 1737134908.9730453, 1737134909.1027808, 1737134909.241294, 1737134909.3774304, 1737134909.5117664, 1737134909.6507533, 1737134909.790331, 1737134909.9202526, 1737134910.0630028, 1737134910.1999621, 1737134910.3363576, 1737134910.4881864, 1737134910.6181989, 1737134910.7635963, 1737134910.936556, 1737134911.0741494, 1737134911.2164242, 1737134911.3437314, 1737134911.487222, 1737134911.6356928, 1737134911.7686079, 1737134911.9011016, 1737134912.090538, 1737134912.237968, 1737134912.4147177, 1737134912.5478985, 1737134912.6842022, 1737134912.8137758, 1737134912.9435732, 1737134913.0786588, 1737134913.2170393, 1737134913.3548925, 1737134913.4874341, 1737134913.642165, 1737134913.773768, 1737134913.9128797, 1737134914.0562263, 1737134914.1955836, 1737134914.3446348, 1737134914.478597, 1737134914.6173265, 1737134914.7479086, 1737134914.883469, 1737134915.131621, 1737134915.2639718, 1737134915.4161558, 1737134915.6363044, 1737134915.768064, 1737134915.9143064, 1737134916.127971, 1737134916.2691016, 1737134916.40708, 1737134916.550255, 1737134916.7573109, 1737134916.9926507, 1737134917.1283476, 1737134917.2646961, 1737134917.3992496, 1737134917.5356622, 1737134917.7715728, 1737134918.004201, 1737134918.137376, 1737134918.2742376, 1737134918.4137588, 1737134918.6017582, 1737134918.7515643, 1737134918.8877065, 1737134919.0249288, 1737134919.1608815, 1737134919.3066883, 1737134919.4507153, 1737134919.6065156, 1737134919.7525103, 1737134919.8942375, 1737134920.0409608, 1737134920.1919823, 1737134920.3306868, 1737134920.4709325, 1737134920.6171193, 1737134920.7640193], "score": 0, "output_len": 162, "output": "```python\ndef is_prime(n):\n    if n <= 1:\n        return False\n    for i in range(2, int(n**0.5) + 1):\n        if n % i == 0:\n            return False\n    return True\n\ndef intersection(interval1, interval2):\n    start = max(interval1[0], interval2[0])\n    end = min(interval1[1], interval2[1])\n    \n    if start > end:\n        return \"NO\"\n    \n    intersection_length = end - start\n    if is_prime(intersection_length):\n        return \"YES\"\n    else:\n        return \"NO\"\n```\n", "input_len": 300}
{"id": "HumanEval/128", "model_memory": 49260.0, "time_taken": 11.895885705947876, "input_kv_memory": 49620.0, "memory_usage": [49620.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49260.0, 49260.0, 49486.0, 50208.0, 50698.0, 50698.0, 50698.0, 50318.0, 50318.0, 50468.0, 51116.0, 51640.0, 51756.0, 51756.0, 51756.0, 51756.0, 51756.0, 51756.0, 51756.0, 51756.0, 51756.0, 51756.0, 51756.0], "time_metric": [1737134921.2821262, 1737134921.4090967, 1737134921.5330102, 1737134921.65448, 1737134921.7907312, 1737134921.922416, 1737134922.048088, 1737134922.1729155, 1737134922.3002617, 1737134922.4219372, 1737134922.5430567, 1737134922.6714756, 1737134922.7966712, 1737134922.9269238, 1737134923.0480947, 1737134923.1867886, 1737134923.3273518, 1737134923.4698586, 1737134923.6046426, 1737134923.7512262, 1737134923.9065018, 1737134924.034095, 1737134924.1787477, 1737134924.3254552, 1737134924.4690187, 1737134924.600377, 1737134924.74905, 1737134924.8996613, 1737134925.0451329, 1737134925.1923833, 1737134925.3289416, 1737134925.4687796, 1737134925.6177218, 1737134925.743318, 1737134925.877125, 1737134926.0092158, 1737134926.1325438, 1737134926.2619517, 1737134926.3954244, 1737134926.5341325, 1737134926.6744184, 1737134926.8069916, 1737134926.9496906, 1737134927.074508, 1737134927.205957, 1737134927.3301544, 1737134927.4709744, 1737134927.5923905, 1737134927.724601, 1737134927.85449, 1737134927.9833276, 1737134928.1079454, 1737134928.2450953, 1737134928.3771505, 1737134928.5058658, 1737134928.641049, 1737134928.7709785, 1737134928.9004562, 1737134929.0342445, 1737134929.169112, 1737134929.3039682, 1737134929.4385567, 1737134929.576322, 1737134929.7060301, 1737134929.8431242, 1737134930.1018653, 1737134930.2729182, 1737134930.4013186, 1737134930.5303252, 1737134930.6599846, 1737134930.7863111, 1737134930.920304, 1737134931.1329331, 1737134931.3112078, 1737134931.4448466, 1737134931.572024, 1737134931.7038436, 1737134931.8340962, 1737134931.974895, 1737134932.1093373, 1737134932.24892, 1737134932.3819458, 1737134932.5161664, 1737134932.6455297, 1737134932.8272007], "score": 0, "output_len": 83, "output": "def prod_signs(arr):\n    if not arr:\n        return None\n    sign_product = 1\n    for num in arr:\n        if num == 0:\n            return 0\n        sign_product *= 1 if num > 0 else -1\n    return sign_product * sum(abs(num) for num in arr)\n", "input_len": 157}
{"id": "HumanEval/129", "model_memory": 51376.0, "time_taken": 55.73686957359314, "input_kv_memory": 52698.0, "memory_usagetime_metric": [1737134933.5146844, 1737134933.6694865, 1737134933.7941568, 1737134933.9221134, 1737134934.043174, 1737134934.1684039, 1737134934.2948356, 1737134934.419615, 1737134934.5424473, 1737134934.6698582, 1737134934.7950895, 1737134934.923337, 1737134935.0581212, 1737134935.1834946, 1737134935.3139722, 1737134935.436089, 1737134935.5603805, 1737134935.6913016, 1737134935.8287401, 1737134935.9579773, 1737134936.086759, 1737134936.2170775, 1737134936.3436723, 1737134936.4637392, 1737134936.5852387, 1737134936.7067273, 1737134936.8418422, 1737134936.9710577, 1737134937.1221826, 1737134937.2500656, 1737134937.3858778, 1737134937.5240774, 1737134937.6488862, 1737134937.7805653, 1737134937.909139, 1737134938.0471709, 1737134938.1859922, 1737134938.3121994, 1737134938.4470522, 1737134938.5756588, 1737134938.7092304, 1737134938.837186, 1737134938.9652634, 1737134939.0972896, 1737134939.2277727, 1737134939.3532233, 1737134939.4843066, 1737134939.6167047, 1737134939.7452202, 1737134939.878944, 1737134940.0164752, 1737134940.1502483, 1737134940.277788, 1737134940.4068022, 1737134940.5413911, 1737134940.6689034, 1737134940.802663, 1737134940.9270048, 1737134941.0550199, 1737134941.1980999, 1737134941.333074, 1737134941.466207, 1737134941.5942225, 1737134941.7245913, 1737134941.853552, 1737134941.9904816, 1737134942.1175413, 1737134942.2458956, 1737134942.3859448, 1737134942.5445735, 1737134942.6875513, 1737134942.83741, 1737134942.9732206, 1737134943.107028, 1737134943.245198, 1737134943.37809, 1737134943.5336251, 1737134943.6772747, 1737134943.8082576, 1737134943.946048, 1737134944.0830948, 1737134944.2102118, 1737134944.3635254, 1737134944.501525, 1737134944.6319568, 1737134944.7756333, 1737134944.9064493, 1737134945.0419993, 1737134945.1798182, 1737134945.3113043, 1737134945.4392195, 1737134945.570026, 1737134945.7120023, 1737134945.8474293, 1737134945.9778724, 1737134946.109741, 1737134946.2430053, 1737134946.3742342, 1737134946.5127842, 1737134946.645509, 1737134946.7860878, 1737134946.9179802, 1737134947.0494444, 1737134947.1832738, 1737134947.3169408, 1737134947.4530332, 1737134947.5840528, 1737134947.7279696, 1737134947.8640301, 1737134948.0113127, 1737134948.152143, 1737134948.299287, 1737134948.444115, 1737134948.579721, 1737134948.7250485, 1737134948.8607922, 1737134948.996808, 1737134949.1346087, 1737134949.2742727, 1737134949.411756, 1737134949.5384107, 1737134949.6797502, 1737134949.8106048, 1737134949.9429727, 1737134950.0731063, 1737134950.208462, 1737134950.3493948, 1737134950.4884984, 1737134950.6296375, 1737134950.7619083, 1737134950.895037, 1737134951.0291219, 1737134951.171684, 1737134951.3223293, 1737134951.467781, 1737134951.5956268, 1737134951.724679, 1737134951.868149, 1737134952.0060499, 1737134952.1402645, 1737134952.276696, 1737134952.409873, 1737134952.5490408, 1737134952.6811993, 1737134952.8141966, 1737134952.9448724, 1737134953.0833511, 1737134953.2218587, 1737134953.3556383, 1737134953.5042436, 1737134953.6348543, 1737134953.762722, 1737134953.8915787, 1737134954.0349114, 1737134954.1688826, 1737134954.3054051, 1737134954.4346967, 1737134954.5751038, 1737134954.7079046, 1737134954.8466904, 1737134954.9834878, 1737134955.1182294, 1737134955.2588289, 1737134955.479462, 1737134955.6254728, 1737134955.76353, 1737134955.89571, 1737134956.0390818, 1737134956.1797917, 1737134956.3103898, 1737134956.4437187, 1737134956.6008132, 1737134956.7381063, 1737134956.8821325, 1737134957.020354, 1737134957.1685302, 1737134957.2977576, 1737134957.4414377, 1737134957.58969, 1737134957.729857, 1737134957.8706882, 1737134958.0064192, 1737134958.1443481, 1737134958.2800581, 1737134958.4124646, 1737134958.5463314, 1737134958.6901202, 1737134958.8204372, 1737134958.9649634, 1737134959.1100495, 1737134959.2446387, 1737134959.3843174, 1737134959.5282454, 1737134959.672822, 1737134959.807042, 1737134959.9481401, 1737134960.0910916, 1737134960.2275114, 1737134960.3695862, 1737134960.502636, 1737134960.640158, 1737134960.7724295, 1737134960.9043393, 1737134961.043178, 1737134961.181453, 1737134961.3178217, 1737134961.447546, 1737134961.5921931, 1737134961.731392, 1737134961.873105, 1737134962.0122929, 1737134962.1465816, 1737134962.286763, 1737134962.428537, 1737134962.568663, 1737134962.7307465, 1737134962.9620457, 1737134963.105419, 1737134963.246137, 1737134963.3809602, 1737134963.5241823, 1737134963.6653624, 1737134963.805329, 1737134963.949256, 1737134964.093333, 1737134964.2435007, 1737134964.3846948, 1737134964.5233462, 1737134964.661891, 1737134964.8012657, 1737134964.95, 1737134965.0847232, 1737134965.222212, 1737134965.365344, 1737134965.5069706, 1737134965.6491413, 1737134965.7937503, 1737134965.9370122, 1737134966.078953, 1737134966.2186947, 1737134966.3610108, 1737134966.4951644, 1737134966.6318567, 1737134966.7731323, 1737134966.9139323, 1737134967.0654438, 1737134967.206619, 1737134967.3469265, 1737134967.4912307, 1737134967.6296172, 1737134967.7730854, 1737134967.92026, 1737134968.076311, 1737134968.2234695, 1737134968.3672206, 1737134968.5045667, 1737134968.6392765, 1737134968.7789638, 1737134968.9216123, 1737134969.067119, 1737134969.2049177, 1737134969.3670192, 1737134969.5103168, 1737134969.655121, 1737134969.8024256, 1737134969.9459329, 1737134970.0900471, 1737134970.2281623, 1737134970.3693435, 1737134970.5224588, 1737134970.6611047, 1737134970.8138723, 1737134970.9542563, 1737134971.0992534, 1737134971.2481956, 1737134971.397075, 1737134971.5478263, 1737134971.6890454, 1737134971.8335106, 1737134971.9784257, 1737134972.1153123, 1737134972.263858, 1737134972.4257028, 1737134972.565351, 1737134972.7069707, 1737134972.8510754, 1737134972.9905345, 1737134973.1354995, 1737134973.2809086, 1737134973.429584, 1737134973.574221, 1737134973.7105358, 1737134973.857728, 1737134974.0093484, 1737134974.1490993, 1737134974.3008807, 1737134974.4399097, 1737134974.5922112, 1737134974.7323833, 1737134974.8748524, 1737134975.0282414, 1737134975.1751342, 1737134975.3180661, 1737134975.4603105, 1737134975.6150265, 1737134975.7805955, 1737134975.920695, 1737134976.063919, 1737134976.213932, 1737134976.3627198, 1737134976.5054233, 1737134976.655042, 1737134976.7979827, 1737134976.9429548, 1737134977.089181, 1737134977.241419, 1737134977.395305, 1737134977.5479605, 1737134977.690428, 1737134977.8410494, 1737134977.9855847, 1737134978.1376271, 1737134978.2817144, 1737134978.4362764, 1737134978.59417, 1737134978.7436156, 1737134978.893072, 1737134979.0435154, 1737134979.186333, 1737134979.3365798, 1737134979.4912345, 1737134979.640997, 1737134979.78038, 1737134979.93074, 1737134980.1022067, 1737134980.2499712, 1737134980.401697, 1737134980.556391, 1737134980.7066185, 1737134980.86285, 1737134981.0093722, 1737134981.1526694, 1737134981.2991908, 1737134981.44407, 1737134981.5995736, 1737134981.7521977, 1737134981.9062054, 1737134982.064465, 1737134982.2169204, 1737134982.3727021, 1737134982.520438, 1737134982.6739142, 1737134982.8304913, 1737134982.9834063, 1737134983.1297584, 1737134983.284869, 1737134983.4376233, 1737134983.5917108, 1737134983.7461317, 1737134983.898165, 1737134984.0525496, 1737134984.2032497, 1737134984.353902, 1737134984.5086129, 1737134984.6622577, 1737134984.8117847, 1737134984.9620695, 1737134985.286608, 1737134985.634088, 1737134985.8575168, 1737134986.0142033, 1737134986.1630628, 1737134986.3244598, 1737134986.5097954, 1737134986.6659477, 1737134986.8170273, 1737134987.0581896, 1737134987.2260127, 1737134987.3727953, 1737134987.5219119, 1737134987.6930878, 1737134987.8646998, 1737134988.017814, 1737134988.17315, 1737134988.3435347, 1737134988.514176, 1737134988.6726124], "score": 0, "output_len": 386, "output": "def minPath(grid, k):\n    N = len(grid)\n    min_path = []\n    visited = [[False] * N for _ in range(N)]\n\n    def dfs(x, y, path):\n        if len(path) == k:\n            min_path.append(path)\n            return\n        for dx, dy in [(0, 1), (1, 0), (0, -1), (-1, 0)]:\n            nx, ny = x + dx, y + dy\n            if 0 <= nx < N and 0 <= ny < N and not visited[nx][ny]:\n                visited[nx][ny] = True\n                dfs(nx, ny, path + [grid[nx][ny]])\n                visited[nx][ny] = False\n\n    for i in range(N):\n        for j in range(N):\n            if not visited[i][j]:\n                dfs(i, j, [grid[i][j]])\n\n    min_path.sort(key=lambda x: (x, x[0]))\n    return min_path[0]\n\n# Example usage:\ngrid1 = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]\nk1 = 3\nprint(minPath(grid1, k1))  # Output: [1, 2, 1]\n\ngrid2 = [[5, 9, 3], [4, 1, 6], [7, 8, 2]]\nk2 = 1\nprint(minPath(grid2, k2))  # Output: [1]\n", "input_len": 458}
{"id": "HumanEval/130", "model_memory": 50148.0, "time_taken": 17.406628847122192, "input_kv_memory": 50900.0, "memory_usage": [50900.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50972.0, 50148.0, 50148.0, 50402.0, 50402.0, 50402.0, 50402.0, 50402.0, 50402.0, 50402.0, 50402.0, 50402.0, 50402.0, 49578.0, 49578.0, 49758.0, 49832.0, 49832.0, 49832.0, 49832.0, 49832.0, 49832.0, 49832.0, 49832.0, 49832.0, 49832.0, 49832.0, 49832.0, 49832.0, 49832.0], "time_metric": [1737134989.3038106, 1737134989.432156, 1737134989.5546703, 1737134989.686345, 1737134989.8197532, 1737134989.948005, 1737134990.0719545, 1737134990.203195, 1737134990.332903, 1737134990.4608421, 1737134990.5918663, 1737134990.7324073, 1737134990.856784, 1737134990.9868808, 1737134991.1151073, 1737134991.2528975, 1737134991.3809872, 1737134991.5147653, 1737134991.649472, 1737134991.773517, 1737134991.9100404, 1737134992.046156, 1737134992.174187, 1737134992.2975948, 1737134992.4220243, 1737134992.5495677, 1737134992.6799004, 1737134992.8083012, 1737134992.9408703, 1737134993.0656233, 1737134993.1917224, 1737134993.3210194, 1737134993.4483433, 1737134993.6004043, 1737134993.726087, 1737134993.855995, 1737134993.9843793, 1737134994.1154923, 1737134994.2462099, 1737134994.3762965, 1737134994.5004547, 1737134994.62454, 1737134994.7548966, 1737134994.8870366, 1737134995.0139067, 1737134995.1491833, 1737134995.2796407, 1737134995.4101562, 1737134995.5395992, 1737134995.6730988, 1737134995.8043497, 1737134995.9341526, 1737134996.0777943, 1737134996.2166011, 1737134996.3552146, 1737134996.4946668, 1737134996.6487415, 1737134996.7841475, 1737134996.9231174, 1737134997.067144, 1737134997.2108536, 1737134997.3441527, 1737134997.4737303, 1737134997.6120718, 1737134997.740563, 1737134997.8768487, 1737134998.0191453, 1737134998.1808562, 1737134998.3387828, 1737134998.4718637, 1737134998.6032724, 1737134998.7341657, 1737134998.8645616, 1737134999.0103219, 1737134999.1386805, 1737134999.2785585, 1737134999.4122987, 1737134999.5530965, 1737134999.688746, 1737134999.8253639, 1737134999.9590495, 1737135000.0932477, 1737135000.2336328, 1737135000.3699384, 1737135000.5077643, 1737135000.6480472, 1737135000.7829142, 1737135000.9545536, 1737135001.0869794, 1737135001.2189038, 1737135001.350135, 1737135001.4818687, 1737135001.613502, 1737135001.7501059, 1737135001.8854413, 1737135002.0262957, 1737135002.1583247, 1737135002.288592, 1737135002.421863, 1737135002.5525138, 1737135002.7015061, 1737135002.8505435, 1737135002.979274, 1737135003.1118717, 1737135003.2465281, 1737135003.3803601, 1737135003.5120218, 1737135003.6385703, 1737135003.7696524, 1737135003.9002132, 1737135004.0328414, 1737135004.1605625, 1737135004.2969618, 1737135004.4473348, 1737135004.5789158, 1737135004.706133, 1737135004.8459094, 1737135004.975591, 1737135005.1108584, 1737135005.240216, 1737135005.3730865, 1737135005.5014055, 1737135005.6332922, 1737135005.7786753, 1737135005.9066114, 1737135006.036822, 1737135006.1695077, 1737135006.3044145], "score": 0, "output_len": 111, "output": "```python\ndef tri(n):\n    tribonacci = [1, 3]\n    for i in range(2, n + 1):\n        if i % 2 == 0:\n            tribonacci.append(1 + i // 2)\n        else:\n            tribonacci.append(tribonacci[i - 1] + tribonacci[i - 2] + tribonacci[i + 1])\n    return tribonacci\n```", "input_len": 288}
{"id": "HumanEval/131", "model_memory": 49008.0, "time_taken": 11.184341669082642, "input_kv_memory": 49248.0, "memory_usage": [49248.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49008.0, 49008.0, 49172.0, 49488.0, 49488.0, 49488.0, 49488.0, 49488.0, 49488.0, 49488.0, 49488.0, 49488.0, 49234.0, 49234.0, 49286.0, 49666.0, 49714.0, 49714.0, 49714.0, 49714.0, 49714.0, 49714.0, 49714.0, 49714.0, 49714.0, 49714.0, 49714.0, 49714.0, 49714.0], "time_metric": [1737135006.7692244, 1737135006.8924735, 1737135007.022959, 1737135007.1545238, 1737135007.2796915, 1737135007.4097614, 1737135007.5287125, 1737135007.6522593, 1737135007.7749364, 1737135007.9068084, 1737135008.03297, 1737135008.154914, 1737135008.2785022, 1737135008.4169033, 1737135008.5370193, 1737135008.6597953, 1737135008.7926095, 1737135008.9264543, 1737135009.054555, 1737135009.185278, 1737135009.312915, 1737135009.434781, 1737135009.562543, 1737135009.7050092, 1737135009.835357, 1737135009.958979, 1737135010.09007, 1737135010.2133539, 1737135010.3431063, 1737135010.4776506, 1737135010.6059968, 1737135010.7369847, 1737135010.8677127, 1737135010.994809, 1737135011.1255982, 1737135011.2570157, 1737135011.380434, 1737135011.5088203, 1737135011.6407719, 1737135011.770982, 1737135011.9005077, 1737135012.0260386, 1737135012.1707377, 1737135012.2966459, 1737135012.4272254, 1737135012.5536144, 1737135012.6846588, 1737135012.8145144, 1737135012.9484441, 1737135013.0870326, 1737135013.2163358, 1737135013.344251, 1737135013.4703226, 1737135013.598184, 1737135013.7211072, 1737135013.8504097, 1737135013.9807749, 1737135014.1559563, 1737135014.311685, 1737135014.461704, 1737135014.593916, 1737135014.7257113, 1737135014.862762, 1737135014.9898503, 1737135015.1270037, 1737135015.2591145, 1737135015.3890858, 1737135015.5216203, 1737135015.6558468, 1737135015.8894439, 1737135016.0459232, 1737135016.1807826, 1737135016.3109996, 1737135016.4546154, 1737135016.6055632, 1737135016.7350843, 1737135016.866475, 1737135016.9949849, 1737135017.134923, 1737135017.2752934, 1737135017.4065588, 1737135017.533711, 1737135017.6593204], "score": 0, "output_len": 81, "output": "def digits(n):\n    product = 1\n    all_even = True\n    while n > 0:\n        digit = n % 10\n        if digit % 2 != 0:\n            product *= digit\n            all_even = False\n        n //= 10\n    return product if not all_even else 0\n", "input_len": 103}
{"id": "HumanEval/132", "model_memory": 49460.0, "time_taken": 11.062762260437012, "input_kv_memory": 49892.0, "memory_usage": [49892.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49460.0, 49460.0, 49628.0, 50034.0, 50034.0, 50034.0, 50034.0, 50034.0, 50034.0, 50034.0, 50034.0, 50034.0, 50034.0, 49554.0, 49554.0, 50010.0, 50128.0, 50128.0, 50128.0, 50128.0, 50128.0, 50128.0, 50128.0, 50128.0, 50128.0, 50128.0, 50128.0, 50128.0, 50128.0], "time_metric": [1737135018.1275942, 1737135018.2552152, 1737135018.3862152, 1737135018.5148213, 1737135018.6495602, 1737135018.7802203, 1737135018.908949, 1737135019.028606, 1737135019.1532702, 1737135019.2795856, 1737135019.40114, 1737135019.5290744, 1737135019.66463, 1737135019.7968924, 1737135019.9186, 1737135020.0449564, 1737135020.1785786, 1737135020.3092566, 1737135020.4418354, 1737135020.5810099, 1737135020.7119222, 1737135020.8445303, 1737135020.9764063, 1737135021.1043713, 1737135021.2390988, 1737135021.3678193, 1737135021.4986537, 1737135021.6278162, 1737135021.761323, 1737135021.9010015, 1737135022.0324075, 1737135022.1657593, 1737135022.2902873, 1737135022.4251845, 1737135022.555608, 1737135022.6867447, 1737135022.8091393, 1737135022.935949, 1737135023.0731022, 1737135023.2119362, 1737135023.3434486, 1737135023.4692006, 1737135023.6032333, 1737135023.7343116, 1737135023.8686616, 1737135023.9989884, 1737135024.1284792, 1737135024.2578642, 1737135024.3859935, 1737135024.5176888, 1737135024.650982, 1737135024.779317, 1737135024.9112258, 1737135025.0439806, 1737135025.1759453, 1737135025.3841884, 1737135025.5353534, 1737135025.678992, 1737135025.8095021, 1737135025.9428508, 1737135026.0741324, 1737135026.2022583, 1737135026.3324454, 1737135026.4564471, 1737135026.5830429, 1737135026.7154894, 1737135026.848145, 1737135027.1060958, 1737135027.2410357, 1737135027.3663936, 1737135027.503377, 1737135027.6358776, 1737135027.7703424, 1737135027.894218, 1737135028.0370872, 1737135028.1864774, 1737135028.326366, 1737135028.4664147, 1737135028.6012447, 1737135028.7314804, 1737135028.8682518], "score": 0, "output_len": 76, "output": "def is_nested(string):\n    stack = []\n    for char in string:\n        if char == '[':\n            stack.append(char)\n        elif char == ']':\n            if not stack or stack[-1] != '[':\n                return False\n            stack.pop()\n    return bool(stack)\n", "input_len": 189}
{"id": "HumanEval/133", "model_memory": 49648.0, "time_taken": 7.353497743606567, "input_kv_memory": 50170.0, "memory_usage": [50170.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 49674.0, 49648.0, 49648.0, 50124.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 49648.0, 49648.0, 50170.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0], "time_metric": [1737135029.393961, 1737135029.5216846, 1737135029.642702, 1737135029.7784152, 1737135029.9073343, 1737135030.0354273, 1737135030.1580215, 1737135030.2870893, 1737135030.4074423, 1737135030.5314023, 1737135030.657949, 1737135030.7814898, 1737135030.902434, 1737135031.0475683, 1737135031.1647449, 1737135031.2863371, 1737135031.4048064, 1737135031.5390108, 1737135031.6611059, 1737135031.7972667, 1737135031.9220161, 1737135032.0525546, 1737135032.186929, 1737135032.3133256, 1737135032.4433699, 1737135032.5679667, 1737135032.6981328, 1737135032.9174979, 1737135033.0467126, 1737135033.178394, 1737135033.3056448, 1737135033.4328403, 1737135033.5630336, 1737135033.713114, 1737135033.8453584, 1737135033.9762712, 1737135034.114763, 1737135034.2499068, 1737135034.3851566, 1737135034.5160413, 1737135034.7762434, 1737135034.9532647, 1737135035.1046772, 1737135035.2344184, 1737135035.3572905, 1737135035.494397, 1737135035.6211314, 1737135035.7472067, 1737135035.8695188, 1737135035.9994926, 1737135036.1227434, 1737135036.2509544, 1737135036.3840039], "score": 0, "output_len": 32, "output": "def sum_squares(lst):\n    return sum(int(x + 0.5) ** 2 for x in lst)\n", "input_len": 198}
{"id": "HumanEval/134", "model_memory": 49648.0, "time_taken": 9.469343662261963, "input_kv_memory": 50170.0, "memory_usage": [50170.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 49648.0, 49648.0, 49986.0, 49986.0, 49986.0, 49986.0, 49986.0, 49986.0, 49986.0, 49986.0, 49986.0, 49986.0, 49986.0, 49412.0, 49412.0, 49612.0, 49750.0, 49750.0, 49750.0, 49750.0, 49750.0, 49750.0, 49750.0, 49750.0, 49750.0, 49750.0, 49750.0, 49750.0, 49750.0], "time_metric": [1737135036.917952, 1737135037.0956738, 1737135037.2680469, 1737135037.4076507, 1737135037.53905, 1737135037.663363, 1737135037.785646, 1737135037.9195147, 1737135038.051863, 1737135038.1906176, 1737135038.3158052, 1737135038.4386737, 1737135038.5749235, 1737135038.6989665, 1737135038.8265908, 1737135038.958226, 1737135039.0950449, 1737135039.2255974, 1737135039.3516922, 1737135039.4745297, 1737135039.6115127, 1737135039.747664, 1737135039.868786, 1737135040.0025399, 1737135040.133106, 1737135040.2554219, 1737135040.3751204, 1737135040.5020032, 1737135040.6356308, 1737135040.771096, 1737135040.9062333, 1737135041.0307848, 1737135041.1665378, 1737135041.290811, 1737135041.4217136, 1737135041.554262, 1737135041.7006814, 1737135041.8337553, 1737135041.96268, 1737135042.0971797, 1737135042.2311106, 1737135042.3640084, 1737135042.5900486, 1737135042.73703, 1737135042.8624382, 1737135042.9935632, 1737135043.1266928, 1737135043.2536345, 1737135043.3838468, 1737135043.5117986, 1737135043.6357636, 1737135043.7650206, 1737135043.8907468, 1737135044.0358958, 1737135044.1620395, 1737135044.300852, 1737135044.439257, 1737135044.5689065, 1737135044.697733, 1737135044.8293378, 1737135044.9620657, 1737135045.0937192, 1737135045.232952, 1737135045.3667006, 1737135045.4910924, 1737135045.6253166, 1737135045.754109, 1737135045.8843791, 1737135046.0150259], "score": 0, "output_len": 68, "output": "def check_if_last_char_is_a_letter(txt):\n    if not txt:\n        return False\n    last_char = txt[-1]\n    return last_char.isalpha() and not txt[txt.rfind(' ') < len(txt) - 1]\n", "input_len": 209}
{"id": "HumanEval/135", "model_memory": 49176.0, "time_taken": 8.230082035064697, "input_kv_memory": 49496.0, "memory_usage": [49496.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49176.0, 49176.0, 49176.0, 49640.0, 49688.0, 49688.0, 49688.0, 49688.0, 49688.0, 49688.0, 49688.0, 49688.0, 49688.0, 49688.0, 49350.0, 49350.0, 49550.0, 49814.0, 49862.0, 49862.0, 49862.0, 49862.0, 49862.0, 49862.0, 49862.0, 49862.0, 49862.0, 49862.0, 49862.0, 49862.0], "time_metric": [1737135046.5224028, 1737135046.663405, 1737135046.7833328, 1737135046.9116, 1737135047.0462651, 1737135047.1793053, 1737135047.3070304, 1737135047.4407225, 1737135047.5685482, 1737135047.6925864, 1737135047.8241973, 1737135047.9523041, 1737135048.074957, 1737135048.2011247, 1737135048.3441727, 1737135048.4737434, 1737135048.600853, 1737135048.7257009, 1737135048.8455641, 1737135048.9766483, 1737135049.108117, 1737135049.2305415, 1737135049.3627992, 1737135049.4812882, 1737135049.6038768, 1737135049.7363718, 1737135049.8645616, 1737135050.0048177, 1737135050.1369653, 1737135050.2720714, 1737135050.399091, 1737135050.5263562, 1737135050.6528742, 1737135050.8819146, 1737135051.0091367, 1737135051.1353993, 1737135051.2637465, 1737135051.3946805, 1737135051.5174148, 1737135051.6565166, 1737135051.7959611, 1737135051.9368021, 1737135052.0777032, 1737135052.2032154, 1737135052.3330634, 1737135052.470982, 1737135052.6019342, 1737135052.755599, 1737135052.9325354, 1737135053.0871723, 1737135053.2183123, 1737135053.3579175, 1737135053.4887066, 1737135053.625953, 1737135053.7547739, 1737135053.8814936, 1737135054.0139203, 1737135054.1409593, 1737135054.270236, 1737135054.4005554], "score": 0, "output_len": 58, "output": "def can_arrange(arr):\n    max_index = -1\n    for i in range(1, len(arr)):\n        if arr[i] < arr[i-1]:\n            max_index = i\n    return max_index\n", "input_len": 135}
{"id": "HumanEval/136", "model_memory": 49524.0, "time_taken": 14.762588739395142, "input_kv_memory": 49988.0, "memory_usagetime_metric": [1737135054.8673203, 1737135054.9975135, 1737135055.1250353, 1737135055.2516243, 1737135055.3811705, 1737135055.5024757, 1737135055.6262336, 1737135055.7590995, 1737135055.8963494, 1737135056.0273116, 1737135056.1597745, 1737135056.2909946, 1737135056.4115906, 1737135056.5479865, 1737135056.6799428, 1737135056.810625, 1737135056.947753, 1737135057.0954072, 1737135057.2239897, 1737135057.3555684, 1737135057.4863112, 1737135057.6267972, 1737135057.7593994, 1737135057.8842719, 1737135058.0366366, 1737135058.179636, 1737135058.3078856, 1737135058.4331467, 1737135058.5624683, 1737135058.68864, 1737135058.8085854, 1737135058.9416456, 1737135059.0713367, 1737135059.201451, 1737135059.3309512, 1737135059.460486, 1737135059.584406, 1737135059.7125518, 1737135059.846951, 1737135059.9795327, 1737135060.1066155, 1737135060.2414784, 1737135060.368697, 1737135060.4984467, 1737135060.6346247, 1737135060.7620916, 1737135060.8909154, 1737135061.0244389, 1737135061.1562488, 1737135061.2877524, 1737135061.4187956, 1737135061.5545793, 1737135061.6906884, 1737135061.8229902, 1737135061.9546814, 1737135062.0814753, 1737135062.2103057, 1737135062.340246, 1737135062.4738274, 1737135062.6035986, 1737135062.742397, 1737135062.8798833, 1737135063.0025063, 1737135063.1330142, 1737135063.2665637, 1737135063.398085, 1737135063.5297086, 1737135063.659651, 1737135063.792519, 1737135063.9218528, 1737135064.0525107, 1737135064.1830807, 1737135064.3142874, 1737135064.4439325, 1737135064.575186, 1737135064.7078924, 1737135064.8413253, 1737135064.97351, 1737135065.100978, 1737135065.231142, 1737135065.36102, 1737135065.492606, 1737135065.6228049, 1737135065.847188, 1737135065.9848266, 1737135066.1108277, 1737135066.2435539, 1737135066.3832052, 1737135066.5409946, 1737135066.6809578, 1737135066.8158855, 1737135066.955423, 1737135067.0983758, 1737135067.2329264, 1737135067.3617413, 1737135067.495362, 1737135067.7079163, 1737135067.849439, 1737135067.982033, 1737135068.1145368, 1737135068.2516239, 1737135068.3944838, 1737135068.5236588, 1737135068.6538248, 1737135068.7844021, 1737135068.9148781, 1737135069.047766, 1737135069.1787062, 1737135069.3172472], "score": 0, "output_len": 109, "output": "def largest_smallest_integers(lst):\n    largest_neg = None\n    smallest_pos = None\n\n    for num in lst:\n        if num < 0:\n            if largest_neg is None or num > largest_neg:\n                largest_neg = num\n        elif num > 0:\n            if smallest_pos is None or num < smallest_pos:\n                smallest_pos = num\n\n    return (largest_neg, smallest_pos)\n", "input_len": 180}
{"id": "HumanEval/137", "model_memory": 49460.0, "time_taken": 22.60157036781311, "input_kv_memory": 49892.0, "memory_usagetime_metric": [1737135069.8223333, 1737135069.953953, 1737135070.0855055, 1737135070.2234836, 1737135070.3552454, 1737135070.4815218, 1737135070.6018457, 1737135070.7329698, 1737135070.860315, 1737135070.985722, 1737135071.1131372, 1737135071.2547894, 1737135071.382075, 1737135071.5174184, 1737135071.6471138, 1737135071.7687993, 1737135071.889339, 1737135072.0235038, 1737135072.1623657, 1737135072.3053806, 1737135072.4520414, 1737135072.59474, 1737135072.743634, 1737135072.8928418, 1737135073.0286753, 1737135073.1801956, 1737135073.319343, 1737135073.4726336, 1737135073.6042254, 1737135073.7429342, 1737135073.8932679, 1737135074.0251548, 1737135074.1519094, 1737135074.2795553, 1737135074.4093258, 1737135074.5365465, 1737135074.6708813, 1737135074.8216493, 1737135074.9560685, 1737135075.0931728, 1737135075.2227747, 1737135075.3579738, 1737135075.4852145, 1737135075.6269903, 1737135075.7578895, 1737135075.8897173, 1737135076.0191324, 1737135076.1604128, 1737135076.2977242, 1737135076.4310958, 1737135076.5810797, 1737135076.7210739, 1737135076.8565977, 1737135076.988141, 1737135077.1282904, 1737135077.2641475, 1737135077.3927252, 1737135077.528865, 1737135077.6631732, 1737135077.7956197, 1737135077.9327023, 1737135078.1110165, 1737135078.2378914, 1737135078.3657992, 1737135078.503535, 1737135078.6365287, 1737135078.7764354, 1737135078.9235399, 1737135079.0542016, 1737135079.1932945, 1737135079.3241367, 1737135079.504375, 1737135079.6380966, 1737135079.7716084, 1737135079.9045904, 1737135080.0443, 1737135080.1795576, 1737135080.3196993, 1737135080.472784, 1737135080.600795, 1737135080.7350597, 1737135080.8726096, 1737135081.0052783, 1737135081.1393511, 1737135081.2876775, 1737135081.4163892, 1737135081.548064, 1737135081.6828837, 1737135081.8129663, 1737135081.942005, 1737135082.0762453, 1737135082.2167222, 1737135082.3608804, 1737135082.4953563, 1737135082.63612, 1737135082.7927396, 1737135082.9285789, 1737135083.0710645, 1737135083.2004232, 1737135083.3325763, 1737135083.4688563, 1737135083.6050344, 1737135083.8115015, 1737135083.9439456, 1737135084.0830007, 1737135084.2158718, 1737135084.3491166, 1737135084.476571, 1737135084.6135247, 1737135084.742337, 1737135084.8763156, 1737135085.0064917, 1737135085.1462944, 1737135085.2795248, 1737135085.4181767, 1737135085.5506144, 1737135085.760558, 1737135085.906335, 1737135086.0434992, 1737135086.1889849, 1737135086.316936, 1737135086.4510396, 1737135086.5853567, 1737135086.720068, 1737135086.857955, 1737135086.9944491, 1737135087.126759, 1737135087.2614136, 1737135087.3935635, 1737135087.5242493, 1737135087.657095, 1737135087.7873318, 1737135087.9168696, 1737135088.0783396, 1737135088.238407, 1737135088.372742, 1737135088.5161521, 1737135088.644634, 1737135088.7848456, 1737135088.9254076, 1737135089.0585127, 1737135089.1968925, 1737135089.3519084, 1737135089.4951744, 1737135089.6521742, 1737135089.7837312, 1737135089.923745, 1737135090.0552928, 1737135090.1889908, 1737135090.3293884, 1737135090.45884, 1737135090.5941234, 1737135090.7317417, 1737135090.8638906, 1737135091.0094893, 1737135091.1412795, 1737135091.2709646, 1737135091.4045463, 1737135091.536019, 1737135091.6686933, 1737135091.799866, 1737135091.93728, 1737135092.0784533], "score": 0, "output_len": 102, "output": "def compare_one(a, b):\n    try:\n        a = float(a.replace(',', '')) if isinstance(a, str) else a\n        b = float(b.replace(',', '')) if isinstance(b, str) else b\n    except ValueError:\n        return None\n\n    if a > b:\n        return a\n    elif a < b:\n        return b\n    else:\n        return None\n", "input_len": 187}
{"id": "HumanEval/138", "model_memory": 49092.0, "time_taken": 14.862037897109985, "input_kv_memory": 49372.0, "memory_usagetime_metric": [1737135092.5316708, 1737135092.6631854, 1737135092.7894492, 1737135092.9148173, 1737135093.038383, 1737135093.1603942, 1737135093.2905848, 1737135093.4170182, 1737135093.5416791, 1737135093.6630676, 1737135093.7943854, 1737135093.9236033, 1737135094.0639732, 1737135094.2066212, 1737135094.336927, 1737135094.4664307, 1737135094.6003964, 1737135094.7344282, 1737135094.8618164, 1737135094.9928648, 1737135095.1235633, 1737135095.247698, 1737135095.3845904, 1737135095.5195665, 1737135095.6484194, 1737135095.7805727, 1737135095.910207, 1737135096.0473344, 1737135096.172543, 1737135096.3045259, 1737135096.4325447, 1737135096.5662014, 1737135096.6977003, 1737135096.8285296, 1737135096.9576845, 1737135097.0973196, 1737135097.2252762, 1737135097.348947, 1737135097.4817257, 1737135097.6116908, 1737135097.7360144, 1737135097.8644137, 1737135097.9959276, 1737135098.1204293, 1737135098.2571805, 1737135098.3966568, 1737135098.5336254, 1737135098.6679885, 1737135098.7932777, 1737135098.921444, 1737135099.05531, 1737135099.1885147, 1737135099.3165846, 1737135099.4476585, 1737135099.574809, 1737135099.71072, 1737135099.8502066, 1737135099.9834096, 1737135100.1173503, 1737135100.243446, 1737135100.3706472, 1737135100.5252302, 1737135100.6774995, 1737135100.8087928, 1737135100.9374223, 1737135101.0678484, 1737135101.2051568, 1737135101.348096, 1737135101.4822009, 1737135101.6121182, 1737135101.7847586, 1737135101.9293232, 1737135102.0653567, 1737135102.1950026, 1737135102.3277314, 1737135102.4577918, 1737135102.589575, 1737135102.7452064, 1737135102.8810015, 1737135103.0236552, 1737135103.1716595, 1737135103.3064349, 1737135103.4583492, 1737135103.6042538, 1737135103.7365732, 1737135103.8621893, 1737135104.0064871, 1737135104.1330893, 1737135104.2634153, 1737135104.3994012, 1737135104.5452304, 1737135104.6893742, 1737135104.8259904, 1737135104.959402, 1737135105.095622, 1737135105.2248003, 1737135105.4279807, 1737135105.5850377, 1737135105.7235582, 1737135105.857761, 1737135105.9855855, 1737135106.1162853, 1737135106.2490988, 1737135106.37885, 1737135106.523114, 1737135106.6674554, 1737135106.80398, 1737135106.953947, 1737135107.0871675], "score": 0, "output_len": 109, "output": "def is_equal_to_sum_even(n):\n    if n % 2 != 0:\n        return False\n    for i in range(2, n, 2):\n        for j in range(i, n, 2):\n            for k in range(j, n, 2):\n                for l in range(k, n, 2):\n                    if i + j + k + l == n:\n                        return True\n    return False\n", "input_len": 120}
{"id": "HumanEval/139", "model_memory": 49176.0, "time_taken": 8.303833484649658, "input_kv_memory": 49496.0, "memory_usage": [49496.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49176.0, 49176.0, 49296.0, 49554.0, 49554.0, 49554.0, 49554.0, 49554.0, 49554.0, 49554.0, 49554.0, 49554.0, 49554.0, 49216.0, 49216.0, 49276.0, 49594.0, 49594.0, 49594.0, 49594.0, 49594.0, 49594.0, 49594.0, 49594.0, 49594.0, 49594.0, 49594.0, 49594.0, 49594.0, 49594.0], "time_metric": [1737135107.6111095, 1737135107.7318585, 1737135107.859793, 1737135107.9931188, 1737135108.1148214, 1737135108.2422533, 1737135108.370027, 1737135108.4971187, 1737135108.6187959, 1737135108.7387443, 1737135108.868615, 1737135108.9938955, 1737135109.1172457, 1737135109.2460608, 1737135109.386932, 1737135109.519825, 1737135109.6491914, 1737135109.7811732, 1737135109.9075444, 1737135110.0314946, 1737135110.167192, 1737135110.2993205, 1737135110.4237845, 1737135110.5501275, 1737135110.6743608, 1737135110.8006058, 1737135110.935157, 1737135111.0657773, 1737135111.1992419, 1737135111.3243415, 1737135111.4610453, 1737135111.5934975, 1737135111.7317991, 1737135111.8529854, 1737135112.0222287, 1737135112.1763346, 1737135112.3170063, 1737135112.4531827, 1737135112.5876787, 1737135112.7260413, 1737135112.8577988, 1737135112.993164, 1737135113.1233728, 1737135113.2531614, 1737135113.395222, 1737135113.5290992, 1737135113.657172, 1737135113.855424, 1737135114.0082717, 1737135114.1451983, 1737135114.2699, 1737135114.398033, 1737135114.5272186, 1737135114.6535141, 1737135114.783962, 1737135114.914884, 1737135115.0558522, 1737135115.1911697, 1737135115.3197234, 1737135115.445842, 1737135115.580587], "score": 0, "output_len": 60, "output": "def special_factorial(n):\n    if n == 0:\n        return 1\n    result = 1\n    for i in range(n, 0, -1):\n        result *= math.factorial(i)\n    return result\n", "input_len": 136}
{"id": "HumanEval/140", "model_memory": 49256.0, "time_taken": 7.864598035812378, "input_kv_memory": 49616.0, "memory_usage": [49616.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49634.0, 49256.0, 49256.0, 49354.0, 49908.0, 50010.0, 50010.0, 50010.0, 50010.0, 50010.0, 50010.0, 50010.0, 50010.0, 50010.0, 50010.0, 49632.0, 49632.0, 49908.0, 50386.0, 50386.0, 50386.0, 50386.0, 50386.0, 50386.0, 50386.0, 50386.0, 50386.0, 50386.0, 50386.0, 50386.0, 50386.0, 50386.0], "time_metric": [1737135116.0514634, 1737135116.1888366, 1737135116.3157628, 1737135116.4432247, 1737135116.576479, 1737135116.705854, 1737135116.8350053, 1737135116.9575422, 1737135117.087541, 1737135117.2283309, 1737135117.3590748, 1737135117.4820197, 1737135117.6151803, 1737135117.753715, 1737135117.8845332, 1737135118.0235825, 1737135118.1641304, 1737135118.2982078, 1737135118.4279325, 1737135118.5530686, 1737135118.6801655, 1737135118.811738, 1737135118.9442434, 1737135119.064923, 1737135119.1861055, 1737135119.3102036, 1737135119.4329581, 1737135119.568845, 1737135119.6969702, 1737135119.9297411, 1737135120.0535169, 1737135120.1812165, 1737135120.314274, 1737135120.4452314, 1737135120.571084, 1737135120.6985395, 1737135120.8269312, 1737135120.9691238, 1737135121.117553, 1737135121.284274, 1737135121.435056, 1737135121.5626874, 1737135121.6932242, 1737135121.8926148, 1737135122.0424373, 1737135122.1717248, 1737135122.29808, 1737135122.4340684, 1737135122.5669937, 1737135122.6982172, 1737135122.8244154, 1737135122.951755, 1737135123.0806735, 1737135123.2110753, 1737135123.3386807, 1737135123.4719634, 1737135123.5999444], "score": 0, "output_len": 44, "output": "def fix_spaces(text):\n    new_text = text.replace(\"  \", \"-\")\n    new_text = new_text.replace(\" \", \"_\")\n    return new_text\n", "input_len": 147}
{"id": "HumanEval/141", "model_memory": 50008.0, "time_taken": 18.710920095443726, "input_kv_memory": 50694.0, "memory_usagetime_metric": [1737135124.189257, 1737135124.3367934, 1737135124.4973125, 1737135124.6272843, 1737135124.7585235, 1737135124.886637, 1737135125.010162, 1737135125.1325774, 1737135125.2517593, 1737135125.3825226, 1737135125.5237277, 1737135125.6441462, 1737135125.7658591, 1737135125.9007275, 1737135126.0329635, 1737135126.169065, 1737135126.2980657, 1737135126.422759, 1737135126.5512085, 1737135126.6872644, 1737135126.8164222, 1737135126.9457164, 1737135127.0862465, 1737135127.2101142, 1737135127.329398, 1737135127.456202, 1737135127.6000571, 1737135127.7269356, 1737135127.85662, 1737135127.9845257, 1737135128.10355, 1737135128.2282524, 1737135128.3546565, 1737135128.4772894, 1737135128.607117, 1737135128.7421408, 1737135128.8724825, 1737135129.008095, 1737135129.1319175, 1737135129.2611942, 1737135129.3886166, 1737135129.5151026, 1737135129.64944, 1737135129.7922652, 1737135129.9263353, 1737135130.0565, 1737135130.1875086, 1737135130.3126671, 1737135130.4634418, 1737135130.5985065, 1737135130.7456324, 1737135130.8768153, 1737135131.0139804, 1737135131.145992, 1737135131.2890027, 1737135131.4299579, 1737135131.561504, 1737135131.6920276, 1737135131.826571, 1737135131.967463, 1737135132.1067984, 1737135132.2444115, 1737135132.3862505, 1737135132.5248203, 1737135132.6521616, 1737135132.7873359, 1737135132.9483094, 1737135133.0766017, 1737135133.213895, 1737135133.3832707, 1737135133.5446894, 1737135133.6736746, 1737135133.8043594, 1737135133.935161, 1737135134.0687022, 1737135134.2087703, 1737135134.3394592, 1737135134.4728668, 1737135134.60704, 1737135134.7387574, 1737135134.8694668, 1737135135.001659, 1737135135.1284537, 1737135135.260853, 1737135135.3972018, 1737135135.5286467, 1737135135.6596174, 1737135135.7910666, 1737135135.9236624, 1737135136.0518534, 1737135136.1776805, 1737135136.3085718, 1737135136.445836, 1737135136.598113, 1737135136.73213, 1737135136.8632984, 1737135136.9945335, 1737135137.1310089, 1737135137.265876, 1737135137.3984401, 1737135137.5343084, 1737135137.675765, 1737135137.8281233, 1737135137.9730904, 1737135138.1100287, 1737135138.2499647, 1737135138.4810755, 1737135138.6604292, 1737135138.815119, 1737135138.944866, 1737135139.0845897, 1737135139.2145777, 1737135139.3401678, 1737135139.4833958, 1737135139.609172, 1737135139.7384064, 1737135139.8808498, 1737135140.0112755, 1737135140.154262, 1737135140.2936265, 1737135140.4269261, 1737135140.6867464, 1737135140.848908, 1737135140.980847, 1737135141.1114533, 1737135141.2414484, 1737135141.380979, 1737135141.5148847, 1737135141.6511009, 1737135141.7895126, 1737135141.924358, 1737135142.0564547, 1737135142.1886847, 1737135142.3216143, 1737135142.4570124], "score": 0, "output_len": 135, "output": "def file_name_check(file_name):\n    if file_name.count('0'-'9') > 3:\n        return 'No'\n    if file_name.count('.') != 1:\n        return 'No'\n    parts = file_name.split('.')\n    if len(parts) != 2 or not parts[0].isalpha() or not parts[0][0].isalpha():\n        return 'No'\n    if parts[1] not in ['txt', 'exe', 'dll']:\n        return 'No'\n    return 'Yes'\n", "input_len": 267}
{"id": "HumanEval/142", "model_memory": 49648.0, "time_taken": 12.44088077545166, "input_kv_memory": 50170.0, "memory_usage": [50170.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 49648.0, 49648.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 49648.0, 49648.0, 50170.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0], "time_metric": [1737135142.9861908, 1737135143.1152384, 1737135143.236123, 1737135143.369018, 1737135143.5020356, 1737135143.6324692, 1737135143.770795, 1737135143.9046519, 1737135144.0695102, 1737135144.2139518, 1737135144.3464196, 1737135144.4803157, 1737135144.614336, 1737135144.7494843, 1737135144.8985465, 1737135145.032574, 1737135145.1874726, 1737135145.3168824, 1737135145.4464474, 1737135145.5810642, 1737135145.7456753, 1737135145.8883743, 1737135146.0182457, 1737135146.161124, 1737135146.3042114, 1737135146.4523401, 1737135146.5925398, 1737135146.743429, 1737135146.8865964, 1737135147.0260007, 1737135147.1668253, 1737135147.3114688, 1737135147.4604242, 1737135147.6041377, 1737135147.7521966, 1737135147.904497, 1737135148.0473616, 1737135148.211807, 1737135148.3570015, 1737135148.4978065, 1737135148.6691847, 1737135148.8052413, 1737135148.944243, 1737135149.0840807, 1737135149.2499928, 1737135149.385326, 1737135149.52753, 1737135149.66865, 1737135149.828734, 1737135149.9706283, 1737135150.1350832, 1737135150.271153, 1737135150.4090102, 1737135150.555705, 1737135150.8242278, 1737135150.9496512, 1737135151.0786152, 1737135151.206162, 1737135151.329844, 1737135151.4648926, 1737135151.5974028, 1737135151.7362714, 1737135151.88803, 1737135152.0278814, 1737135152.1719425, 1737135152.3417232, 1737135152.5228639, 1737135152.6718702, 1737135152.843823, 1737135152.977622, 1737135153.1135345, 1737135153.4013371, 1737135153.5943196, 1737135153.772192, 1737135153.921948, 1737135154.0603018, 1737135154.214522, 1737135154.3640351, 1737135154.5098145, 1737135154.6544805, 1737135154.7947826, 1737135154.9305766, 1737135155.0670671], "score": 0, "output_len": 81, "output": "```python\ndef sum_squares(lst):\n    total = 0\n    for index, value in enumerate(lst):\n        if index % 3 == 0:\n            total += value ** 2\n        elif index % 4 == 0 and index % 3 != 0:\n            total += value ** 3\n    return total\n```", "input_len": 207}
{"id": "HumanEval/143", "model_memory": 49648.0, "time_taken": 23.08626914024353, "input_kv_memory": 50170.0, "memory_usage": [50170.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50222.0, 50302.0, 50362.0, 50362.0, 50362.0, 50362.0, 50362.0, 50362.0, 50362.0, 50362.0, 50362.0, 50362.0, 50362.0, 50362.0, 50402.0, 50402.0, 50402.0, 50402.0, 50402.0, 50402.0, 50482.0, 50542.0, 50542.0, 50542.0, 50542.0, 50542.0, 50542.0, 50542.0, 50542.0, 50542.0, 50542.0, 50542.0, 50542.0, 50662.0, 50722.0, 50722.0, 50722.0, 50722.0, 50722.0, 50722.0, 50722.0, 49968.0, 49968.0, 50062.0, 50476.0, 50476.0, 50516.0, 50516.0, 50516.0, 50516.0, 50516.0, 50516.0, 50516.0, 50516.0, 50516.0, 50516.0, 50516.0, 50516.0, 50516.0, 50516.0, 50516.0, 49762.0, 49762.0, 50222.0, 50270.0, 50270.0, 50270.0, 50270.0, 50270.0, 50270.0, 50270.0, 50270.0, 50270.0, 50270.0], "time_metric": [1737135155.5963848, 1737135155.7220738, 1737135155.853912, 1737135155.9799814, 1737135156.1229987, 1737135156.2458265, 1737135156.3686523, 1737135156.5138288, 1737135156.6583378, 1737135156.8014154, 1737135156.9466782, 1737135157.0932777, 1737135157.237894, 1737135157.3760984, 1737135157.5291095, 1737135157.668678, 1737135157.8152733, 1737135157.9543946, 1737135158.0932097, 1737135158.2424474, 1737135158.3798857, 1737135158.5312912, 1737135158.6563396, 1737135158.7917717, 1737135158.92022, 1737135159.0513344, 1737135159.1796646, 1737135159.3032906, 1737135159.4222553, 1737135159.5537102, 1737135159.6795938, 1737135159.8044853, 1737135159.9263833, 1737135160.05614, 1737135160.1860404, 1737135160.3117363, 1737135160.440237, 1737135160.5742502, 1737135160.699701, 1737135160.829297, 1737135161.0049183, 1737135161.1522427, 1737135161.310693, 1737135161.4645226, 1737135161.5912979, 1737135161.722941, 1737135161.8439267, 1737135161.984877, 1737135162.115032, 1737135162.2434063, 1737135162.3749733, 1737135162.5069547, 1737135162.6451833, 1737135162.7708147, 1737135162.9035497, 1737135163.028054, 1737135163.1605506, 1737135163.2940068, 1737135163.421245, 1737135163.5498984, 1737135163.6896942, 1737135163.8350017, 1737135163.9586089, 1737135164.0905743, 1737135164.2237935, 1737135164.3623948, 1737135164.4928524, 1737135164.6300783, 1737135164.7598622, 1737135164.8903098, 1737135165.0154662, 1737135165.1459742, 1737135165.2759774, 1737135165.4185693, 1737135165.545454, 1737135165.6742396, 1737135165.8079472, 1737135165.9447992, 1737135166.0731149, 1737135166.202468, 1737135166.3420682, 1737135166.48082, 1737135166.6259382, 1737135166.7643163, 1737135166.9053748, 1737135167.0320196, 1737135167.1654248, 1737135167.2987876, 1737135167.4420137, 1737135167.5880566, 1737135167.7243218, 1737135167.860326, 1737135167.9938984, 1737135168.170276, 1737135168.3020604, 1737135168.4300435, 1737135168.5653389, 1737135168.7021601, 1737135168.841811, 1737135168.979321, 1737135169.1146946, 1737135169.2487257, 1737135169.3867788, 1737135169.527842, 1737135169.685107, 1737135169.853261, 1737135170.0052557, 1737135170.144752, 1737135170.2757363, 1737135170.4124172, 1737135170.5520153, 1737135170.6856072, 1737135170.819526, 1737135170.953413, 1737135171.079445, 1737135171.2252805, 1737135171.365452, 1737135171.4974732, 1737135171.6354766, 1737135171.768137, 1737135171.8981023, 1737135172.0377767, 1737135172.1770625, 1737135172.3111217, 1737135172.4453232, 1737135172.5783207, 1737135172.729952, 1737135172.871391, 1737135173.0059144, 1737135173.1390424, 1737135173.2743993, 1737135173.406094, 1737135173.547599, 1737135173.6879323, 1737135173.8209498, 1737135174.0365038, 1737135174.2217996, 1737135174.3509848, 1737135174.478767, 1737135174.6065116, 1737135174.743548, 1737135174.8876984, 1737135175.0298243, 1737135175.1670814, 1737135175.3037124, 1737135175.440674, 1737135175.6011462, 1737135175.7502632, 1737135175.8860035, 1737135176.0134692, 1737135176.145231, 1737135176.2903757, 1737135176.4409728, 1737135176.580568, 1737135176.8994038, 1737135177.070349, 1737135177.2050126, 1737135177.335971, 1737135177.4705677, 1737135177.6057928, 1737135177.7376614, 1737135177.8703606, 1737135178.0189645, 1737135178.163016, 1737135178.2992935], "score": 0, "output_len": 165, "output": "def is_prime(n):\n    if n <= 1:\n        return False\n    for i in range(2, int(n**0.5) + 1):\n        if n % i == 0:\n            return False\n    return True\n\ndef words_in_sentence(sentence):\n    words = sentence.split()\n    prime_words = [word for word in words if is_prime(len(word))]\n    return ' '.join(prime_words)\n\n# Example usage:\nprint(words_in_sentence(\"This is a test\"))  # Output: \"is\"\nprint(words_in_sentence(\"lets go for swimming\"))  # Output: \"go for\"\n", "input_len": 199}
{"id": "HumanEval/144", "model_memory": 49516.0, "time_taken": 12.693469762802124, "input_kv_memory": 49976.0, "memory_usagetime_metric": [1737135178.8611429, 1737135178.9904141, 1737135179.1192405, 1737135179.2485118, 1737135179.3805323, 1737135179.5145528, 1737135179.638057, 1737135179.7669191, 1737135179.9015234, 1737135180.0291512, 1737135180.1574266, 1737135180.2805948, 1737135180.4015667, 1737135180.530755, 1737135180.654245, 1737135180.7832344, 1737135180.926979, 1737135181.054969, 1737135181.1792629, 1737135181.3079257, 1737135181.4298117, 1737135181.5657313, 1737135181.6915371, 1737135181.8224423, 1737135181.949599, 1737135182.0736394, 1737135182.2031813, 1737135182.3325043, 1737135182.4642658, 1737135182.5958917, 1737135182.7172945, 1737135182.8556855, 1737135182.9821389, 1737135183.1029856, 1737135183.2239962, 1737135183.3513541, 1737135183.4864821, 1737135183.6153257, 1737135183.7417839, 1737135183.8734477, 1737135184.003035, 1737135184.126456, 1737135184.2608771, 1737135184.3800447, 1737135184.507961, 1737135184.6377075, 1737135184.792241, 1737135184.9319737, 1737135185.0652196, 1737135185.1977167, 1737135185.3340392, 1737135185.4664667, 1737135185.607093, 1737135185.7396388, 1737135185.8707643, 1737135186.0307612, 1737135186.1589053, 1737135186.2939594, 1737135186.422305, 1737135186.5535226, 1737135186.8107543, 1737135186.9809587, 1737135187.1540995, 1737135187.2823865, 1737135187.4125931, 1737135187.5516057, 1737135187.6832, 1737135187.8127723, 1737135187.9449224, 1737135188.0750728, 1737135188.2043118, 1737135188.3469937, 1737135188.4813688, 1737135188.6109655, 1737135188.7482371, 1737135188.8803728, 1737135189.0200155, 1737135189.14982, 1737135189.2824342, 1737135189.4167259, 1737135189.5450058, 1737135189.7053876, 1737135189.842397, 1737135189.9781313, 1737135190.110202, 1737135190.244128, 1737135190.373092, 1737135190.5048509, 1737135190.6323535, 1737135190.7635267, 1737135190.895948, 1737135191.0272477, 1737135191.166453], "score": 0, "output_len": 92, "output": "import fractions\n\ndef simplify(x, n):\n    frac_x = fractions.Fraction(x.split('/')[0], x.split('/')[1])\n    frac_n = fractions.Fraction(n.split('/')[0], n.split('/')[1])\n    result = frac_x * frac_n\n    return result.denominator == 1\n", "input_len": 194}
{"id": "HumanEval/145", "model_memory": 49260.0, "time_taken": 17.005417585372925, "input_kv_memory": 49640.0, "memory_usage": [49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49680.0, 49680.0, 49680.0, 49680.0, 49680.0, 49680.0, 49680.0, 49680.0, 49680.0, 49680.0, 49680.0, 49680.0, 49680.0, 49680.0, 49680.0, 49680.0, 49680.0, 49680.0, 49680.0, 49680.0, 49720.0, 49720.0, 49720.0, 49720.0, 49720.0, 49720.0, 49720.0, 49720.0, 49720.0, 49720.0, 49720.0, 49720.0, 49720.0, 49720.0, 49720.0, 49760.0, 49760.0, 49760.0, 49760.0, 49760.0, 49760.0, 49760.0, 49760.0, 49760.0, 49760.0, 49760.0, 49780.0, 49780.0, 49780.0, 49780.0, 49780.0, 49780.0, 49780.0, 49780.0, 49780.0, 49340.0, 49340.0, 49560.0, 49720.0, 49720.0, 49720.0, 49720.0, 49720.0, 49720.0, 49720.0, 49720.0, 49720.0, 49720.0, 49740.0, 49740.0, 49740.0, 49740.0, 49740.0, 49740.0, 49740.0, 49740.0, 49740.0, 49740.0, 49300.0, 49300.0, 49660.0, 49700.0, 49700.0, 49700.0, 49700.0, 49700.0, 49700.0, 49700.0, 49700.0, 49700.0], "time_metric": [1737135191.6326723, 1737135191.7640116, 1737135191.8928785, 1737135192.0230353, 1737135192.155886, 1737135192.2923872, 1737135192.4280508, 1737135192.5556934, 1737135192.6781552, 1737135192.8043008, 1737135192.93114, 1737135193.0551686, 1737135193.1853786, 1737135193.3151617, 1737135193.4360626, 1737135193.5554638, 1737135193.685944, 1737135193.8223183, 1737135193.9570985, 1737135194.0881648, 1737135194.2132044, 1737135194.340331, 1737135194.4776351, 1737135194.6043406, 1737135194.7254462, 1737135194.8542647, 1737135194.9892173, 1737135195.1091714, 1737135195.2397766, 1737135195.382943, 1737135195.5194972, 1737135195.649946, 1737135195.7779105, 1737135195.912269, 1737135196.0447762, 1737135196.1764758, 1737135196.3182402, 1737135196.4569802, 1737135196.6096382, 1737135196.7466583, 1737135196.8924465, 1737135197.0209842, 1737135197.148719, 1737135197.2822843, 1737135197.4135866, 1737135197.5497732, 1737135197.6754262, 1737135197.8361232, 1737135197.9658704, 1737135198.096819, 1737135198.2607644, 1737135198.3919845, 1737135198.525343, 1737135198.6550372, 1737135198.7839615, 1737135198.9163146, 1737135199.0489154, 1737135199.1864395, 1737135199.337213, 1737135199.4702978, 1737135199.6015706, 1737135199.7338088, 1737135199.8705065, 1737135200.0403507, 1737135200.1737456, 1737135200.309379, 1737135200.4405587, 1737135200.567583, 1737135200.6880236, 1737135200.820287, 1737135200.9519017, 1737135201.0838988, 1737135201.222364, 1737135201.3619657, 1737135201.5017629, 1737135201.6855192, 1737135201.849927, 1737135201.9768703, 1737135202.1018248, 1737135202.2290242, 1737135202.3651528, 1737135202.4935663, 1737135202.6353364, 1737135202.810529, 1737135202.9867823, 1737135203.1198037, 1737135203.2534895, 1737135203.396315, 1737135203.6060495, 1737135203.7879734, 1737135203.916193, 1737135204.05594, 1737135204.1949272, 1737135204.3238146, 1737135204.462733, 1737135204.6005623, 1737135204.780601, 1737135204.9284692, 1737135205.1201582, 1737135205.3085425, 1737135205.4521527, 1737135205.6528084, 1737135205.7995014, 1737135205.9303687, 1737135206.071344, 1737135206.208194, 1737135206.3352149, 1737135206.4684508, 1737135206.5963948, 1737135206.737005, 1737135206.979028, 1737135207.1524982, 1737135207.283935, 1737135207.419222, 1737135207.5649512, 1737135207.7087102, 1737135207.8422914, 1737135208.0145936, 1737135208.1676378, 1737135208.3137205], "score": 0, "output_len": 73, "output": "def order_by_points(nums):\n    def sum_of_digits(n):\n        return sum(int(digit) for digit in str(abs(n)))\n\n    return sorted(nums, key=lambda x: (sum_of_digits(x), nums.index(x)))\n", "input_len": 162}
{"id": "HumanEval/146", "model_memory": 49260.0, "time_taken": 11.62465214729309, "input_kv_memory": 49620.0, "memory_usage": [49620.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49680.0, 49700.0, 49700.0, 49700.0, 49700.0, 49700.0, 49260.0, 49260.0, 49920.0, 49920.0, 49920.0, 49920.0, 49920.0, 49920.0, 49920.0, 49920.0, 49920.0, 49920.0, 49920.0, 49920.0, 49920.0, 49920.0, 49920.0, 49920.0, 49920.0, 49920.0, 49920.0, 49920.0, 49960.0, 49980.0, 49980.0, 49980.0, 49980.0, 49980.0, 49540.0, 49580.0, 50204.0, 50260.0, 50260.0, 50260.0, 50260.0], "time_metric": [1737135208.8317888, 1737135208.9665895, 1737135209.0870173, 1737135209.2102628, 1737135209.3319356, 1737135209.4593716, 1737135209.600048, 1737135209.7239935, 1737135209.8635736, 1737135209.9989686, 1737135210.146101, 1737135210.288418, 1737135210.429402, 1737135210.5704153, 1737135210.7080498, 1737135210.860079, 1737135211.002841, 1737135211.143945, 1737135211.2871537, 1737135211.4683557, 1737135211.6065369, 1737135211.7348971, 1737135211.8604121, 1737135211.982826, 1737135212.1079478, 1737135212.2415729, 1737135212.387725, 1737135212.5218158, 1737135212.6652806, 1737135212.805762, 1737135212.955339, 1737135213.0987375, 1737135213.235691, 1737135213.3689046, 1737135213.5006168, 1737135213.6293597, 1737135213.787228, 1737135213.934696, 1737135214.0734336, 1737135214.2284982, 1737135214.3817165, 1737135214.542089, 1737135214.6739643, 1737135214.8302996, 1737135214.9649658, 1737135215.1196651, 1737135215.4001799, 1737135215.5323315, 1737135215.6731052, 1737135215.8011935, 1737135215.9321773, 1737135216.0713584, 1737135216.1946602, 1737135216.3236747, 1737135216.4523313, 1737135216.6084092, 1737135216.7793794, 1737135216.9370131, 1737135217.068039, 1737135217.1986182, 1737135217.3314404, 1737135217.4613566, 1737135217.636936, 1737135217.7950425, 1737135217.9461966, 1737135218.114358, 1737135218.2483752, 1737135218.4390278, 1737135218.5702162, 1737135218.7205877, 1737135218.8615847, 1737135219.0411568, 1737135219.175425, 1737135219.3106549, 1737135219.5899577, 1737135219.725039, 1737135219.8547537, 1737135219.9789944, 1737135220.1086895], "score": 0, "output_len": 78, "output": "def specialFilter(nums):\n    count = 0\n    for num in nums:\n        if num > 10 and int(str(abs(num))[0]) % 2 != 0 and int(str(abs(num))[-1]) % 2 != 0:\n            count += 1\n    return count\n", "input_len": 160}
{"id": "HumanEval/147", "model_memory": 49820.0, "time_taken": 16.88080143928528, "input_kv_memory": 50424.0, "memory_usagetime_metric": [1737135220.6711268, 1737135220.805642, 1737135220.9453895, 1737135221.0754695, 1737135221.209952, 1737135221.3389413, 1737135221.467972, 1737135221.5958412, 1737135221.7330852, 1737135221.8978765, 1737135222.0346956, 1737135222.162028, 1737135222.2952995, 1737135222.431347, 1737135222.5561569, 1737135222.6885762, 1737135222.8176565, 1737135222.9516287, 1737135223.0820901, 1737135223.210651, 1737135223.3422725, 1737135223.4634597, 1737135223.6042595, 1737135223.7315042, 1737135223.856642, 1737135223.9856305, 1737135224.1074681, 1737135224.2328436, 1737135224.3546798, 1737135224.49517, 1737135224.6237907, 1737135224.7516596, 1737135224.8804507, 1737135225.0051844, 1737135225.1282454, 1737135225.2586362, 1737135225.395274, 1737135225.5204444, 1737135225.6496463, 1737135225.7779791, 1737135225.9191964, 1737135226.0615103, 1737135226.191737, 1737135226.3264375, 1737135226.4546244, 1737135226.6047065, 1737135226.7876475, 1737135226.961371, 1737135227.0969195, 1737135227.227801, 1737135227.3498495, 1737135227.4790254, 1737135227.6060398, 1737135227.733822, 1737135227.8569949, 1737135227.9822881, 1737135228.1075525, 1737135228.2387767, 1737135228.3657339, 1737135228.5018384, 1737135228.6281066, 1737135228.7728698, 1737135228.9077613, 1737135229.0488439, 1737135229.186584, 1737135229.317856, 1737135229.4839306, 1737135229.615333, 1737135229.7624323, 1737135229.8900914, 1737135230.0194414, 1737135230.147876, 1737135230.273685, 1737135230.4009244, 1737135230.533592, 1737135230.6601272, 1737135230.7865467, 1737135230.9208572, 1737135231.0557568, 1737135231.1917715, 1737135231.3326342, 1737135231.5120337, 1737135231.638254, 1737135231.776975, 1737135231.9533322, 1737135232.1087048, 1737135232.2352915, 1737135232.3681066, 1737135232.500192, 1737135232.7661107, 1737135232.9105608, 1737135233.039325, 1737135233.1762023, 1737135233.3062882, 1737135233.436704, 1737135233.571678, 1737135233.6977246, 1737135233.8245668, 1737135233.963608, 1737135234.09376, 1737135234.2227457, 1737135234.3510447, 1737135234.4857, 1737135234.6235938, 1737135234.758073, 1737135234.8985825, 1737135235.0362244, 1737135235.1879108, 1737135235.3172407, 1737135235.4597483, 1737135235.609315, 1737135235.7403402, 1737135235.8750656, 1737135236.0173376, 1737135236.158664, 1737135236.298436, 1737135236.4341748, 1737135236.575408, 1737135236.8465836, 1737135236.9893274, 1737135237.1403253], "score": 0, "output_len": 117, "output": "def get_max_triples(n):\n    a = [(i * i - i + 1) for i in range(1, n + 1)]\n    count = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            for k in range(j + 1, n):\n                if (a[i] + a[j] + a[k]) % 3 == 0:\n                    count += 1\n    return count\n", "input_len": 217}
{"id": "HumanEval/148", "model_memory": 50048.0, "time_taken": 22.018107175827026, "input_kv_memory": 50754.0, "memory_usagetime_metric": [1737135237.7369208, 1737135237.8888464, 1737135238.0409803, 1737135238.18517, 1737135238.3114984, 1737135238.4405468, 1737135238.5705447, 1737135238.6940649, 1737135238.8137162, 1737135238.9343665, 1737135239.0641491, 1737135239.1954937, 1737135239.3215995, 1737135239.447926, 1737135239.5704255, 1737135239.690493, 1737135239.8205392, 1737135239.9555023, 1737135240.0819905, 1737135240.219868, 1737135240.337375, 1737135240.4700098, 1737135240.5968604, 1737135240.720736, 1737135240.8429432, 1737135240.9770064, 1737135241.1174772, 1737135241.2424288, 1737135241.3734415, 1737135241.5041394, 1737135241.637258, 1737135241.7649293, 1737135241.8982422, 1737135242.0240011, 1737135242.1640031, 1737135242.2947955, 1737135242.4212816, 1737135242.5562494, 1737135242.6857493, 1737135242.8147502, 1737135242.9505293, 1737135243.0784147, 1737135243.2199337, 1737135243.3522682, 1737135243.4918954, 1737135243.643161, 1737135243.791623, 1737135243.9300697, 1737135244.0644288, 1737135244.1981933, 1737135244.3236005, 1737135244.453133, 1737135244.5861948, 1737135244.7232628, 1737135244.851223, 1737135244.9928484, 1737135245.1287634, 1737135245.2938673, 1737135245.420872, 1737135245.5443766, 1737135245.674824, 1737135245.807239, 1737135245.9377284, 1737135246.0741644, 1737135246.1968355, 1737135246.334524, 1737135246.468502, 1737135246.6056898, 1737135246.7326536, 1737135246.8726397, 1737135247.0091472, 1737135247.1433785, 1737135247.2877445, 1737135247.4297972, 1737135247.5613189, 1737135247.6896677, 1737135247.8246267, 1737135247.961927, 1737135248.092222, 1737135248.2239811, 1737135248.3583317, 1737135248.4963918, 1737135248.6311538, 1737135248.764227, 1737135248.9132705, 1737135249.0462544, 1737135249.187689, 1737135249.3952167, 1737135249.6444428, 1737135249.8138568, 1737135249.950531, 1737135250.0912259, 1737135250.2220902, 1737135250.3598514, 1737135250.4929426, 1737135250.6246028, 1737135250.7641933, 1737135250.896688, 1737135251.0321424, 1737135251.1701014, 1737135251.3105133, 1737135251.4405415, 1737135251.5805764, 1737135251.7130067, 1737135251.8553128, 1737135251.984646, 1737135252.1222558, 1737135252.251187, 1737135252.393004, 1737135252.5299656, 1737135252.6614282, 1737135252.7922237, 1737135252.9260333, 1737135253.0536163, 1737135253.188063, 1737135253.3181312, 1737135253.4593883, 1737135253.5961337, 1737135253.7729573, 1737135253.9714057, 1737135254.1117275, 1737135254.2429757, 1737135254.3858058, 1737135254.5270097, 1737135254.8094587, 1737135254.9643595, 1737135255.1096635, 1737135255.2638881, 1737135255.4214292, 1737135255.5539107, 1737135255.6941588, 1737135255.8770385, 1737135256.0100644, 1737135256.1477833, 1737135256.2921295, 1737135256.4263325, 1737135256.5934873, 1737135256.7323258, 1737135256.864205, 1737135257.005052, 1737135257.1648817, 1737135257.3086157, 1737135257.4522312, 1737135257.589686, 1737135257.729738, 1737135257.862381, 1737135258.0046563, 1737135258.1427784, 1737135258.2822888, 1737135258.4154859, 1737135258.544628, 1737135258.6803906, 1737135258.8198013, 1737135258.962359, 1737135259.1541665, 1737135259.3190603], "score": 0, "output_len": 143, "output": "def bf(planet1, planet2):\n    planets = [\"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"]\n    if planet1 not in planets or planet2 not in planets:\n        return ()\n    index1 = planets.index(planet1)\n    index2 = planets.index(planet2)\n    if index1 > index2:\n        index1, index2 = index2, index1\n    return tuple(planets[index1+1:index2])\n", "input_len": 275}
{"id": "HumanEval/149", "model_memory": 49848.0, "time_taken": 8.836681842803955, "input_kv_memory": 50462.0, "memory_usage": [50462.0, 50522.0, 50522.0, 50522.0, 50522.0, 50522.0, 50522.0, 50522.0, 50522.0, 50522.0, 50522.0, 50522.0, 50522.0, 50522.0, 50522.0, 50522.0, 50522.0, 50522.0, 50522.0, 50522.0, 50522.0, 50522.0, 50522.0, 50522.0, 50522.0, 50522.0, 50522.0, 50522.0, 50522.0, 50522.0, 49848.0, 49848.0, 50068.0, 50144.0, 50144.0, 50144.0, 50144.0, 50144.0, 50144.0, 50144.0, 50144.0, 50144.0, 50144.0, 50144.0, 50144.0, 50144.0, 50144.0, 50144.0, 50144.0, 50144.0, 50144.0, 50144.0, 50144.0, 50144.0, 50144.0, 50144.0, 50144.0, 50144.0, 50144.0, 50144.0, 50144.0, 49696.0, 49470.0, 49510.0, 49766.0, 49766.0], "time_metric": [1737135259.8415, 1737135259.9659193, 1737135260.0884604, 1737135260.2215757, 1737135260.3459146, 1737135260.4735146, 1737135260.591117, 1737135260.7215354, 1737135260.8442695, 1737135260.972511, 1737135261.0961607, 1737135261.2262244, 1737135261.3503776, 1737135261.4799342, 1737135261.6004488, 1737135261.7193327, 1737135261.839591, 1737135261.967906, 1737135262.0926557, 1737135262.2131243, 1737135262.3431711, 1737135262.481925, 1737135262.6165154, 1737135262.7538836, 1737135262.8873477, 1737135263.0185297, 1737135263.1581252, 1737135263.2887666, 1737135263.4193218, 1737135263.5551374, 1737135263.6952753, 1737135263.8172367, 1737135263.9558876, 1737135264.0969744, 1737135264.2221806, 1737135264.3526528, 1737135264.4815218, 1737135264.6138961, 1737135264.7470114, 1737135264.892239, 1737135265.01586, 1737135265.1389706, 1737135265.2712793, 1737135265.400516, 1737135265.5362744, 1737135265.667283, 1737135265.7909746, 1737135265.9154625, 1737135266.0419543, 1737135266.1767693, 1737135266.3031404, 1737135266.4404073, 1737135266.5736375, 1737135266.713374, 1737135266.8469517, 1737135266.972693, 1737135267.0983288, 1737135267.2314382, 1737135267.360475, 1737135267.4883096, 1737135267.6208427, 1737135267.7675495, 1737135267.9077451, 1737135268.0466206, 1737135268.1973407, 1737135268.3299432], "score": 0, "output_len": 61, "output": "def sorted_list_sum(lst):\n    filtered_list = [word for word in lst if len(word) % 2 == 0]\n    filtered_list.sort(key=lambda x: (len(x), x))\n    return filtered_list\n", "input_len": 234}
{"id": "HumanEval/150", "model_memory": 49092.0, "time_taken": 12.671494960784912, "input_kv_memory": 49372.0, "memory_usage": [49372.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49408.0, 49408.0, 49408.0, 49408.0, 49408.0, 49408.0, 49408.0, 49408.0, 49408.0, 49408.0, 49408.0, 49408.0, 49092.0, 49092.0, 49144.0, 49572.0, 49572.0, 49572.0, 49572.0, 49572.0, 49572.0, 49572.0, 49572.0, 49572.0, 49572.0, 49572.0, 49572.0, 49572.0, 49572.0, 49572.0, 49572.0, 49572.0, 49592.0, 49592.0, 49592.0, 49612.0, 49612.0, 49612.0, 49612.0, 49612.0, 49612.0, 49612.0, 49612.0, 49612.0, 49296.0, 49296.0, 49728.0, 49776.0], "time_metric": [1737135268.80903, 1737135268.9387252, 1737135269.063723, 1737135269.191103, 1737135269.3257158, 1737135269.4522586, 1737135269.5750735, 1737135269.6964955, 1737135269.829817, 1737135269.957573, 1737135270.0806284, 1737135270.2026122, 1737135270.3296995, 1737135270.4618766, 1737135270.5915701, 1737135270.7214806, 1737135270.8479033, 1737135270.9785666, 1737135271.1165333, 1737135271.237566, 1737135271.3631568, 1737135271.488208, 1737135271.6217232, 1737135271.75166, 1737135271.8834336, 1737135272.022821, 1737135272.1655579, 1737135272.3039405, 1737135272.434799, 1737135272.5756457, 1737135272.7080636, 1737135272.8526652, 1737135272.9925742, 1737135273.1217835, 1737135273.248858, 1737135273.38114, 1737135273.52289, 1737135273.674398, 1737135273.8055644, 1737135273.932983, 1737135274.0582893, 1737135274.1881726, 1737135274.3214045, 1737135274.4535084, 1737135274.584616, 1737135274.713445, 1737135274.8533907, 1737135274.986688, 1737135275.1472805, 1737135275.28052, 1737135275.4163396, 1737135275.5536108, 1737135275.710134, 1737135275.837703, 1737135275.965934, 1737135276.1054072, 1737135276.2357972, 1737135276.3647323, 1737135276.5840526, 1737135276.7793944, 1737135276.9101508, 1737135277.0505407, 1737135277.1818247, 1737135277.3086388, 1737135277.4338381, 1737135277.5601628, 1737135277.6942163, 1737135277.822481, 1737135277.953577, 1737135278.0851634, 1737135278.2183397, 1737135278.345514, 1737135278.4787123, 1737135278.618473, 1737135278.750548, 1737135278.8900812, 1737135279.0218153, 1737135279.1565564, 1737135279.2869358, 1737135279.4253078, 1737135279.5566952, 1737135279.6876304, 1737135279.821634, 1737135279.961435, 1737135280.0961173, 1737135280.2760053, 1737135280.435449, 1737135280.58656, 1737135280.725276, 1737135280.9768426, 1737135281.1702569], "score": 0, "output_len": 89, "output": "def x_or_y(n, x, y):\n    def is_prime(num):\n        if num <= 1:\n            return False\n        for i in range(2, int(num**0.5) + 1):\n            if num % i == 0:\n                return False\n        return True\n\n    return x if is_prime(n) else y\n", "input_len": 128}
{"id": "HumanEval/151", "model_memory": 49460.0, "time_taken": 14.330452680587769, "input_kv_memory": 49892.0, "memory_usage": [49892.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49940.0, 49460.0, 49460.0, 50092.0, 50234.0, 50234.0, 50234.0, 50234.0, 50234.0, 50234.0, 50234.0, 50234.0, 50234.0, 50234.0, 50234.0, 50234.0, 50234.0, 50234.0, 50234.0, 50234.0, 50234.0, 50234.0, 50234.0, 50234.0, 50234.0, 50234.0, 50234.0, 50234.0, 49754.0, 49754.0, 50460.0, 50528.0, 50528.0], "time_metric": [1737135281.6827104, 1737135281.8092272, 1737135281.9804468, 1737135282.150277, 1737135282.3209343, 1737135282.450725, 1737135282.5795193, 1737135282.7043076, 1737135282.8314455, 1737135282.9626691, 1737135283.0864286, 1737135283.230379, 1737135283.3565211, 1737135283.4776182, 1737135283.606708, 1737135283.7329547, 1737135283.8599882, 1737135284.0024672, 1737135284.1897738, 1737135284.3465931, 1737135284.4738557, 1737135284.6005692, 1737135284.724829, 1737135284.8481212, 1737135284.9854171, 1737135285.11311, 1737135285.2433558, 1737135285.3792858, 1737135285.5065262, 1737135285.6326258, 1737135285.7669418, 1737135285.9199495, 1737135286.0738046, 1737135286.2224588, 1737135286.3866591, 1737135286.5509536, 1737135286.7332747, 1737135286.863393, 1737135286.9933202, 1737135287.1349576, 1737135287.308642, 1737135287.4582438, 1737135287.5975122, 1737135287.7582703, 1737135287.8920667, 1737135288.0993378, 1737135288.2298603, 1737135288.3546996, 1737135288.482746, 1737135288.607856, 1737135288.7439706, 1737135288.888395, 1737135289.0619807, 1737135289.219771, 1737135289.3651059, 1737135289.5224972, 1737135289.6578226, 1737135289.8109612, 1737135289.973074, 1737135290.1213841, 1737135290.2779098, 1737135290.410742, 1737135290.538018, 1737135290.6691103, 1737135290.7990263, 1737135290.9418066, 1737135291.0723727, 1737135291.201955, 1737135291.4856474, 1737135291.6142051, 1737135291.7523634, 1737135291.879652, 1737135292.0104141, 1737135292.1427495, 1737135292.276408, 1737135292.4009452, 1737135292.5273845, 1737135292.6591036, 1737135292.7969058, 1737135292.9318461, 1737135293.083531, 1737135293.27209, 1737135293.410303, 1737135293.5539699, 1737135293.7722926, 1737135293.9033635, 1737135294.0348525, 1737135294.164747, 1737135294.2928953, 1737135294.4232743, 1737135294.5574648, 1737135294.6918664, 1737135294.8209236, 1737135294.9513886, 1737135295.0881686, 1737135295.3965786, 1737135295.5319998, 1737135295.6597714], "score": 0, "output_len": 49, "output": "def double_the_difference(lst):\n    return sum(x**2 * 2 for x in lst if x > 0 and isinstance(x, int) and x % 2 != 0)\n", "input_len": 187}
{"id": "HumanEval/152", "model_memory": 50048.0, "time_taken": 6.340391635894775, "input_kv_memory": 50754.0, "memory_usage": [50754.0, 50822.0, 50822.0, 50822.0, 50822.0, 50822.0, 50822.0, 50822.0, 50822.0, 50822.0, 50822.0, 50498.0, 50048.0, 50048.0, 50768.0, 50918.0, 50918.0, 50918.0, 50918.0, 50918.0, 50918.0, 50918.0, 50918.0, 50918.0, 50918.0, 50918.0, 50918.0, 50918.0, 50918.0, 50918.0, 50918.0, 50918.0, 50918.0, 50918.0, 50918.0, 50918.0, 50860.0, 50144.0, 50144.0, 50864.0, 51014.0, 51014.0, 51014.0], "time_metric": [1737135296.228002, 1737135296.369217, 1737135296.514267, 1737135296.6609688, 1737135296.7876868, 1737135296.9167762, 1737135297.046799, 1737135297.1703134, 1737135297.2991462, 1737135297.4242496, 1737135297.5707095, 1737135297.7059176, 1737135297.8339014, 1737135297.9695532, 1737135298.27268, 1737135298.414458, 1737135298.5433943, 1737135298.6710691, 1737135298.7989926, 1737135298.931972, 1737135299.054455, 1737135299.1784146, 1737135299.311189, 1737135299.440533, 1737135299.5827162, 1737135299.7318828, 1737135299.8696575, 1737135300.0108168, 1737135300.1509054, 1737135300.2859385, 1737135300.418101, 1737135300.5535843, 1737135300.6862433, 1737135300.8128154, 1737135300.951, 1737135301.0790348, 1737135301.2113159, 1737135301.3486304, 1737135301.4743853, 1737135301.7796206, 1737135301.919608, 1737135302.0390275, 1737135302.1618989], "score": 0, "output_len": 41, "output": "```python\ndef compare(game, guess):\n    return [0 if g == s else abs(g - s) for g, s in zip(guess, game)]\n```", "input_len": 274}
{"id": "HumanEval/153", "model_memory": 50240.0, "time_taken": 29.325101613998413, "input_kv_memory": 51026.0, "memory_usagetime_metric": [1737135302.7919154, 1737135302.9606516, 1737135303.1146183, 1737135303.256026, 1737135303.3879194, 1737135303.5309107, 1737135303.6702383, 1737135303.8039467, 1737135303.9289649, 1737135304.0574915, 1737135304.1855516, 1737135304.3141513, 1737135304.4343731, 1737135304.556165, 1737135304.6813998, 1737135304.807698, 1737135304.9304295, 1737135305.0684323, 1737135305.18915, 1737135305.3146443, 1737135305.434216, 1737135305.5561228, 1737135305.6945572, 1737135305.833679, 1737135305.9568894, 1737135306.084518, 1737135306.2127721, 1737135306.3384469, 1737135306.4659698, 1737135306.5993474, 1737135306.7440536, 1737135306.867056, 1737135307.0028393, 1737135307.1271925, 1737135307.25852, 1737135307.3875751, 1737135307.5161152, 1737135307.6429322, 1737135307.762514, 1737135307.8981843, 1737135308.0324638, 1737135308.1731563, 1737135308.313504, 1737135308.4469845, 1737135308.6009934, 1737135308.7304227, 1737135308.860951, 1737135308.9958155, 1737135309.1301584, 1737135309.2667203, 1737135309.394808, 1737135309.5334976, 1737135309.6722145, 1737135309.8053737, 1737135309.959142, 1737135310.0884778, 1737135310.223875, 1737135310.3590956, 1737135310.49069, 1737135310.6342304, 1737135310.7663732, 1737135310.8942616, 1737135311.0392985, 1737135311.1868427, 1737135311.3173814, 1737135311.4541128, 1737135311.5819275, 1737135311.7084029, 1737135311.8363461, 1737135311.9698827, 1737135312.1021056, 1737135312.2367482, 1737135312.3686182, 1737135312.5364444, 1737135312.6685944, 1737135312.82828, 1737135312.9606104, 1737135313.0935512, 1737135313.2609837, 1737135313.3922281, 1737135313.5249424, 1737135313.6571941, 1737135313.7928655, 1737135313.9304643, 1737135314.0660279, 1737135314.1983027, 1737135314.3387828, 1737135314.473747, 1737135314.6248722, 1737135314.7610233, 1737135314.8955262, 1737135315.033494, 1737135315.1707957, 1737135315.3494542, 1737135315.4903316, 1737135315.624415, 1737135315.7543583, 1737135315.8840122, 1737135316.01571, 1737135316.155006, 1737135316.2902942, 1737135316.443956, 1737135316.6122873, 1737135316.7489264, 1737135316.886183, 1737135317.0176642, 1737135317.1669474, 1737135317.3092756, 1737135317.4417508, 1737135317.5815914, 1737135317.7162836, 1737135317.8499973, 1737135317.9825428, 1737135318.1156013, 1737135318.2475805, 1737135318.3839235, 1737135318.524714, 1737135318.6674778, 1737135318.8065152, 1737135318.9418557, 1737135319.0834627, 1737135319.2272892, 1737135319.374123, 1737135319.5068562, 1737135319.6487865, 1737135319.7869298, 1737135319.9255753, 1737135320.0860825, 1737135320.2207713, 1737135320.3610756, 1737135320.4936228, 1737135320.6848345, 1737135320.8590934, 1737135320.9876297, 1737135321.1200273, 1737135321.253941, 1737135321.3880777, 1737135321.5312889, 1737135321.675581, 1737135321.8138564, 1737135321.9528863, 1737135322.0951455, 1737135322.2290115, 1737135322.3671558, 1737135322.4947555, 1737135322.6286697, 1737135322.7637668, 1737135322.9129755, 1737135323.1412745, 1737135323.3594012, 1737135323.5070388, 1737135323.6560013, 1737135323.8055816, 1737135323.9500096, 1737135324.094986, 1737135324.2443955, 1737135324.4033906, 1737135324.555268, 1737135324.775547, 1737135324.9295099, 1737135325.0764298, 1737135325.2318034, 1737135325.3783379, 1737135325.5231383, 1737135325.6722407, 1737135325.8240879, 1737135325.9788172, 1737135326.261994, 1737135326.5210688, 1737135326.7020366, 1737135326.8594534, 1737135327.0005898, 1737135327.1552925, 1737135327.3238728, 1737135327.4957795, 1737135327.6444519, 1737135327.8522022, 1737135328.079547, 1737135328.3200011, 1737135328.5765572, 1737135328.8243651, 1737135329.0266688, 1737135329.2462971, 1737135329.4069953, 1737135329.5608401, 1737135329.7703366, 1737135329.9235668, 1737135330.1000218, 1737135330.2612538, 1737135330.5071933, 1737135330.6663697, 1737135330.8602114, 1737135331.032545, 1737135331.1921525, 1737135331.3330755, 1737135331.4867408, 1737135331.6391966], "score": 0, "output_len": 196, "output": "def Strongest_Extension(class_name, extensions):\n    strongest_extension = extensions[0]\n    max_strength = len(strongest_extension) - strongest_extension.count('a') - strongest_extension.count('e') - strongest_extension.count('i') - strongest_extension.count('o') - strongest_extension.count('u')\n\n    for extension in extensions[1:]:\n        current_strength = len(extension) - extension.count('a') - extension.count('e') - extension.count('i') - extension.count('o') - extension.count('u')\n        if current_strength > max_strength:\n            strongest_extension = extension\n            max_strength = current_strength\n\n    return f\"{class_name}.{strongest_extension}\"\n", "input_len": 329}
{"id": "HumanEval/154", "model_memory": 49512.0, "time_taken": 9.619389533996582, "input_kv_memory": 49974.0, "memory_usage": [49974.0, 50018.0, 50018.0, 50018.0, 50018.0, 50018.0, 50018.0, 50018.0, 50018.0, 50018.0, 50018.0, 50018.0, 50018.0, 50018.0, 50018.0, 50018.0, 50018.0, 50018.0, 50018.0, 50018.0, 50018.0, 50018.0, 49512.0, 49532.0, 49766.0, 49766.0, 49766.0, 49766.0, 49766.0, 49766.0, 49766.0, 49766.0, 49766.0, 49766.0, 49766.0, 49766.0, 49766.0, 49766.0, 49766.0, 49766.0, 49766.0, 49766.0, 49766.0, 49766.0, 49766.0, 49766.0, 49766.0, 49766.0, 49766.0, 49766.0, 49766.0, 49766.0, 49766.0, 49766.0, 49766.0, 49766.0, 49766.0, 49260.0, 49260.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0, 49514.0], "time_metric": [1737135332.1877203, 1737135332.3521566, 1737135332.5128558, 1737135332.6667643, 1737135332.8262475, 1737135332.9870808, 1737135333.1276512, 1737135333.2768743, 1737135333.426952, 1737135333.5864036, 1737135333.7241921, 1737135333.8661745, 1737135334.0071316, 1737135334.143441, 1737135334.2844288, 1737135334.4338052, 1737135334.576076, 1737135334.7210798, 1737135334.8614774, 1737135335.0005786, 1737135335.1403606, 1737135335.282071, 1737135335.4369159, 1737135335.5852544, 1737135335.744305, 1737135335.8889017, 1737135336.036993, 1737135336.1866229, 1737135336.3255544, 1737135336.4702861, 1737135336.6070106, 1737135336.743934, 1737135336.8852794, 1737135337.0189779, 1737135337.1663425, 1737135337.310761, 1737135337.439143, 1737135337.5731518, 1737135337.701186, 1737135337.8333619, 1737135337.966852, 1737135338.0931947, 1737135338.223219, 1737135338.354061, 1737135338.491165, 1737135338.6637464, 1737135338.800762, 1737135338.9299133, 1737135339.064144, 1737135339.1985903, 1737135339.3334966, 1737135339.4590006, 1737135339.588126, 1737135339.716624, 1737135339.8460813, 1737135339.9719458, 1737135340.1028254, 1737135340.236349, 1737135340.3670435, 1737135340.58779, 1737135340.7630024, 1737135340.8975859, 1737135341.0402591, 1737135341.174743, 1737135341.3089616, 1737135341.4370682], "score": 0, "output_len": 47, "output": "def cycpattern_check(a, b):\n    for i in range(len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False\n", "input_len": 172}
{"id": "HumanEval/155", "model_memory": 49008.0, "time_taken": 20.025144338607788, "input_kv_memory": 49248.0, "memory_usage": [49248.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49262.0, 49302.0, 49302.0, 49302.0, 49302.0, 49302.0, 49302.0, 49302.0, 49302.0, 49302.0, 49302.0, 49302.0, 49302.0, 49302.0, 49302.0, 49302.0, 49302.0, 49302.0, 49302.0, 49302.0, 49302.0, 49302.0, 49302.0, 49302.0, 49302.0, 49302.0, 49302.0, 49302.0, 49302.0, 49302.0, 49302.0, 49302.0, 49322.0, 49362.0, 49362.0, 49362.0, 49362.0, 49402.0, 49422.0, 49422.0, 49422.0, 49422.0, 49422.0, 49462.0, 49462.0, 49462.0, 49502.0, 49502.0, 49502.0, 49502.0, 49502.0, 49502.0, 49502.0, 49502.0, 49502.0, 49502.0, 49502.0, 49502.0, 49502.0, 49502.0, 49502.0, 49502.0, 49502.0, 49502.0, 49502.0, 49502.0, 49088.0, 49148.0, 49208.0, 49528.0, 49528.0, 49528.0, 49548.0, 49548.0, 49548.0, 49548.0, 49608.0, 49608.0, 49648.0, 49648.0, 49648.0, 49668.0, 49668.0, 49668.0, 49668.0, 49668.0, 49708.0, 49708.0, 49708.0, 49708.0, 49708.0, 49708.0, 49708.0, 49708.0, 49708.0, 49708.0, 49708.0, 49708.0, 49708.0, 49708.0, 49294.0, 49294.0, 49674.0, 49674.0, 49674.0, 49674.0, 49674.0, 49674.0, 49674.0], "time_metric": [1737135341.8969634, 1737135342.0396082, 1737135342.1660166, 1737135342.3002687, 1737135342.4281454, 1737135342.5542188, 1737135342.6846392, 1737135342.8092299, 1737135342.9320893, 1737135343.0692444, 1737135343.1963553, 1737135343.335493, 1737135343.4673212, 1737135343.5983303, 1737135343.72863, 1737135343.8490236, 1737135343.9765954, 1737135344.1074529, 1737135344.2360744, 1737135344.362587, 1737135344.49136, 1737135344.6244023, 1737135344.7548494, 1737135344.8890944, 1737135345.0161998, 1737135345.1451607, 1737135345.2770195, 1737135345.4198205, 1737135345.570466, 1737135345.7305403, 1737135345.8719537, 1737135346.0237668, 1737135346.164434, 1737135346.3088846, 1737135346.483204, 1737135346.6464617, 1737135346.7894654, 1737135346.9504514, 1737135347.0809267, 1737135347.234084, 1737135347.3594816, 1737135347.4945319, 1737135347.6265376, 1737135347.8243918, 1737135348.0038722, 1737135348.1335528, 1737135348.26585, 1737135348.40246, 1737135348.5239196, 1737135348.6586604, 1737135348.7862003, 1737135348.9225643, 1737135349.0720425, 1737135349.235715, 1737135349.3746045, 1737135349.5209153, 1737135349.6889458, 1737135349.8306537, 1737135350.0112238, 1737135350.146826, 1737135350.3431427, 1737135350.5454297, 1737135350.7016673, 1737135350.835997, 1737135350.9784, 1737135351.1106172, 1737135351.2405577, 1737135351.3694303, 1737135351.5217695, 1737135351.6857176, 1737135351.8113606, 1737135351.9703345, 1737135352.106209, 1737135352.2947698, 1737135352.4419947, 1737135352.6192596, 1737135352.7509048, 1737135352.8896756, 1737135353.0702505, 1737135353.2095206, 1737135353.342519, 1737135353.4732122, 1737135353.6102073, 1737135353.7413194, 1737135353.8710482, 1737135354.0075414, 1737135354.1722202, 1737135354.3512218, 1737135354.4778893, 1737135354.6116877, 1737135354.74295, 1737135354.8879514, 1737135355.0198863, 1737135355.1553535, 1737135355.2868044, 1737135355.4229252, 1737135355.5602272, 1737135355.6942668, 1737135355.8300383, 1737135356.0371037, 1737135356.214579, 1737135356.3663871, 1737135356.508887, 1737135356.646545, 1737135356.7796252, 1737135356.9130998, 1737135357.049254, 1737135357.1822956, 1737135357.3221228, 1737135357.4645271, 1737135357.6157506, 1737135357.7471263, 1737135357.8787143, 1737135358.043512, 1737135358.20222, 1737135358.3399792, 1737135358.4738042, 1737135358.6008034, 1737135358.734469, 1737135358.8791947, 1737135359.014352, 1737135359.155386, 1737135359.294994, 1737135359.4282887, 1737135359.5600398, 1737135359.6921222, 1737135359.8323746, 1737135359.971638, 1737135360.1018188, 1737135360.242271, 1737135360.3848827, 1737135360.517446, 1737135360.774025, 1737135360.932419, 1737135361.0683613, 1737135361.2124977, 1737135361.3511198, 1737135361.4819224, 1737135361.6140459], "score": 0, "output_len": 115, "output": "def even_odd_count(num):\n    even_count = 0\n    odd_count = 0\n    \n    if num < 0:\n        num = -num\n    \n    while num > 0:\n        digit = num % 10\n        if digit % 2 == 0:\n            even_count += 1\n        else:\n            odd_count += 1\n        num //= 10\n    \n    return (even_count, odd_count)\n", "input_len": 105}
{"id": "HumanEval/156", "model_memory": 49260.0, "time_taken": 32.169657707214355, "input_kv_memory": 49640.0, "memory_usage": [49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49680.0, 49680.0, 49680.0, 49680.0, 49680.0, 49700.0, 49700.0, 49700.0, 49700.0, 49700.0, 49700.0, 49700.0, 49700.0, 49700.0, 49700.0, 49700.0, 49700.0, 49700.0, 49700.0, 49700.0, 49700.0, 49700.0, 49700.0, 49700.0, 49700.0, 49740.0, 49740.0, 49760.0, 49760.0, 49760.0, 49760.0, 49760.0, 49760.0, 49760.0, 49780.0, 49800.0, 49800.0, 49800.0, 49800.0, 49800.0, 49820.0, 49820.0, 49820.0, 49820.0, 49860.0, 49860.0, 49860.0, 49860.0, 49860.0, 49880.0, 49880.0, 49880.0, 49880.0, 49880.0, 49880.0, 49880.0, 49880.0, 49880.0, 49880.0, 49880.0, 49920.0, 49920.0, 49940.0, 49940.0, 49940.0, 49980.0, 49980.0, 49980.0, 49980.0, 50020.0, 50020.0, 50040.0, 50040.0, 50040.0, 50040.0, 50040.0, 50040.0, 50040.0, 50040.0, 50040.0, 50040.0, 50040.0, 50040.0, 50040.0, 50040.0, 50040.0, 50040.0, 50040.0, 50040.0, 50040.0, 50040.0, 50040.0, 50060.0, 50060.0, 50060.0, 50060.0, 50060.0, 50060.0, 50060.0, 50060.0, 50080.0, 50100.0, 50100.0, 50100.0, 50100.0, 50100.0, 50100.0, 50100.0, 50100.0, 50140.0, 50140.0, 50140.0, 50140.0, 50140.0, 50140.0, 50140.0, 50140.0, 50140.0, 50140.0, 50140.0, 50140.0, 50140.0, 50140.0, 50140.0, 50140.0, 50140.0, 50140.0, 50140.0, 50160.0, 50160.0, 50160.0, 50160.0, 50160.0, 49600.0, 49640.0, 49978.0, 49998.0, 49998.0, 49998.0, 49998.0, 49998.0, 49998.0, 49998.0, 49998.0, 49998.0, 49998.0, 49998.0, 49998.0, 49998.0, 49998.0, 49998.0, 49998.0, 49998.0, 49998.0, 49998.0, 49998.0, 49998.0, 49998.0, 49998.0, 49998.0, 49998.0, 49998.0, 49998.0, 49998.0, 49998.0, 49998.0, 49998.0, 49978.0, 49438.0, 49598.0, 49816.0, 49816.0, 49816.0, 49816.0, 49816.0], "time_metric": [1737135362.1184685, 1737135362.2491915, 1737135362.3720725, 1737135362.504336, 1737135362.6331127, 1737135362.76157, 1737135362.895107, 1737135363.0162618, 1737135363.1470935, 1737135363.275949, 1737135363.4072251, 1737135363.5395622, 1737135363.6803172, 1737135363.815905, 1737135363.9417543, 1737135364.0633311, 1737135364.1933777, 1737135364.3163588, 1737135364.44586, 1737135364.5757763, 1737135364.7086995, 1737135364.8404226, 1737135364.9732652, 1737135365.099184, 1737135365.2383468, 1737135365.3598056, 1737135365.4919589, 1737135365.6210802, 1737135365.746926, 1737135365.8753145, 1737135366.0092301, 1737135366.1379097, 1737135366.2693346, 1737135366.3930664, 1737135366.5186899, 1737135366.6455715, 1737135366.7734854, 1737135366.8951075, 1737135367.0231912, 1737135367.1537426, 1737135367.2997744, 1737135367.4429674, 1737135367.5816233, 1737135367.716641, 1737135367.8584669, 1737135367.981584, 1737135368.1125765, 1737135368.2570658, 1737135368.396711, 1737135368.5259705, 1737135368.66512, 1737135368.8263206, 1737135368.9602747, 1737135369.0902712, 1737135369.2396233, 1737135369.3738542, 1737135369.502874, 1737135369.6299617, 1737135369.7636278, 1737135369.890181, 1737135370.0184133, 1737135370.1482382, 1737135370.2765913, 1737135370.4060674, 1737135370.5374615, 1737135370.6718447, 1737135370.8298383, 1737135370.963566, 1737135371.1063883, 1737135371.2446375, 1737135371.4080672, 1737135371.5502708, 1737135371.6874204, 1737135371.8179057, 1737135371.991675, 1737135372.1274745, 1737135372.257205, 1737135372.3903759, 1737135372.5221274, 1737135372.66792, 1737135372.7979906, 1737135372.9356534, 1737135373.0750935, 1737135373.290894, 1737135373.4619849, 1737135373.6024747, 1737135373.7265403, 1737135373.856192, 1737135373.9891121, 1737135374.1239011, 1737135374.2786014, 1737135374.41637, 1737135374.5625265, 1737135374.7357662, 1737135374.8854303, 1737135375.05009, 1737135375.190433, 1737135375.3662994, 1737135375.494261, 1737135375.6270235, 1737135375.7855113, 1737135375.9713204, 1737135376.1007383, 1737135376.2945933, 1737135376.429955, 1737135376.580846, 1737135376.7656925, 1737135376.896557, 1737135377.0266109, 1737135377.1600757, 1737135377.3054771, 1737135377.4950802, 1737135377.638158, 1737135377.8297567, 1737135377.964555, 1737135378.0965986, 1737135378.2798004, 1737135378.423739, 1737135378.5589883, 1737135378.6961539, 1737135378.892481, 1737135379.0827277, 1737135379.224096, 1737135379.3551433, 1737135379.4867392, 1737135379.6196892, 1737135379.7613027, 1737135379.950254, 1737135380.0880854, 1737135380.251978, 1737135380.3835607, 1737135380.6387134, 1737135380.8689408, 1737135381.0040698, 1737135381.1379867, 1737135381.3138223, 1737135381.4854465, 1737135381.6934814, 1737135381.8297296, 1737135381.9645221, 1737135382.1035972, 1737135382.2770045, 1737135382.4987783, 1737135382.6310403, 1737135382.7842233, 1737135382.9236476, 1737135383.0545385, 1737135383.1840796, 1737135383.3160415, 1737135383.4550195, 1737135383.5962589, 1737135383.7331064, 1737135383.9900694, 1737135384.1849031, 1737135384.3232894, 1737135384.4648528, 1737135384.6389155, 1737135384.7802172, 1737135384.9408226, 1737135385.097787, 1737135385.2337801, 1737135385.373433, 1737135385.5604043, 1737135385.6974573, 1737135385.836651, 1737135385.9794958, 1737135386.1168673, 1737135386.3491554, 1737135386.5122094, 1737135386.6539052, 1737135386.7919667, 1737135386.933532, 1737135387.0930748, 1737135387.2404745, 1737135387.379044, 1737135387.6005483, 1737135387.8328238, 1737135388.0675163, 1737135388.278265, 1737135388.4930902, 1737135388.6542044, 1737135388.798722, 1737135389.0208037, 1737135389.2184985, 1737135389.4057796, 1737135389.5891535, 1737135389.7729347, 1737135389.9855285, 1737135390.1225321, 1737135390.2702577, 1737135390.4075623, 1737135390.549899, 1737135390.7405128, 1737135390.8870158, 1737135391.0269077, 1737135391.1727583, 1737135391.3379655, 1737135391.4858382, 1737135391.620023, 1737135391.7554493, 1737135391.89328, 1737135392.0244124, 1737135392.1624448, 1737135392.3014982, 1737135392.437436, 1737135392.5834088, 1737135392.7222943, 1737135392.8645198, 1737135393.0076694, 1737135393.2017832, 1737135393.3758123, 1737135393.5123096, 1737135393.653526, 1737135393.7864842, 1737135393.9392004], "score": 0, "output_len": 214, "output": "def int_to_mini_roman(number):\n    if not 1 <= number <= 1000:\n        raise ValueError(\"Number must be between 1 and 1000\")\n\n    roman_numerals = {\n        1: 'i', 4: 'iv', 5: 'v', 9: 'ix',\n        10: 'x', 40: 'xl', 50: 'l', 90: 'xc',\n        100: 'c', 400: 'cd', 500: 'd', 900: 'cm',\n        1000: 'm'\n    }\n\n    result = ''\n    for value in sorted(roman_numerals.keys(), reverse=True):\n        while number >= value:\n            result += roman_numerals[value]\n            number -= value\n\n    return result.lower()\n", "input_len": 162}
{"id": "HumanEval/157", "model_memory": 49256.0, "time_taken": 7.940210580825806, "input_kv_memory": 49616.0, "memory_usage": [49616.0, 49634.0, 49634.0, 49634.0, 49634.0, 49256.0, 49256.0, 49636.0, 49636.0, 49636.0, 49636.0, 49636.0, 49636.0, 49636.0, 49636.0, 49636.0, 49636.0, 49636.0, 49636.0, 49636.0, 49636.0, 49636.0, 49636.0, 49636.0, 49636.0, 49636.0, 49636.0, 49636.0, 49636.0, 49636.0, 49636.0, 49636.0, 49636.0, 49636.0, 49636.0, 49636.0, 49636.0, 49636.0, 49636.0, 49636.0, 49636.0, 49636.0, 49636.0, 49636.0, 49636.0, 49636.0, 49258.0, 49258.0, 49358.0, 49638.0, 49638.0, 49638.0, 49638.0, 49638.0, 49638.0, 49638.0], "time_metric": [1737135394.4502385, 1737135394.5923169, 1737135394.724442, 1737135394.8521733, 1737135394.9783838, 1737135395.1140378, 1737135395.2481465, 1737135395.4947305, 1737135395.6220105, 1737135395.7523658, 1737135395.8790047, 1737135396.012803, 1737135396.1443124, 1737135396.272649, 1737135396.3958256, 1737135396.5178025, 1737135396.6475728, 1737135396.7702286, 1737135396.8976786, 1737135397.0241022, 1737135397.1518192, 1737135397.2798665, 1737135397.4119825, 1737135397.5834846, 1737135397.7658122, 1737135397.929525, 1737135398.066766, 1737135398.2065053, 1737135398.340873, 1737135398.4787085, 1737135398.621379, 1737135398.7577813, 1737135398.8874245, 1737135399.0178263, 1737135399.1499314, 1737135399.2886267, 1737135399.421241, 1737135399.5496242, 1737135399.6829307, 1737135399.8212528, 1737135399.9578185, 1737135400.0960019, 1737135400.224294, 1737135400.3564858, 1737135400.4988577, 1737135400.6363637, 1737135400.7796535, 1737135400.9192677, 1737135401.0534399, 1737135401.2464542, 1737135401.3921916, 1737135401.5229497, 1737135401.654373, 1737135401.788731, 1737135401.9191167, 1737135402.0491118], "score": 0, "output_len": 50, "output": "def right_angle_triangle(a, b, c):\n    sides = sorted([a, b, c])\n    return sides[0]**2 + sides[1]**2 == sides[2]**2\n", "input_len": 146}
{"id": "HumanEval/158", "model_memory": 49260.0, "time_taken": 15.307019710540771, "input_kv_memory": 49640.0, "memory_usage": [49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49660.0, 49660.0, 49660.0, 49660.0, 49660.0, 49700.0, 49700.0, 49700.0, 49700.0, 49700.0, 49700.0, 49700.0, 49700.0, 49700.0, 49700.0, 49700.0, 49700.0, 49700.0, 49700.0, 49700.0, 49700.0, 49700.0, 49700.0, 49700.0, 49700.0, 49700.0, 49700.0, 49700.0, 49760.0, 49760.0, 49760.0, 49760.0, 49760.0, 49760.0, 49760.0, 49760.0, 49260.0, 49260.0, 50164.0, 50422.0, 50422.0, 50422.0, 50422.0, 50442.0, 50442.0, 50442.0, 50442.0, 50442.0, 50482.0, 50482.0, 50482.0, 50482.0, 50502.0, 50502.0, 50502.0, 50502.0, 50502.0, 50542.0, 50542.0, 50542.0, 50542.0, 50542.0, 50542.0, 50542.0, 50542.0, 50542.0, 50542.0, 50542.0, 50542.0, 50542.0, 50602.0, 50602.0, 50602.0, 50602.0, 50602.0, 50602.0, 50602.0, 50102.0, 50102.0, 50298.0, 51138.0, 51324.0, 51324.0, 51324.0, 51324.0, 51324.0, 51324.0], "time_metric": [1737135402.5304034, 1737135402.6712306, 1737135402.8032143, 1737135402.9348598, 1737135403.0665216, 1737135403.1877441, 1737135403.3213797, 1737135403.4468534, 1737135403.5702546, 1737135403.6910057, 1737135403.8198984, 1737135403.9553847, 1737135404.0835123, 1737135404.2107394, 1737135404.3345654, 1737135404.461335, 1737135404.5878177, 1737135404.7209156, 1737135404.8413296, 1737135404.9681997, 1737135405.099342, 1737135405.2293434, 1737135405.3832946, 1737135405.5225127, 1737135405.655146, 1737135405.7896774, 1737135405.9164264, 1737135406.0551965, 1737135406.1836596, 1737135406.3117025, 1737135406.440644, 1737135406.5801616, 1737135406.7110894, 1737135406.8714128, 1737135407.0057387, 1737135407.136335, 1737135407.2890282, 1737135407.4170148, 1737135407.543429, 1737135407.6667361, 1737135407.8004189, 1737135407.9293478, 1737135408.0614293, 1737135408.1929061, 1737135408.3278172, 1737135408.4597373, 1737135408.5926852, 1737135408.71425, 1737135408.8411064, 1737135408.9772394, 1737135409.1142964, 1737135409.2525213, 1737135409.393931, 1737135409.5257602, 1737135409.662764, 1737135409.8011737, 1737135409.932169, 1737135410.0584466, 1737135410.2135983, 1737135410.3517647, 1737135410.47892, 1737135410.7676294, 1737135410.9007547, 1737135411.0333033, 1737135411.161095, 1737135411.3011358, 1737135411.436065, 1737135411.5652936, 1737135411.694855, 1737135411.8289444, 1737135411.9590359, 1737135412.0942328, 1737135412.2381504, 1737135412.3840349, 1737135412.5188684, 1737135412.6743202, 1737135412.8095086, 1737135412.9484808, 1737135413.0783463, 1737135413.2056968, 1737135413.340044, 1737135413.4789205, 1737135413.6107037, 1737135413.7449148, 1737135413.874689, 1737135414.0033314, 1737135414.13368, 1737135414.2879748, 1737135414.420523, 1737135414.550123, 1737135414.6820457, 1737135414.8099375, 1737135414.9405231, 1737135415.0691662, 1737135415.2057066, 1737135415.3375344, 1737135415.475844, 1737135415.613222, 1737135415.7677011, 1737135415.9079456, 1737135416.0403643, 1737135416.185761, 1737135416.3189447, 1737135416.6053247, 1737135416.7943966, 1737135416.9532287, 1737135417.1087816, 1737135417.2421308, 1737135417.3742182, 1737135417.5083349], "score": 0, "output_len": 109, "output": "def find_max(words):\n    max_word = \"\"\n    max_unique_chars = 0\n\n    for word in words:\n        unique_chars = len(set(word))\n        if unique_chars > max_unique_chars or (unique_chars == max_unique_chars and word < max_word):\n            max_unique_chars = unique_chars\n            max_word = word\n\n    return max_word\n", "input_len": 161}
{"id": "HumanEval/159", "model_memory": 50824.0, "time_taken": 8.06644344329834, "input_kv_memory": 51894.0, "memory_usage": [51894.0, 51986.0, 51986.0, 51986.0, 51986.0, 50824.0, 50824.0, 51080.0, 51510.0, 51578.0, 51578.0, 51578.0, 51578.0, 51578.0, 51578.0, 51578.0, 51578.0, 51578.0, 51578.0, 51578.0, 51578.0, 51578.0, 51578.0, 51578.0, 51578.0, 51578.0, 51578.0, 51578.0, 51578.0, 51578.0, 51578.0, 51578.0, 51578.0, 51578.0, 51578.0, 51578.0, 51578.0, 51578.0, 51578.0, 51578.0, 51578.0, 51578.0, 51578.0, 51578.0, 51578.0, 51578.0, 51578.0, 50416.0, 50416.0, 50494.0, 51102.0, 51170.0, 51170.0, 51170.0, 51170.0, 51170.0, 51170.0, 51170.0], "time_metric": [1737135418.1531746, 1737135418.2932885, 1737135418.4240289, 1737135418.546888, 1737135418.6769857, 1737135418.809865, 1737135418.9386442, 1737135419.0605435, 1737135419.289418, 1737135419.4222124, 1737135419.5515206, 1737135419.6845627, 1737135419.8038917, 1737135419.9343686, 1737135420.0577972, 1737135420.1872373, 1737135420.3079495, 1737135420.43123, 1737135420.5531826, 1737135420.6801827, 1737135420.8157368, 1737135420.9447522, 1737135421.0736601, 1737135421.2132776, 1737135421.337531, 1737135421.4720848, 1737135421.600599, 1737135421.7248795, 1737135421.8643022, 1737135421.9909031, 1737135422.1222665, 1737135422.24539, 1737135422.3639278, 1737135422.493983, 1737135422.6249986, 1737135422.7542434, 1737135422.8758035, 1737135423.0104978, 1737135423.1410787, 1737135423.2629488, 1737135423.3935647, 1737135423.512958, 1737135423.647098, 1737135423.782266, 1737135423.9142106, 1737135424.0365853, 1737135424.1682527, 1737135424.2964041, 1737135424.429532, 1737135424.5590308, 1737135424.801926, 1737135424.9326615, 1737135425.0678892, 1737135425.1952472, 1737135425.3254137, 1737135425.4813063, 1737135425.6074326, 1737135425.7396457], "score": 0, "output_len": 47, "output": "def eat(number, need, remaining):\n    total_eaten = number + min(need, remaining)\n    remaining -= min(need, remaining)\n    return [total_eaten, remaining]\n", "input_len": 370}
{"id": "HumanEval/160", "model_memory": 50008.0, "time_taken": 21.893372535705566, "input_kv_memory": 50694.0, "memory_usage": [50694.0, 50762.0, 50762.0, 50762.0, 50762.0, 50762.0, 50762.0, 50762.0, 50762.0, 50762.0, 50762.0, 50762.0, 50762.0, 50762.0, 50762.0, 50762.0, 50762.0, 50762.0, 50762.0, 50762.0, 50762.0, 50762.0, 50762.0, 50762.0, 50762.0, 50762.0, 50762.0, 50762.0, 50762.0, 50762.0, 50762.0, 50762.0, 50762.0, 50762.0, 50762.0, 50762.0, 50762.0, 50762.0, 50762.0, 50762.0, 50762.0, 50762.0, 50762.0, 50762.0, 50762.0, 50762.0, 50762.0, 50762.0, 50762.0, 50762.0, 50762.0, 50762.0, 50762.0, 50802.0, 50802.0, 50802.0, 50802.0, 50802.0, 50802.0, 50802.0, 50802.0, 50802.0, 50802.0, 50802.0, 50802.0, 50802.0, 50802.0, 50802.0, 50802.0, 50802.0, 50802.0, 50802.0, 50802.0, 50802.0, 50802.0, 50802.0, 50802.0, 50802.0, 50802.0, 50802.0, 50802.0, 50802.0, 50802.0, 50802.0, 50802.0, 50802.0, 50802.0, 50802.0, 50802.0, 50802.0, 50802.0, 50802.0, 50842.0, 50842.0, 50842.0, 50842.0, 50842.0, 50842.0, 50842.0, 50842.0, 50842.0, 50842.0, 50882.0, 50882.0, 50882.0, 50882.0, 50882.0, 50882.0, 50088.0, 50088.0, 50228.0, 50468.0, 50468.0, 50468.0, 50468.0, 50468.0, 50468.0, 50468.0, 50468.0, 50468.0, 50468.0, 50468.0, 50468.0, 50468.0, 50468.0, 50468.0, 50468.0, 50468.0, 50468.0, 50468.0, 50468.0, 50468.0, 50468.0, 50468.0, 50468.0, 50468.0, 50468.0, 50468.0, 50468.0, 50468.0, 50468.0, 50468.0, 50468.0, 50468.0, 50468.0, 50468.0, 50468.0, 50468.0, 49674.0, 49674.0, 49834.0, 50054.0, 50054.0, 50054.0, 50054.0, 50054.0, 50054.0, 50054.0], "time_metric": [1737135426.319534, 1737135426.4427707, 1737135426.5834103, 1737135426.7076616, 1737135426.8285663, 1737135426.959787, 1737135427.0917354, 1737135427.2110956, 1737135427.3378608, 1737135427.4619904, 1737135427.5887735, 1737135427.71262, 1737135427.840718, 1737135427.9671702, 1737135428.104299, 1737135428.2311242, 1737135428.3651588, 1737135428.4921846, 1737135428.6297507, 1737135428.757355, 1737135428.8722208, 1737135429.0045593, 1737135429.1272113, 1737135429.2568214, 1737135429.3768857, 1737135429.4993927, 1737135429.629902, 1737135429.755458, 1737135429.8808675, 1737135430.0077088, 1737135430.134586, 1737135430.279543, 1737135430.417289, 1737135430.546994, 1737135430.68451, 1737135430.8186035, 1737135430.949826, 1737135431.092591, 1737135431.220579, 1737135431.344153, 1737135431.4733987, 1737135431.6024015, 1737135431.7276995, 1737135431.8588955, 1737135431.9886434, 1737135432.1115475, 1737135432.2390008, 1737135432.373451, 1737135432.5072794, 1737135432.6320226, 1737135432.762587, 1737135432.884014, 1737135433.0063539, 1737135433.1447155, 1737135433.2789638, 1737135433.408146, 1737135433.540521, 1737135433.6674027, 1737135433.808294, 1737135433.9405584, 1737135434.0740936, 1737135434.2101703, 1737135434.3392947, 1737135434.4847462, 1737135434.63117, 1737135434.7667713, 1737135434.8958116, 1737135435.027355, 1737135435.1589015, 1737135435.2986314, 1737135435.432963, 1737135435.568505, 1737135435.7534192, 1737135435.911952, 1737135436.0551353, 1737135436.1875563, 1737135436.3280206, 1737135436.4659946, 1737135436.624619, 1737135436.7673585, 1737135436.9072158, 1737135437.0366933, 1737135437.1683025, 1737135437.3033564, 1737135437.4368439, 1737135437.5659053, 1737135437.7068026, 1737135437.8426332, 1737135437.97104, 1737135438.1019073, 1737135438.2337801, 1737135438.370919, 1737135438.5075474, 1737135438.6535661, 1737135438.7845635, 1737135438.922136, 1737135439.0586963, 1737135439.1913497, 1737135439.3265254, 1737135439.4555705, 1737135439.5891774, 1737135439.7286355, 1737135439.8657384, 1737135440.0070064, 1737135440.149666, 1737135440.2881625, 1737135440.4163673, 1737135440.5510986, 1737135440.69171, 1737135440.819044, 1737135440.9499876, 1737135441.0994077, 1737135441.2923515, 1737135441.4489505, 1737135441.5804098, 1737135441.7173345, 1737135441.8768735, 1737135442.0094345, 1737135442.1622837, 1737135442.299336, 1737135442.4353685, 1737135442.562604, 1737135442.7044344, 1737135442.8538673, 1737135442.9912043, 1737135443.1281316, 1737135443.2815568, 1737135443.4085789, 1737135443.5503078, 1737135443.7181964, 1737135443.8559163, 1737135443.9923532, 1737135444.1258633, 1737135444.2661731, 1737135444.4054654, 1737135444.5478544, 1737135444.7730331, 1737135444.974733, 1737135445.1327288, 1737135445.2792153, 1737135445.4046638, 1737135445.536093, 1737135445.6757011, 1737135445.8120024, 1737135445.9503639, 1737135446.0903451, 1737135446.2201052, 1737135446.3526034, 1737135446.4963896, 1737135446.6391625, 1737135446.777799, 1737135446.9167469, 1737135447.0791252, 1737135447.2470567, 1737135447.3879385, 1737135447.521071, 1737135447.655714, 1737135447.7847605], "score": 0, "output_len": 151, "output": "def do_algebra(operator, operand):\n    result = operand[0]\n    for i in range(1, len(operand)):\n        if operator[i-1] == '+':\n            result += operand[i]\n        elif operator[i-1] == '-':\n            result -= operand[i]\n        elif operator[i-1] == '*':\n            result *= operand[i]\n        elif operator[i-1] == '//':\n            result //= operand[i]\n        elif operator[i-1] == '**':\n            result **= operand[i]\n    return result\n", "input_len": 268}
{"id": "HumanEval/161", "model_memory": 49260.0, "time_taken": 13.016566753387451, "input_kv_memory": 49620.0, "memory_usage": [49620.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49640.0, 49260.0, 49260.0, 49440.0, 49556.0, 49556.0, 49556.0, 49556.0, 49556.0, 49556.0, 49556.0, 49556.0, 49556.0, 49556.0, 49556.0, 49556.0, 49556.0, 49556.0, 49556.0, 49556.0, 49556.0, 49556.0, 49556.0, 49556.0, 49556.0, 49556.0, 49556.0, 49556.0, 49556.0, 49556.0, 49556.0, 49556.0, 49556.0, 49556.0, 49556.0, 49556.0, 49556.0, 49556.0, 49556.0, 49556.0, 49556.0, 49556.0, 49556.0, 49176.0, 49176.0, 49356.0, 49472.0, 49472.0, 49472.0, 49472.0, 49472.0, 49472.0, 49472.0, 49472.0], "time_metric": [1737135448.3204048, 1737135448.4523306, 1737135448.576031, 1737135448.7117124, 1737135448.8385777, 1737135448.9648182, 1737135449.0846174, 1737135449.2236779, 1737135449.3442764, 1737135449.4721549, 1737135449.5980954, 1737135449.7294662, 1737135449.8511243, 1737135449.9831035, 1737135450.1136913, 1737135450.2602677, 1737135450.3851438, 1737135450.504625, 1737135450.6322384, 1737135450.756815, 1737135450.8824534, 1737135451.0079672, 1737135451.1323674, 1737135451.2640474, 1737135451.3889883, 1737135451.5133488, 1737135451.6421566, 1737135451.7671268, 1737135451.8949332, 1737135452.023721, 1737135452.1540208, 1737135452.2878942, 1737135452.4186587, 1737135452.5600073, 1737135452.6855233, 1737135452.8551576, 1737135453.010786, 1737135453.1434603, 1737135453.2966294, 1737135453.4264052, 1737135453.5566308, 1737135453.695457, 1737135453.824556, 1737135453.9602394, 1737135454.102745, 1737135454.2322571, 1737135454.3639777, 1737135454.4838603, 1737135454.6189613, 1737135454.744827, 1737135454.8681302, 1737135454.990976, 1737135455.1266022, 1737135455.2656226, 1737135455.403212, 1737135455.5598893, 1737135455.6943555, 1737135455.8248374, 1737135455.9798465, 1737135456.1085052, 1737135456.2344797, 1737135456.363044, 1737135456.504287, 1737135456.6463866, 1737135456.7797277, 1737135456.9073448, 1737135457.0325642, 1737135457.1593287, 1737135457.302535, 1737135457.4322884, 1737135457.5656536, 1737135457.6921139, 1737135457.8160663, 1737135457.9484634, 1737135458.083881, 1737135458.2099671, 1737135458.3526382, 1737135458.4888883, 1737135458.6201622, 1737135458.7449517, 1737135458.8777618, 1737135459.0195003, 1737135459.1532736, 1737135459.2856517, 1737135459.4212348, 1737135459.5654325, 1737135459.69702, 1737135459.8279474, 1737135459.9705436, 1737135460.100524, 1737135460.2413578, 1737135460.3697712, 1737135460.5027192, 1737135460.6349967, 1737135460.7658038, 1737135460.8942308, 1737135461.026754], "score": 0, "output_len": 78, "output": "def solve(s):\n    result = \"\"\n    has_letters = False\n    for char in s:\n        if char.isalpha():\n            result += char.swapcase()\n            has_letters = True\n        else:\n            result += char\n    return result[::-1] if not has_letters else result\n", "input_len": 148}
{"id": "HumanEval/162", "model_memory": 49092.0, "time_taken": 15.3113534450531, "input_kv_memory": 49372.0, "memory_usage": [49372.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49388.0, 49408.0, 49408.0, 49408.0, 49408.0, 49408.0, 49408.0, 49408.0, 49408.0, 49408.0, 49408.0, 49408.0, 49408.0, 49408.0, 49408.0, 49408.0, 49092.0, 49092.0, 49430.0, 49430.0, 49430.0, 49430.0, 49430.0, 49430.0, 49430.0, 49430.0, 49430.0, 49430.0, 49430.0, 49430.0, 49430.0, 49430.0, 49430.0, 49430.0, 49430.0, 49430.0, 49430.0, 49430.0, 49430.0, 49430.0, 49430.0, 49430.0, 49430.0, 49430.0, 49430.0, 49450.0, 49450.0, 49450.0, 49450.0, 49450.0, 49450.0, 49450.0, 49450.0, 49450.0, 49470.0, 49470.0, 49470.0, 49470.0, 49470.0, 49154.0, 49154.0, 49492.0, 49492.0, 49492.0, 49492.0, 49492.0, 49492.0, 49492.0, 49492.0], "time_metric": [1737135461.449005, 1737135461.5827818, 1737135461.725489, 1737135461.8536446, 1737135461.9752712, 1737135462.0971081, 1737135462.2283673, 1737135462.3535903, 1737135462.4775965, 1737135462.609231, 1737135462.7319782, 1737135462.8595686, 1737135462.9899561, 1737135463.114945, 1737135463.2435517, 1737135463.3765066, 1737135463.5042095, 1737135463.6373136, 1737135463.7747376, 1737135463.909806, 1737135464.0419056, 1737135464.180091, 1737135464.3097162, 1737135464.4409413, 1737135464.574541, 1737135464.7030916, 1737135464.8283336, 1737135464.9559278, 1737135465.0886812, 1737135465.2097602, 1737135465.3393486, 1737135465.4755304, 1737135465.6005733, 1737135465.7337852, 1737135465.862441, 1737135465.997097, 1737135466.1240747, 1737135466.253144, 1737135466.3772047, 1737135466.512405, 1737135466.6677299, 1737135466.8018403, 1737135466.933684, 1737135467.0679862, 1737135467.1918082, 1737135467.3274574, 1737135467.4558005, 1737135467.5878963, 1737135467.7161653, 1737135467.8447762, 1737135467.988161, 1737135468.1735876, 1737135468.3287802, 1737135468.4642804, 1737135468.593661, 1737135468.7247455, 1737135468.8543973, 1737135468.9935174, 1737135469.1543334, 1737135469.2847302, 1737135469.5515902, 1737135469.7366467, 1737135469.8689911, 1737135469.999521, 1737135470.1278827, 1737135470.2584887, 1737135470.3886664, 1737135470.5267425, 1737135470.6769626, 1737135470.8118641, 1737135470.940226, 1737135471.0742538, 1737135471.1991315, 1737135471.3350353, 1737135471.470472, 1737135471.598917, 1737135471.740756, 1737135471.869749, 1737135472.0015745, 1737135472.128892, 1737135472.2643652, 1737135472.3903103, 1737135472.5263374, 1737135472.6602798, 1737135472.7909029, 1737135472.9258833, 1737135473.0515077, 1737135473.182571, 1737135473.3120053, 1737135473.4468532, 1737135473.5882025, 1737135473.722233, 1737135473.8591168, 1737135473.9939375, 1737135474.1269794, 1737135474.266677, 1737135474.412619, 1737135474.544392, 1737135474.6740577, 1737135474.819538, 1737135474.960864, 1737135475.1005983, 1737135475.2485516, 1737135475.5060208, 1737135475.6741211, 1737135475.817695, 1737135475.9590597, 1737135476.0920906, 1737135476.2375407, 1737135476.3658714, 1737135476.4976602], "score": 0, "output_len": 105, "output": "import hashlib\n\ndef string_to_md5(text):\n    if not text:\n        return None\n    md5_hash = hashlib.md5(text.encode()).hexdigest()\n    return md5_hash\n\n# Example usage:\nprint(string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62')\n", "input_len": 120}
{"id": "HumanEval/163", "model_memory": 49176.0, "time_taken": 8.048425912857056, "input_kv_memory": 49158.0, "memory_usage": [49158.0, 49176.0, 49556.0, 49558.0, 49558.0, 49558.0, 49560.0, 49564.0, 49564.0, 49564.0, 49564.0, 49564.0, 49564.0, 49564.0, 49564.0, 49564.0, 49564.0, 49564.0, 49564.0, 49564.0, 49564.0, 49564.0, 49564.0, 49564.0, 49564.0, 49564.0, 49564.0, 49624.0, 49624.0, 49624.0, 49624.0, 49624.0, 49624.0, 49624.0, 49624.0, 49624.0, 49624.0, 49624.0, 49624.0, 49624.0, 49624.0, 49624.0, 49624.0, 49286.0, 49286.0, 49426.0, 49666.0, 49668.0, 49668.0, 49668.0, 49674.0, 49674.0, 49674.0, 49674.0], "time_metric": [1737135476.9836133, 1737135477.1228805, 1737135477.3571174, 1737135477.5114079, 1737135477.6533136, 1737135477.800922, 1737135477.9498427, 1737135478.1088152, 1737135478.2325122, 1737135478.3542986, 1737135478.4842052, 1737135478.6288478, 1737135478.7674172, 1737135478.9080076, 1737135479.0487087, 1737135479.189013, 1737135479.3160212, 1737135479.4684074, 1737135479.622144, 1737135479.7611513, 1737135479.8958642, 1737135480.0246897, 1737135480.15954, 1737135480.2905734, 1737135480.4384625, 1737135480.5725203, 1737135480.7220259, 1737135480.8536105, 1737135480.9974778, 1737135481.1443071, 1737135481.2764683, 1737135481.4566126, 1737135481.5964804, 1737135481.7370777, 1737135481.8996673, 1737135482.0605428, 1737135482.2005572, 1737135482.3358753, 1737135482.4957561, 1737135482.6331801, 1737135482.7861464, 1737135482.9167843, 1737135483.061756, 1737135483.2014148, 1737135483.3873851, 1737135483.5329788, 1737135483.6864698, 1737135483.8346043, 1737135483.9916406, 1737135484.1336215, 1737135484.2760394, 1737135484.4240632, 1737135484.5641606, 1737135484.7024682], "score": 0, "output_len": 53, "output": "def generate_integers(a, b):\n    if a > b:\n        a, b = b, a\n    return [i for i in range(a, b+1) if i % 2 == 0]\n", "input_len": 143}
